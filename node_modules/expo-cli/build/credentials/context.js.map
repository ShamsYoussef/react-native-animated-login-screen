{"version":3,"sources":["../../src/credentials/context.ts"],"names":["Context","user","_user","hasProjectContext","_hasProjectContext","projectDir","_projectDir","manifest","_manifest","Error","api","_apiClient","android","_androidApiClient","ios","_iosApiClient","appleCtx","_appleCtx","value","hasAppleCtx","ensureAppleCtx","options","logOwnerAndProject","isProxyUser","owner","username","slug","init","allowAnonymous","UserManager","getCurrentUserAsync","undefined","ensureLoggedInAsync","status","Doctor","validateWithoutNetworkAsync","FATAL","exp","IosApi","withProjectContext","AndroidApi","ApiV2","clientForUser"],"mappings":"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","sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport { ApiV2, Doctor, User, UserManager } from '@expo/xdl';\n\nimport { AppleCtx, authenticate } from '../appleApi';\nimport { AndroidApi } from './api/android';\nimport { IosApi } from './api/ios';\nimport log from '../log';\n\nexport interface IView {\n  open(ctx: Context): Promise<IView | null>;\n}\n\ntype AppleCtxOptions = {\n  appleId?: string;\n  appleIdPassword?: string;\n};\n\ntype CtxOptions = {\n  allowAnonymous?: boolean;\n};\n\nexport class Context {\n  _hasProjectContext: boolean = false;\n  _projectDir?: string;\n  _user?: User;\n  _manifest?: ExpoConfig;\n  _apiClient?: ApiV2;\n  _iosApiClient?: IosApi;\n  _androidApiClient?: AndroidApi;\n  _appleCtx?: AppleCtx;\n\n  get user(): User {\n    return this._user as User;\n  }\n  get hasProjectContext(): boolean {\n    return this._hasProjectContext;\n  }\n  get projectDir(): string {\n    return this._projectDir as string;\n  }\n  get manifest(): ExpoConfig {\n    if (!this._manifest) {\n      throw new Error('Manifest (app.json) not initialized.');\n    }\n    return this._manifest;\n  }\n  get api(): ApiV2 {\n    return this._apiClient as ApiV2;\n  }\n  get android(): AndroidApi {\n    return this._androidApiClient as AndroidApi;\n  }\n  get ios(): IosApi {\n    return this._iosApiClient as IosApi;\n  }\n  get appleCtx(): AppleCtx {\n    if (!this._appleCtx) {\n      throw new Error('Apple context not initialized.');\n    }\n    return this._appleCtx;\n  }\n  set manifest(value: ExpoConfig) {\n    this._manifest = value;\n  }\n\n  hasAppleCtx(): boolean {\n    return !!this._appleCtx;\n  }\n\n  async ensureAppleCtx(options: AppleCtxOptions = {}) {\n    if (!this._appleCtx) {\n      this._appleCtx = await authenticate(options);\n    }\n  }\n\n  logOwnerAndProject() {\n    // Figure out if User A is configuring credentials as admin for User B's project\n    const isProxyUser = this.manifest.owner && this.manifest.owner !== this.user.username;\n    log(\n      `Configuring credentials ${isProxyUser ? 'on behalf of' : 'for'} ${\n        this.manifest.owner ?? this.user.username\n      } in project ${this.manifest.slug}`\n    );\n  }\n\n  async init(projectDir: string, options: CtxOptions = {}) {\n    if (options.allowAnonymous) {\n      this._user = (await UserManager.getCurrentUserAsync()) || undefined;\n    } else {\n      this._user = await UserManager.ensureLoggedInAsync();\n    }\n    this._projectDir = projectDir;\n\n    // Check if we are in project context by looking for a manifest\n    const status = await Doctor.validateWithoutNetworkAsync(projectDir);\n    if (status !== Doctor.FATAL) {\n      const { exp } = getConfig(projectDir);\n      this._manifest = exp;\n      this._hasProjectContext = true;\n      this._iosApiClient = new IosApi(this.user).withProjectContext(this);\n      this._androidApiClient = new AndroidApi(this.user);\n      this.logOwnerAndProject();\n    } else {\n      /* This manager does not need to work in project context */\n      this._iosApiClient = new IosApi(this.user);\n      this._androidApiClient = new AndroidApi(this.user);\n    }\n\n    this._apiClient = ApiV2.clientForUser(this.user);\n  }\n}\n"],"file":"context.js"}