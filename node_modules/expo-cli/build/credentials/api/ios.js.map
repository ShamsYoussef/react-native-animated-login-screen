{"version":3,"sources":["../../../src/credentials/api/ios.ts"],"names":["IosApi","constructor","user","api","ApiV2","clientForUser","username","credentials","appCredentials","userCredentials","withProjectContext","ctx","hasProjectContext","manifest","owner","withApiClient","apiClient","getAllCredentials","shouldRefetch","_fetchAllCredentials","_fetchAllCredentialsApi","credentialLookupParameters","getAsync","getDistCert","experienceName","bundleIdentifier","_ensureAppCredentials","credIndex","findIndex","app","distCertExpoId","distCredentialsId","distCert","find","cred","id","_createDistCertApi","uploadUserCredentialParameters","postAsync","createDistCert","newDistCert","type","push","_updateDistCertApi","credentialsId","putAsync","updateDistCert","updatedDistCert","_deleteDistCertApi","deleteAsync","deleteDistCert","filter","map","record","_useDistCertApi","userCredentialsId","appLookupParameters","useDistCert","_createPushKeyApi","createPushKey","newPushKey","_updatePushKeyApi","updatePushKey","updatedPushKey","_deletePushKeyApi","deletePushKey","pushCredentialsId","getPushKey","pushKeyId","pushKey","_usePushKeyApi","usePushKey","getPushCert","getAppCredentials","pushId","pushP12","pushPassword","_deletePushCertApi","deletePushCert","_updateProvisioningProfileApi","uploadAppCredentialParameters","updateProvisioningProfile","provisioningProfile","appleTeam","teamId","Object","assign","getProvisioningProfile","_deleteProvisioningProfileApi","deleteProvisioningProfile","exists","i","length"],"mappings":"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","sourcesContent":["import { ApiV2, User } from '@expo/xdl';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\n\nimport invariant from 'invariant';\nimport log from '../../log';\nimport * as appleApi from '../../appleApi';\nimport {\n  IosAppCredentials,\n  IosCredentials,\n  IosDistCredentials,\n  IosPushCredentials,\n} from '../credentials';\nimport { Context } from '../context';\n\ntype CredentialFields = {\n  credentials: { [key: string]: any };\n};\n\ntype CredentialLookupParameters = {\n  owner: string;\n};\n\ntype AppLookupParameters = {\n  bundleIdentifier: string;\n  experienceName: string;\n} & CredentialLookupParameters;\n\ntype UploadUserCredentialParameters = CredentialFields & CredentialLookupParameters;\ntype UploadAppCredentialParameters = CredentialFields & AppLookupParameters;\n\nexport class IosApi {\n  api: ApiV2;\n  username: string;\n  credentials: IosCredentials;\n  shouldRefetch: boolean = true;\n\n  constructor(user: User) {\n    this.api = ApiV2.clientForUser(user);\n    this.username = user.username;\n    this.credentials = { appCredentials: [], userCredentials: [] };\n  }\n\n  withProjectContext(ctx: Context): IosApi {\n    invariant(ctx.hasProjectContext, 'Project context required');\n    this.username = ctx.manifest.owner ?? this.username;\n    return this;\n  }\n\n  withApiClient(apiClient: ApiV2) {\n    this.api = apiClient;\n    return this;\n  }\n\n  async getAllCredentials(): Promise<IosCredentials> {\n    if (this.shouldRefetch) {\n      await this._fetchAllCredentials();\n    }\n    return this.credentials;\n  }\n\n  async _fetchAllCredentialsApi(credentialLookupParameters: CredentialLookupParameters) {\n    return await this.api.getAsync('credentials/ios', credentialLookupParameters);\n  }\n  async _fetchAllCredentials() {\n    log('Fetching available credentials');\n    this.credentials = await this._fetchAllCredentialsApi({ owner: this.username });\n    this.shouldRefetch = false;\n  }\n\n  async getDistCert(\n    experienceName: string,\n    bundleIdentifier: string\n  ): Promise<IosDistCredentials | null> {\n    if (this.shouldRefetch) {\n      await this._fetchAllCredentials();\n    }\n    this._ensureAppCredentials(experienceName, bundleIdentifier);\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    const distCertExpoId = this.credentials.appCredentials[credIndex].distCredentialsId;\n    if (!distCertExpoId) {\n      return null;\n    }\n    const distCert = this.credentials.userCredentials.find(cred => cred.id === distCertExpoId) as\n      | IosDistCredentials\n      | undefined;\n    return distCert || null;\n  }\n\n  async _createDistCertApi(uploadUserCredentialParameters: UploadUserCredentialParameters) {\n    return await this.api.postAsync('credentials/ios/dist', uploadUserCredentialParameters);\n  }\n  async createDistCert(credentials: appleApi.DistCert): Promise<IosDistCredentials> {\n    const { id } = await this._createDistCertApi({\n      credentials,\n      owner: this.username,\n    });\n    const newDistCert: IosDistCredentials = { ...credentials, id, type: 'dist-cert' };\n    this.credentials.userCredentials.push(newDistCert);\n    return newDistCert;\n  }\n\n  async _updateDistCertApi(\n    credentialsId: number,\n    uploadUserCredentialParameters: UploadUserCredentialParameters\n  ) {\n    return await this.api.putAsync(\n      `credentials/ios/dist/${credentialsId}`,\n      uploadUserCredentialParameters\n    );\n  }\n  async updateDistCert(\n    credentialsId: number,\n    credentials: appleApi.DistCert\n  ): Promise<IosDistCredentials> {\n    const { id } = await this._updateDistCertApi(credentialsId, {\n      credentials,\n      owner: this.username,\n    });\n    const updatedDistCert: IosDistCredentials = { ...credentials, id, type: 'dist-cert' };\n    const credIndex = this.credentials.userCredentials.findIndex(({ id }) => id === credentialsId);\n    this.credentials.userCredentials[credIndex] = updatedDistCert;\n    return updatedDistCert;\n  }\n\n  async _deleteDistCertApi(\n    credentialsId: number,\n    credentialLookupParameters: CredentialLookupParameters\n  ): Promise<void> {\n    await this.api.deleteAsync(`credentials/ios/dist/${credentialsId}`, credentialLookupParameters);\n  }\n  async deleteDistCert(credentialsId: number) {\n    await this._deleteDistCertApi(credentialsId, { owner: this.username });\n    this.credentials.userCredentials = this.credentials.userCredentials.filter(\n      ({ id }) => id !== credentialsId\n    );\n    this.credentials.appCredentials = this.credentials.appCredentials.map(record => {\n      if (record.distCredentialsId === credentialsId) {\n        return omit(record, 'distCredentialsId') as IosAppCredentials;\n      }\n      return record;\n    });\n  }\n\n  async _useDistCertApi(\n    userCredentialsId: number,\n    appLookupParameters: AppLookupParameters\n  ): Promise<void> {\n    await this.api.postAsync('credentials/ios/use/dist', {\n      ...appLookupParameters,\n      userCredentialsId,\n    });\n  }\n  async useDistCert(experienceName: string, bundleIdentifier: string, userCredentialsId: number) {\n    await this._useDistCertApi(userCredentialsId, {\n      experienceName,\n      bundleIdentifier,\n      owner: this.username,\n    });\n    this._ensureAppCredentials(experienceName, bundleIdentifier);\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    this.credentials.appCredentials[credIndex].distCredentialsId = userCredentialsId;\n  }\n\n  async _createPushKeyApi(uploadUserCredentialParameters: UploadUserCredentialParameters) {\n    return await this.api.postAsync('credentials/ios/push', uploadUserCredentialParameters);\n  }\n  async createPushKey(credentials: appleApi.PushKey): Promise<IosPushCredentials> {\n    const { id } = await this._createPushKeyApi({\n      credentials,\n      owner: this.username,\n    });\n    const newPushKey: IosPushCredentials = { ...credentials, id, type: 'push-key' };\n    this.credentials.userCredentials.push(newPushKey);\n    return newPushKey;\n  }\n\n  async _updatePushKeyApi(\n    credentialsId: number,\n    uploadUserCredentialParameters: UploadUserCredentialParameters\n  ) {\n    return await this.api.putAsync(\n      `credentials/ios/push/${credentialsId}`,\n      uploadUserCredentialParameters\n    );\n  }\n  async updatePushKey(\n    credentialsId: number,\n    credentials: appleApi.PushKey\n  ): Promise<IosPushCredentials> {\n    const { id } = await this._updatePushKeyApi(credentialsId, {\n      credentials,\n      owner: this.username,\n    });\n    const updatedPushKey: IosPushCredentials = { ...credentials, id, type: 'push-key' };\n    const credIndex = this.credentials.userCredentials.findIndex(({ id }) => id === credentialsId);\n    this.credentials.userCredentials[credIndex] = updatedPushKey;\n    return updatedPushKey;\n  }\n\n  async _deletePushKeyApi(\n    credentialsId: number,\n    credentialLookupParameters: CredentialLookupParameters\n  ): Promise<void> {\n    await this.api.deleteAsync(`credentials/ios/push/${credentialsId}`, credentialLookupParameters);\n  }\n  async deletePushKey(credentialsId: number) {\n    await this._deletePushKeyApi(credentialsId, { owner: this.username });\n    this.credentials.userCredentials = this.credentials.userCredentials.filter(\n      ({ id }) => id !== credentialsId\n    );\n    this.credentials.appCredentials = this.credentials.appCredentials.map(record => {\n      if (record.pushCredentialsId === credentialsId) {\n        return omit(record, 'pushCredentialsId') as IosAppCredentials;\n      }\n      return record;\n    });\n  }\n  async getPushKey(\n    experienceName: string,\n    bundleIdentifier: string\n  ): Promise<IosPushCredentials | null> {\n    if (this.shouldRefetch) {\n      await this._fetchAllCredentials();\n    }\n    this._ensureAppCredentials(experienceName, bundleIdentifier);\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    const pushKeyId = this.credentials.appCredentials[credIndex].pushCredentialsId;\n    if (!pushKeyId) {\n      return null;\n    }\n    const pushKey = this.credentials.userCredentials.find(cred => cred.id === pushKeyId) as\n      | IosPushCredentials\n      | undefined;\n    return pushKey || null;\n  }\n\n  async _usePushKeyApi(\n    userCredentialsId: number,\n    appLookupParameters: AppLookupParameters\n  ): Promise<void> {\n    await this.api.postAsync('credentials/ios/use/push', {\n      ...appLookupParameters,\n      userCredentialsId,\n    });\n  }\n  async usePushKey(experienceName: string, bundleIdentifier: string, userCredentialsId: number) {\n    await this._usePushKeyApi(userCredentialsId, {\n      experienceName,\n      bundleIdentifier,\n      owner: this.username,\n    });\n    this._ensureAppCredentials(experienceName, bundleIdentifier);\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    this.credentials.appCredentials[credIndex].pushCredentialsId = userCredentialsId;\n  }\n  async getPushCert(\n    experienceName: string,\n    bundleIdentifier: string\n  ): Promise<{ pushId: string; pushP12: string; pushPassword: string } | null> {\n    const appCredentials = await this.getAppCredentials(experienceName, bundleIdentifier);\n    const pushId = appCredentials.credentials.pushId;\n    const pushP12 = appCredentials.credentials.pushP12;\n    const pushPassword = appCredentials.credentials.pushPassword;\n    if (!pushId || !pushP12 || !pushPassword) {\n      return null;\n    }\n    return { pushId, pushP12, pushPassword };\n  }\n\n  async _deletePushCertApi(appLookupParameters: AppLookupParameters): Promise<void> {\n    await this.api.postAsync(`credentials/ios/pushCert/delete`, appLookupParameters);\n  }\n  async deletePushCert(experienceName: string, bundleIdentifier: string) {\n    await this._deletePushCertApi({\n      experienceName,\n      bundleIdentifier,\n      owner: this.username,\n    });\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    this.credentials.appCredentials[credIndex].credentials = omit(\n      this.credentials.appCredentials[credIndex].credentials,\n      ['pushId', 'pushP12', 'pushPassword']\n    );\n  }\n\n  async _updateProvisioningProfileApi(\n    uploadAppCredentialParameters: UploadAppCredentialParameters\n  ): Promise<void> {\n    await this.api.postAsync(\n      `credentials/ios/provisioningProfile/update`,\n      uploadAppCredentialParameters\n    );\n  }\n  async updateProvisioningProfile(\n    experienceName: string,\n    bundleIdentifier: string,\n    provisioningProfile: appleApi.ProvisioningProfile,\n    appleTeam: Pick<appleApi.Team, 'id'>\n  ): Promise<appleApi.ProvisioningProfile> {\n    await this._updateProvisioningProfileApi({\n      experienceName,\n      bundleIdentifier,\n      credentials: { ...provisioningProfile, teamId: appleTeam.id },\n      owner: this.username,\n    });\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    Object.assign(this.credentials.appCredentials[credIndex].credentials, provisioningProfile);\n    return provisioningProfile;\n  }\n\n  async getAppCredentials(\n    experienceName: string,\n    bundleIdentifier: string\n  ): Promise<IosAppCredentials> {\n    if (this.shouldRefetch) {\n      await this._fetchAllCredentials();\n    }\n    this._ensureAppCredentials(experienceName, bundleIdentifier);\n    return this.credentials.appCredentials.find(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    )!;\n  }\n\n  async getProvisioningProfile(\n    experienceName: string,\n    bundleIdentifier: string\n  ): Promise<appleApi.ProvisioningProfile | null> {\n    const appCredentials = await this.getAppCredentials(experienceName, bundleIdentifier);\n    const provisioningProfile = appCredentials.credentials.provisioningProfile;\n    if (!provisioningProfile) {\n      return null;\n    }\n    return pick(appCredentials.credentials, [\n      'provisioningProfile',\n      'provisioningProfileId',\n    ]) as appleApi.ProvisioningProfile;\n  }\n\n  async _deleteProvisioningProfileApi(appLookupParameters: AppLookupParameters): Promise<void> {\n    await this.api.postAsync(`credentials/ios/provisioningProfile/delete`, appLookupParameters);\n  }\n  async deleteProvisioningProfile(experienceName: string, bundleIdentifier: string) {\n    await this._deleteProvisioningProfileApi({\n      experienceName,\n      bundleIdentifier,\n      owner: this.username,\n    });\n    const credIndex = this.credentials.appCredentials.findIndex(\n      app => app.experienceName === experienceName && app.bundleIdentifier === bundleIdentifier\n    );\n    this.credentials.appCredentials[credIndex].credentials = omit(\n      this.credentials.appCredentials[credIndex].credentials,\n      ['provisioningProfile', 'provisioningProfileId']\n    );\n  }\n\n  _ensureAppCredentials(experienceName: string, bundleIdentifier: string) {\n    const exists =\n      this.credentials.appCredentials.filter(\n        i => i.experienceName === experienceName && i.bundleIdentifier === bundleIdentifier\n      ).length !== 0;\n    if (!exists) {\n      this.credentials.appCredentials.push({\n        experienceName,\n        bundleIdentifier,\n        credentials: {},\n      });\n    }\n  }\n}\n"],"file":"ios.js"}