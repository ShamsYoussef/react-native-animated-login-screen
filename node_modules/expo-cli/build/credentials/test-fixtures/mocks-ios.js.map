{"version":3,"sources":["../../../src/credentials/test-fixtures/mocks-ios.ts"],"names":["today","Date","tomorrow","getTime","testSlug","testExperienceName","testBundleIdentifier","testAppleTeam","id","testProvisioningProfile","provisioningProfileId","provisioningProfile","testProvisioningProfiles","testProvisioningProfileFromApple","name","status","expires","distributionMethod","certificates","testProvisioningProfilesFromApple","testDistCert","certP12","certPassword","distCertSerialNumber","teamId","testIosDistCredential","type","testIosDistCredentials","testDistCertFromApple","created","ownerType","ownerName","ownerId","serialNumber","testDistCertsFromApple","testPushKey","apnsKeyP8","apnsKeyId","testIosPushCredential","testIosPushCredentials","testPushKeyFromApple","testPushKeysFromApple","testLegacyPushCert","pushId","pushP12","pushPassword","testAppCredential","experienceName","bundleIdentifier","distCredentialsId","pushCredentialsId","credentials","testAppCredentials","testAllCredentials","userCredentials","appCredentials","jester","kind","username","nickname","userId","picture","userMetadata","onboarded","currentConnection","sessionSecret","jester2","getApiV2MockCredentials","overridenMock","defaultCredentialsApiV2Mock","getAsync","jest","fn","getApiV2Mock","defaultMock","postAsync","putAsync","deleteAsync","uploadFormDataAsync","_requestAsync","testAppJson","version","slug","sdkVersion","ios","testAppJsonWithDifferentOwner","owner","getCtxMock","getDistCert","createDistCert","useDistCert","getPushKey","createPushKey","usePushKey","updateProvisioningProfile","getAppCredentials","getProvisioningProfile","appleCtx","appleId","appleIdPassword","team","fastlaneSession","ensureAppleCtx","user","hasAppleCtx","hasProjectContext","manifest"],"mappings":"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","sourcesContent":["import { User } from '@expo/xdl';\nimport merge from 'lodash/merge';\nimport {\n  DistCert,\n  DistCertInfo,\n  ProvisioningProfile,\n  ProvisioningProfileInfo,\n  PushKey,\n  PushKeyInfo,\n  Team,\n} from '../../appleApi';\nimport { IosDistCredentials, IosPushCredentials } from '../credentials';\n\n/*\nMock Credential objects for Jester\n*/\nconst today = new Date();\nconst tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\nexport const testSlug = 'testApp';\nexport const testExperienceName = `@jester/${testSlug}`;\nexport const testBundleIdentifier = 'test.com.app';\nexport const testAppleTeam: Team = {\n  id: 'test-team-id',\n};\nexport const testProvisioningProfile: ProvisioningProfile = {\n  provisioningProfileId: 'test-id',\n  provisioningProfile: 'test',\n};\nexport const testProvisioningProfiles = [testProvisioningProfile];\nexport const testProvisioningProfileFromApple: ProvisioningProfileInfo = {\n  name: 'test-name',\n  status: 'Active',\n  expires: tomorrow.getTime(),\n  distributionMethod: 'test',\n  certificates: [],\n  provisioningProfileId: testProvisioningProfile.provisioningProfileId,\n  provisioningProfile: testProvisioningProfile.provisioningProfile,\n};\nexport const testProvisioningProfilesFromApple = [testProvisioningProfileFromApple];\n\nexport const testDistCert: DistCert = {\n  certP12: 'test-p12',\n  certPassword: 'test-password',\n  distCertSerialNumber: 'test-serial',\n  teamId: 'test-team-id',\n};\nexport const testIosDistCredential: IosDistCredentials = {\n  id: 1,\n  type: 'dist-cert',\n  ...testDistCert,\n};\nexport const testIosDistCredentials = [testIosDistCredential];\nexport const testDistCertFromApple: DistCertInfo = {\n  id: 'test-id',\n  name: 'test-name',\n  status: 'Active',\n  created: today.getTime(),\n  expires: tomorrow.getTime(),\n  ownerType: 'test-owner-type',\n  ownerName: 'test-owner',\n  ownerId: 'test-id',\n  serialNumber: testIosDistCredential.distCertSerialNumber as string,\n};\nexport const testDistCertsFromApple = [testDistCertFromApple];\n\nexport const testPushKey: PushKey = {\n  apnsKeyP8: 'test-p8',\n  apnsKeyId: 'test-key-id',\n  teamId: 'test-team-id',\n};\nexport const testIosPushCredential: IosPushCredentials = {\n  id: 2,\n  type: 'push-key',\n  ...testPushKey,\n};\nexport const testIosPushCredentials = [testIosPushCredential];\nexport const testPushKeyFromApple: PushKeyInfo = {\n  id: testIosPushCredential.apnsKeyId,\n  name: 'test-name',\n};\nexport const testPushKeysFromApple = [testPushKeyFromApple];\nexport const testLegacyPushCert = {\n  pushId: 'test-push-id',\n  pushP12: 'test-push-p12',\n  pushPassword: 'test-push-password',\n};\nexport const testAppCredential = {\n  experienceName: testExperienceName,\n  bundleIdentifier: testBundleIdentifier,\n  distCredentialsId: testIosDistCredential.id,\n  pushCredentialsId: testIosPushCredential.id,\n  credentials: {\n    ...testProvisioningProfile,\n  },\n};\nexport const testAppCredentials = [testAppCredential];\nexport const testAllCredentials = {\n  userCredentials: [...testIosDistCredentials, ...testIosPushCredentials],\n  appCredentials: testAppCredentials,\n};\n\nexport const jester: User = {\n  kind: 'user',\n  username: 'jester',\n  nickname: 'jester',\n  userId: 'jester-id',\n  picture: 'jester-pic',\n  userMetadata: { onboarded: true },\n  currentConnection: 'Username-Password-Authentication',\n  sessionSecret: 'jester-secret',\n};\n\nexport const jester2: User = {\n  kind: 'user',\n  username: 'jester2',\n  nickname: 'jester2',\n  userId: 'jester2-id',\n  picture: 'jester2-pic',\n  userMetadata: { onboarded: true },\n  currentConnection: 'Username-Password-Authentication',\n  sessionSecret: 'jester2-secret',\n};\n\nexport function getApiV2MockCredentials(overridenMock: { [key: string]: any } = {}) {\n  const defaultCredentialsApiV2Mock = {\n    getAsync: jest.fn(() => testAllCredentials),\n  };\n  return getApiV2Mock(merge(defaultCredentialsApiV2Mock, overridenMock));\n}\nexport function getApiV2Mock(overridenMock: { [key: string]: any } = {}) {\n  const defaultMock = {\n    sessionSecret: 'test-session',\n    getAsync: jest.fn(),\n    postAsync: jest.fn(),\n    putAsync: jest.fn(),\n    deleteAsync: jest.fn(),\n    uploadFormDataAsync: jest.fn(),\n    _requestAsync: jest.fn(),\n  };\n  return merge(defaultMock, overridenMock);\n}\nexport const testAppJson = {\n  name: 'testing 123',\n  version: '0.1.0',\n  slug: testSlug,\n  sdkVersion: '33.0.0',\n  ios: { bundleIdentifier: testBundleIdentifier },\n};\nexport const testAppJsonWithDifferentOwner = {\n  ...testAppJson,\n  owner: jester2.username,\n};\n\nexport function getCtxMock(overridenMock: { [key: string]: any } = {}) {\n  const defaultMock = {\n    ios: {\n      getDistCert: jest.fn(),\n      createDistCert: jest.fn(() => testIosDistCredential),\n      useDistCert: jest.fn(),\n      getPushKey: jest.fn(),\n      createPushKey: jest.fn(() => testIosPushCredential),\n      usePushKey: jest.fn(),\n      updateProvisioningProfile: jest.fn(),\n      getAppCredentials: jest.fn(() => testAppCredentials),\n      getProvisioningProfile: jest.fn(),\n      credentials: testAllCredentials,\n    },\n    appleCtx: {\n      appleId: 'test-id',\n      appleIdPassword: 'test-password',\n      team: { id: 'test-team-id' },\n      fastlaneSession: 'test-fastlane-session',\n    },\n    ensureAppleCtx: jest.fn(),\n    user: jest.fn(),\n    hasAppleCtx: jest.fn(() => true),\n    hasProjectContext: true,\n    manifest: testAppJson,\n  };\n  return merge(defaultMock, overridenMock);\n}\n"],"file":"mocks-ios.js"}