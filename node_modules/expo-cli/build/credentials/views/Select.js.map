{"version":3,"sources":["../../../src/credentials/views/Select.ts"],"names":["SelectPlatform","open","ctx","platform","type","name","message","pageSize","Infinity","choices","view","SelectIosExperience","SelectAndroidExperience","CredentialsManager","get","changeMainView","iosCredentials","ios","getAllCredentials","projectSpecificActions","hasProjectContext","prompt","separator","value","question","action","handleAction","iosPushView","CreateIosPush","UpdateIosPush","RemoveIosPush","iosDistView","CreateIosDist","UpdateIosDist","RemoveIosDist","UseExistingPushNotification","withProjectContext","UseExistingDistributionCert","iosProvisionigProfileView","RemoveProvisioningProfile","Error","askAboutProjectMode","experienceName","user","username","manifest","slug","runProjectContext","androidView","ExperienceView","credentials","android","fetchAll","androidCredentials","map","cred","index","QuitError","constructor","Object","setPrototypeOf","prototype","DoQuit","runAsync","mainpage","AskQuit","selected","process","exit"],"mappings":"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","sourcesContent":["import invariant from 'invariant';\nimport prompt, { ChoiceType, Question } from '../../prompt';\nimport log from '../../log';\n\nimport * as androidView from './AndroidCredentials';\nimport * as iosPushView from './IosPushCredentials';\nimport * as iosDistView from './IosDistCert';\nimport * as iosProvisionigProfileView from './IosProvisioningProfile';\n\nimport { Context, IView } from '../context';\nimport { AndroidCredentials } from '../credentials';\nimport { CredentialsManager } from '../route';\nimport { displayAndroidCredentials, displayIosCredentials } from '../actions/list';\n\nexport class SelectPlatform implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const { platform } = await prompt([\n      {\n        type: 'list',\n        name: 'platform',\n        message: 'Select platform',\n        pageSize: Infinity,\n        choices: ['ios', 'android'],\n      },\n    ]);\n    const view = platform === 'ios' ? new SelectIosExperience() : new SelectAndroidExperience();\n    CredentialsManager.get().changeMainView(view);\n    return view;\n  }\n}\n\nexport class SelectIosExperience implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const iosCredentials = await ctx.ios.getAllCredentials();\n\n    await displayIosCredentials(iosCredentials);\n\n    const projectSpecificActions: ChoiceType<string>[] = ctx.hasProjectContext\n      ? [\n          prompt.separator('---- Current project actions ----'),\n          {\n            value: 'use-existing-push-ios',\n            name: 'Use existing Push Notifications Key in current project',\n          },\n          {\n            value: 'use-existing-dist-ios',\n            name: 'Use existing Distribution Certificate in current project',\n          },\n          // {\n          //   value: 'current-remove-push-ios',\n          //   name: 'Remove Push Notifactions credentials for current project',\n          // },\n          // {\n          //   value: 'current-remove-dist-ios',\n          //   name: 'Remove Distribution Certificate for current project',\n          // },\n          // {\n          //   value: 'current-remove-app-ios',\n          //   name: 'Remove all credentials for current project',\n          // },\n          prompt.separator('---- Account level actions ----'),\n        ]\n      : [];\n\n    const question: Question = {\n      type: 'list',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        ...projectSpecificActions,\n        { value: 'remove-provisioning-profile', name: 'Remove Provisioning Profile' },\n        { value: 'create-ios-push', name: 'Add new Push Notifications Key' },\n        { value: 'remove-ios-push', name: 'Remove Push Notification credentials' },\n        { value: 'update-ios-push', name: 'Update Push Notifications Key' },\n        { value: 'create-ios-dist', name: 'Add new Distribution Certificate' },\n        { value: 'remove-ios-dist', name: 'Remove Distribution Certificate' },\n        { value: 'update-ios-dist', name: 'Update Distribution Certificate' },\n      ],\n      pageSize: Infinity,\n    };\n\n    const { action } = await prompt(question);\n    return this.handleAction(ctx, action);\n  }\n\n  handleAction(ctx: Context, action: string): IView | null {\n    switch (action) {\n      case 'create-ios-push':\n        return new iosPushView.CreateIosPush();\n      case 'update-ios-push':\n        return new iosPushView.UpdateIosPush();\n      case 'remove-ios-push':\n        return new iosPushView.RemoveIosPush();\n      case 'create-ios-dist':\n        return new iosDistView.CreateIosDist();\n      case 'update-ios-dist':\n        return new iosDistView.UpdateIosDist();\n      case 'remove-ios-dist':\n        return new iosDistView.RemoveIosDist();\n      case 'use-existing-push-ios':\n        return iosPushView.UseExistingPushNotification.withProjectContext(ctx);\n      case 'use-existing-dist-ios':\n        return iosDistView.UseExistingDistributionCert.withProjectContext(ctx);\n      case 'remove-provisioning-profile':\n        return new iosProvisionigProfileView.RemoveProvisioningProfile();\n      default:\n        throw new Error('Unknown action selected');\n    }\n  }\n}\n\nexport class SelectAndroidExperience implements IView {\n  private androidCredentials: AndroidCredentials[] = [];\n  private askAboutProjectMode = true;\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (ctx.hasProjectContext && this.askAboutProjectMode) {\n      const experienceName = `@${ctx.user.username}/${ctx.manifest.slug}`;\n      const { runProjectContext } = await prompt([\n        {\n          type: 'confirm',\n          name: 'runProjectContext',\n          message: `You are currently in a directory with ${experienceName} experience. Do you want to select it?`,\n        },\n      ]);\n      if (runProjectContext) {\n        invariant(ctx.manifest.slug, 'app.json slug field must be set');\n        const view = new androidView.ExperienceView(experienceName);\n        CredentialsManager.get().changeMainView(view);\n        return view;\n      }\n    }\n    this.askAboutProjectMode = false;\n\n    const credentials = await ctx.android.fetchAll();\n    await displayAndroidCredentials(this.androidCredentials);\n\n    const question: Question = {\n      type: 'list',\n      name: 'experienceName',\n      message: 'Select application',\n      choices: this.androidCredentials.map((cred, index) => ({\n        name: cred.experienceName,\n        value: index,\n      })),\n      pageSize: Infinity,\n    };\n    const { experienceName } = await prompt(question);\n\n    return new androidView.ExperienceView(experienceName);\n  }\n}\n\nexport class QuitError extends Error {\n  constructor() {\n    super();\n\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, QuitError.prototype);\n  }\n}\n\nexport interface IQuit {\n  runAsync(mainpage: IView): Promise<IView>;\n}\n\nexport class DoQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    throw new QuitError();\n  }\n}\n\nexport class AskQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    const { selected } = await prompt([\n      {\n        type: 'list',\n        name: 'selected',\n        message: 'Do you want to quit Credential Manager',\n        choices: [\n          { value: 'exit', name: 'Quit Credential Manager' },\n          { value: 'mainpage', name: 'Go back to experience overview.' },\n        ],\n      },\n    ]);\n    if (selected === 'exit') {\n      process.exit(0);\n    }\n    return mainpage;\n  }\n}\n"],"file":"Select.js"}