{"version":3,"sources":["../../../src/credentials/views/AndroidCredentials.ts"],"names":["ExperienceView","constructor","experienceName","open","ctx","credentials","android","fetchCredentials","keystore","pushCredentials","log","newLine","action","type","name","message","choices","value","handleAction","context","selected","UpdateKeystore","RemoveKeystore","UpdateFcmKey","DownloadKeystore"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,cAAN,CAAsC;AACpCC,EAAAA,WAAW,CAASC,cAAT,EAAiC;AAAA,SAAxBA,cAAwB,GAAxBA,cAAwB;AAAE;;AAE9C,QAAMC,IAAN,CAAWC,GAAX,EAAgD;AAC9C,UAAMC,WAAW,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAYC,gBAAZ,CAA6B,KAAKL,cAAlC,CAA1B;;AAEA,QAAI,wBAAQG,WAAW,CAACG,QAApB,KAAiC,wBAAQH,WAAW,CAACI,eAApB,CAArC,EAA2E;AACzE,0BAAK,gCAA+B,KAAKP,cAAe,gBAAxD;AACD,KAFD,MAEO,IAAI,KAAKA,cAAT,EAAyB;AAC9BQ,qBAAIC,OAAJ;;AACA,YAAM,0CAA6BN,WAA7B,CAAN;;AACAK,qBAAIC,OAAJ;AACD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAM,uBAAO,CAC9B;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,OAAO,EAAE,yBAHX;AAIEC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAE,iBAAT;AAA4BH,QAAAA,IAAI,EAAE;AAAlC,OADO,EAEP;AAAEG,QAAAA,KAAK,EAAE,iBAAT;AAA4BH,QAAAA,IAAI,EAAE;AAAlC,OAFO,EAGP;AAAEG,QAAAA,KAAK,EAAE,gBAAT;AAA2BH,QAAAA,IAAI,EAAE;AAAjC,OAHO,EAIP;AAAEG,QAAAA,KAAK,EAAE,gBAAT;AAA2BH,QAAAA,IAAI,EAAE;AAAjC,OAJO,CAKP;AACA;AACA;AACA;AACA;AACA;AAVO;AAJX,KAD8B,CAAP,CAAzB;AAoBA,WAAO,KAAKI,YAAL,CAAkBd,GAAlB,EAAuBQ,MAAvB,CAAP;AACD;;AAEDM,EAAAA,YAAY,CAACC,OAAD,EAAmBC,QAAnB,EAAmD;AAC7D,YAAQA,QAAR;AACE,WAAK,iBAAL;AACE,eAAO,KAAIC,iCAAJ,EAAmB,KAAKnB,cAAxB,CAAP;;AACF,WAAK,iBAAL;AACE,eAAO,KAAIoB,iCAAJ,EAAmB,KAAKpB,cAAxB,CAAP;;AACF,WAAK,gBAAL;AACE,eAAO,KAAIqB,sCAAJ,EAAiB,KAAKrB,cAAtB,CAAP;;AACF,WAAK,gBAAL;AACE,eAAO,KAAIsB,mCAAJ,EAAqB,KAAKtB,cAA1B,CAAP;;AACF,WAAK,mBAAL;AACE,eAAO,IAAP;AAVJ;;AAYA,WAAO,IAAP;AACD;;AAnDmC","sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport prompt from '../../prompt';\nimport log from '../../log';\n\nimport { Context, IView } from '../context';\nimport { AndroidCredentials, FcmCredentials, keystoreSchema } from '../credentials';\nimport { displayAndroidAppCredentials } from '../actions/list';\nimport { askForUserProvided } from '../actions/promptForCredentials';\nimport { DownloadKeystore, RemoveKeystore, UpdateKeystore } from './AndroidKeystore';\nimport { UpdateFcmKey } from './AndroidPushCredentials';\n\nclass ExperienceView implements IView {\n  constructor(private experienceName: string) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const credentials = await ctx.android.fetchCredentials(this.experienceName);\n\n    if (isEmpty(credentials.keystore) && isEmpty(credentials.pushCredentials)) {\n      log(`No credentials available for ${this.experienceName} experience.\\n`);\n    } else if (this.experienceName) {\n      log.newLine();\n      await displayAndroidAppCredentials(credentials);\n      log.newLine();\n    }\n\n    const { action } = await prompt([\n      {\n        type: 'list',\n        name: 'action',\n        message: 'What do you want to do?',\n        choices: [\n          { value: 'update-keystore', name: 'Update upload Keystore' },\n          { value: 'remove-keystore', name: 'Remove keystore' },\n          { value: 'update-fcm-key', name: 'Update FCM Api Key' },\n          { value: 'fetch-keystore', name: 'Download Keystore from the Expo servers' },\n          // { value: 'fetch-public-cert', name: 'Extract public cert from Keystore' },\n          // {\n          //   value: 'fetch-private-signing-key',\n          //   name:\n          //     'Extract private signing key (required when migration to App Signing by Google Play)',\n          // },\n        ],\n      },\n    ]);\n\n    return this.handleAction(ctx, action);\n  }\n\n  handleAction(context: Context, selected: string): IView | null {\n    switch (selected) {\n      case 'update-keystore':\n        return new UpdateKeystore(this.experienceName);\n      case 'remove-keystore':\n        return new RemoveKeystore(this.experienceName);\n      case 'update-fcm-key':\n        return new UpdateFcmKey(this.experienceName);\n      case 'fetch-keystore':\n        return new DownloadKeystore(this.experienceName);\n      case 'fetch-public-cert':\n        return null;\n    }\n    return null;\n  }\n}\n\nexport { ExperienceView };\n"],"file":"AndroidCredentials.js"}