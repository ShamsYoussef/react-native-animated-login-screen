{"version":3,"sources":["../../../src/credentials/views/SetupIosProvisioningProfile.ts"],"names":["SetupIosProvisioningProfile","constructor","options","experienceName","bundleIdentifier","distCert","_experienceName","_bundleIdentifier","_distCert","_nonInteractive","nonInteractive","open","ctx","user","Error","appCredentials","ios","getAppCredentials","configuredProfile","getProvisioningProfile","configuredWithSameDistCert","distCredentialsId","id","iosProfileView","CreateOrReuseProvisioningProfile","hasAppleCtx","isValid","validateProfileWithoutApple","provisioningProfileId","chalk","yellow","profileFromApple","getAppleInfo","appleCtx","configureAndUpdateProvisioningProfile"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport log from '../../log';\nimport * as iosProfileView from './IosProvisioningProfile';\n\nimport { Context, IView } from '../context';\nimport { IosDistCredentials } from '../credentials';\n\ntype CliOptions = {\n  nonInteractive?: boolean;\n};\n\ntype ProvisioningProfileOptions = {\n  experienceName: string;\n  bundleIdentifier: string;\n  distCert: IosDistCredentials;\n} & CliOptions;\n\nexport class SetupIosProvisioningProfile implements IView {\n  _experienceName: string;\n  _bundleIdentifier: string;\n  _distCert: IosDistCredentials;\n  _nonInteractive: boolean;\n\n  constructor(options: ProvisioningProfileOptions) {\n    const { experienceName, bundleIdentifier, distCert } = options;\n    this._experienceName = experienceName;\n    this._bundleIdentifier = bundleIdentifier;\n    this._distCert = distCert;\n    this._nonInteractive = options.nonInteractive ?? false;\n  }\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (!ctx.user) {\n      throw new Error(`This workflow requires you to be logged in.`);\n    }\n\n    const appCredentials = await ctx.ios.getAppCredentials(\n      this._experienceName,\n      this._bundleIdentifier\n    );\n\n    // Try to use the profile we have on file first\n    const configuredProfile = await ctx.ios.getProvisioningProfile(\n      this._experienceName,\n      this._bundleIdentifier\n    );\n\n    // We dont have a profile on expo servers or\n    // The configured profile is associated with some other dist cert\n    const configuredWithSameDistCert = appCredentials.distCredentialsId === this._distCert.id;\n    if (!configuredProfile || !configuredWithSameDistCert) {\n      return new iosProfileView.CreateOrReuseProvisioningProfile({\n        experienceName: this._experienceName,\n        bundleIdentifier: this._bundleIdentifier,\n        distCert: this._distCert,\n        nonInteractive: this._nonInteractive,\n      });\n    }\n\n    if (!ctx.hasAppleCtx()) {\n      const isValid = await iosProfileView.validateProfileWithoutApple(\n        configuredProfile,\n        this._distCert,\n        this._bundleIdentifier\n      );\n      if (!isValid) {\n        throw new Error(`The provisioning profile we have on file is no longer valid.`);\n      }\n      return null;\n    }\n\n    // User uploaded profiles dont have ids - do best effort validation here\n    if (!configuredProfile.provisioningProfileId) {\n      log(\n        chalk.yellow(\n          \"The provisioning profile we have on file cannot be validated on Apple's servers.\"\n        )\n      );\n      const isValid = await iosProfileView.validateProfileWithoutApple(\n        configuredProfile,\n        this._distCert,\n        this._bundleIdentifier\n      );\n      if (!isValid) {\n        return new iosProfileView.CreateOrReuseProvisioningProfile({\n          experienceName: this._experienceName,\n          bundleIdentifier: this._bundleIdentifier,\n          distCert: this._distCert,\n          nonInteractive: this._nonInteractive,\n        });\n      }\n      return null;\n    }\n\n    const profileFromApple = await iosProfileView.getAppleInfo(\n      ctx.appleCtx,\n      this._bundleIdentifier,\n      configuredProfile\n    );\n\n    // Profile can't be found on Apple servers\n    if (!profileFromApple) {\n      return new iosProfileView.CreateOrReuseProvisioningProfile({\n        experienceName: this._experienceName,\n        bundleIdentifier: this._bundleIdentifier,\n        distCert: this._distCert,\n        nonInteractive: this._nonInteractive,\n      });\n    }\n\n    await iosProfileView.configureAndUpdateProvisioningProfile(\n      ctx,\n      this._experienceName,\n      this._bundleIdentifier,\n      this._distCert,\n      profileFromApple\n    );\n    return null;\n  }\n}\n"],"file":"SetupIosProvisioningProfile.js"}