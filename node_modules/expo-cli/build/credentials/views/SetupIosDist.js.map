{"version":3,"sources":["../../../src/credentials/views/SetupIosDist.ts"],"names":["SetupIosDist","constructor","options","experienceName","bundleIdentifier","_experienceName","_bundleIdentifier","_nonInteractive","nonInteractive","open","ctx","user","Error","configuredDistCert","ios","getDistCert","isValid","iosDistView","validateDistributionCertificate","CreateOrReuseDistributionCert"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAIO,MAAMA,YAAN,CAAoC;AAKzCC,EAAAA,WAAW,CAACC,OAAD,EAAuC;AAAA;;AAAA;;AAAA;;AAAA;;AAChD,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAuCF,OAA7C;AACA,SAAKG,eAAL,GAAuBF,cAAvB;AACA,SAAKG,iBAAL,GAAyBF,gBAAzB;AACA,SAAKG,eAAL,4BAAuBL,OAAO,CAACM,cAA/B,yEAAiD,KAAjD;AACD;;AAED,QAAMC,IAAN,CAAWC,GAAX,EAAgD;AAC9C,QAAI,CAACA,GAAG,CAACC,IAAT,EAAe;AACb,YAAM,IAAIC,KAAJ,CAAW,6CAAX,CAAN;AACD;;AAED,UAAMC,kBAAkB,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAQC,WAAR,CAC/B,KAAKV,eAD0B,EAE/B,KAAKC,iBAF0B,CAAjC;;AAKA,QAAIO,kBAAJ,EAAwB;AACtB;AACA,YAAMG,OAAO,GAAG,MAAMC,WAAW,GAACC,+BAAZ,CAA4CR,GAA5C,EAAiDG,kBAAjD,CAAtB;;AACA,UAAIG,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;AACF;;AAED,WAAO,KAAIC,WAAW,GAACE,6BAAhB,EAA8C;AACnDhB,MAAAA,cAAc,EAAE,KAAKE,eAD8B;AAEnDD,MAAAA,gBAAgB,EAAE,KAAKE,iBAF4B;AAGnDE,MAAAA,cAAc,EAAE,KAAKD;AAH8B,KAA9C,CAAP;AAKD;;AAnCwC","sourcesContent":["import * as iosDistView from './IosDistCert';\n\nimport { Context, IView } from '../context';\n\nexport class SetupIosDist implements IView {\n  _experienceName: string;\n  _bundleIdentifier: string;\n  _nonInteractive: boolean;\n\n  constructor(options: iosDistView.DistCertOptions) {\n    const { experienceName, bundleIdentifier } = options;\n    this._experienceName = experienceName;\n    this._bundleIdentifier = bundleIdentifier;\n    this._nonInteractive = options.nonInteractive ?? false;\n  }\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (!ctx.user) {\n      throw new Error(`This workflow requires you to be logged in.`);\n    }\n\n    const configuredDistCert = await ctx.ios.getDistCert(\n      this._experienceName,\n      this._bundleIdentifier\n    );\n\n    if (configuredDistCert) {\n      // we dont need to setup if we have a valid dist cert on file\n      const isValid = await iosDistView.validateDistributionCertificate(ctx, configuredDistCert);\n      if (isValid) {\n        return null;\n      }\n    }\n\n    return new iosDistView.CreateOrReuseDistributionCert({\n      experienceName: this._experienceName,\n      bundleIdentifier: this._bundleIdentifier,\n      nonInteractive: this._nonInteractive,\n    });\n  }\n}\n"],"file":"SetupIosDist.js"}