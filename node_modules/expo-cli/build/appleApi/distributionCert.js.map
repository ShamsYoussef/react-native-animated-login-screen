{"version":3,"sources":["../../src/appleApi/distributionCert.ts"],"names":["isDistCert","obj","certP12","certPassword","teamId","APPLE_DIST_CERTS_TOO_MANY_GENERATED_ERROR","chalk","underline","DistCertManager","constructor","appleCtx","ctx","list","spinner","start","args","appleId","appleIdPassword","team","id","String","inHouse","certs","travelingFastlane","manageDistCerts","succeed","create","result","teamName","name","err","stop","resultString","rawDump","match","CommandError","ErrorCodes","revoke","ids","join","format","status","expires","created","ownerName","expiresDate","_formatTimestamp","createdDate","timestamp","Date"],"mappings":"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","sourcesContent":["import ora from 'ora';\nimport dateformat from 'dateformat';\nimport chalk from 'chalk';\n\nimport CommandError, { ErrorCodes } from '../CommandError';\nimport { AppleCtx } from './authenticate';\nimport { runAction, travelingFastlane } from './fastlane';\n\nexport type DistCertInfo = {\n  id: string;\n  name: string;\n  status: string;\n  created: number;\n  expires: number;\n  ownerType: string;\n  ownerName: string;\n  ownerId: string;\n  serialNumber: string;\n};\n\nexport type DistCert = {\n  certId?: string;\n  certP12: string;\n  certPassword: string;\n  certPrivateSigningKey?: string;\n  distCertSerialNumber?: string;\n  teamId: string;\n  teamName?: string;\n};\n\nexport function isDistCert(obj: { [key: string]: any }): obj is DistCert {\n  return (\n    obj.certP12 &&\n    typeof obj.certP12 === 'string' &&\n    obj.certPassword &&\n    typeof obj.certPassword === 'string' &&\n    obj.teamId &&\n    typeof obj.teamId === 'string'\n  );\n}\n\nconst APPLE_DIST_CERTS_TOO_MANY_GENERATED_ERROR = `\nYou can have only ${chalk.underline(\n  'three'\n)} Apple Distribution Certificates generated on your Apple Developer account.\nPlease revoke the old ones or reuse existing from your other apps.\nPlease remember that Apple Distribution Certificates are not application specific!\n`;\n\nexport class DistCertManager {\n  ctx: AppleCtx;\n  constructor(appleCtx: AppleCtx) {\n    this.ctx = appleCtx;\n  }\n\n  async list(): Promise<DistCertInfo[]> {\n    const spinner = ora(`Getting Distribution Certificates from Apple...`).start();\n    const args = [\n      'list',\n      this.ctx.appleId,\n      this.ctx.appleIdPassword,\n      this.ctx.team.id,\n      String(this.ctx.team.inHouse),\n    ];\n    const { certs } = await runAction(travelingFastlane.manageDistCerts, args);\n    spinner.succeed();\n    return certs;\n  }\n  async create(): Promise<DistCert> {\n    const spinner = ora(`Creating Distribution Certificate on Apple Servers...`).start();\n    try {\n      const args = [\n        'create',\n        this.ctx.appleId,\n        this.ctx.appleIdPassword,\n        this.ctx.team.id,\n        String(this.ctx.team.inHouse),\n      ];\n      const result = {\n        ...(await runAction(travelingFastlane.manageDistCerts, args)),\n        teamId: this.ctx.team.id,\n        teamName: this.ctx.team.name,\n      };\n      spinner.succeed();\n      return result;\n    } catch (err) {\n      spinner.stop();\n      const resultString = err.rawDump?.resultString;\n      if (resultString && resultString.match(/Maximum number of certificates generated/)) {\n        throw new CommandError(\n          ErrorCodes.APPLE_DIST_CERTS_TOO_MANY_GENERATED_ERROR,\n          APPLE_DIST_CERTS_TOO_MANY_GENERATED_ERROR\n        );\n      }\n      throw err;\n    }\n  }\n  async revoke(ids: string[]) {\n    const spinner = ora(`Revoking Distribution Certificate on Apple Servers...`).start();\n    const args = [\n      'revoke',\n      this.ctx.appleId,\n      this.ctx.appleIdPassword,\n      this.ctx.team.id,\n      String(this.ctx.team.inHouse),\n      ids.join(','),\n    ];\n    await runAction(travelingFastlane.manageDistCerts, args);\n    spinner.succeed();\n  }\n\n  format({ name, id, status, expires, created, ownerName }: DistCertInfo): string {\n    const expiresDate = _formatTimestamp(expires);\n    const createdDate = _formatTimestamp(created);\n    return `${name} (${status}) - ID: ${id} - expires: ${expiresDate} (created: ${createdDate}) - owner: ${ownerName}`;\n  }\n}\n\nfunction _formatTimestamp(timestamp: number): string {\n  return dateformat(new Date(timestamp * 1000));\n}\n"],"file":"distributionCert.js"}