{"version":3,"sources":["../../../../../src/commands/upload/submission-service/android/ServiceAccountSource.ts"],"names":["ServiceAccountSourceType","getServiceAccountAsync","source","sourceType","path","handlePathSourceAsync","prompt","handlePromptSourceAsync","log","warn","_source","askForServiceAccountPathAsync","chalk","bold","terminalLink","filePath","name","message","default","type","validate"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;IAEKA,wB;;;WAAAA,wB;AAAAA,EAAAA,wB,CAAAA,wB;AAAAA,EAAAA,wB,CAAAA,wB;GAAAA,wB,wCAAAA,wB;;AAsBL,eAAeC,sBAAf,CAAsCC,MAAtC,EAAqF;AACnF,UAAQA,MAAM,CAACC,UAAf;AACE,SAAKH,wBAAwB,CAACI,IAA9B;AACE,aAAO,MAAMC,qBAAqB,CAACH,MAAD,CAAlC;;AACF,SAAKF,wBAAwB,CAACM,MAA9B;AACE,aAAO,MAAMC,uBAAuB,CAACL,MAAD,CAApC;AAJJ;AAMD;;AAED,eAAeG,qBAAf,CAAqCH,MAArC,EAAwF;AACtF,MAAI,EAAE,MAAM,gCAAaA,MAAM,CAACE,IAApB,CAAR,CAAJ,EAAwC;AACtCI,mBAAIC,IAAJ,CAAU,QAAOP,MAAM,CAACE,IAAK,iBAA7B;;AACA,WAAO,MAAMH,sBAAsB,CAAC;AAAEE,MAAAA,UAAU,EAAEH,wBAAwB,CAACM;AAAvC,KAAD,CAAnC;AACD;;AACD,SAAOJ,MAAM,CAACE,IAAd;AACD;;AAED,eAAeG,uBAAf,CAAuCG,OAAvC,EAA6F;AAC3F,QAAMN,IAAI,GAAG,MAAMO,6BAA6B,EAAhD;AACA,SAAO,MAAMV,sBAAsB,CAAC;AAClCE,IAAAA,UAAU,EAAEH,wBAAwB,CAACI,IADH;AAElCA,IAAAA;AAFkC,GAAD,CAAnC;AAID;;AAED,eAAeO,6BAAf,GAAgE;AAC9D,sBACG,GAAEH,eAAII,KAAJ,CAAUC,IAAV,CACD,uFADC,CAED,KAFF,GAGG,yDAAwDL,eAAIM,YAAJ,CACvD,iBADuD,EAEvD,kDAFuD,CAGvD,GAPN;AASA,QAAM;AAAEC,IAAAA;AAAF,MAAe,MAAM,uBAAO;AAChCC,IAAAA,IAAI,EAAE,UAD0B;AAEhCC,IAAAA,OAAO,EAAE,sCAFuB;AAGhCC,IAAAA,OAAO,EAAE,kDAHuB;AAIhCC,IAAAA,IAAI,EAAE,OAJ0B;AAKhCC,IAAAA,QAAQ,EAAE,MAAOhB,IAAP,IAAmD;AAC3D,UAAI,EAAE,MAAM,gCAAaA,IAAb,EAAmB,KAAnB,CAAR,CAAJ,EAAwC;AACtC,eAAQ,QAAOA,IAAK,iBAApB;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;AAX+B,GAAP,CAA3B;AAaA,SAAOW,QAAP;AACD","sourcesContent":["import prompt from '../../../../prompt';\nimport { existingFile } from '../../../../validators';\nimport log from '../../../../log';\n\nenum ServiceAccountSourceType {\n  path,\n  prompt,\n  // credentialsService,\n  // ...\n}\n\ninterface ServiceAccountSourceBase {\n  sourceType: ServiceAccountSourceType;\n}\n\ninterface ServiceAccountPathSource extends ServiceAccountSourceBase {\n  sourceType: ServiceAccountSourceType.path;\n  path: string;\n}\n\ninterface ServiceAccountPromptSource extends ServiceAccountSourceBase {\n  sourceType: ServiceAccountSourceType.prompt;\n}\n\nexport type ServiceAccountSource = ServiceAccountPathSource | ServiceAccountPromptSource;\n\nasync function getServiceAccountAsync(source: ServiceAccountSource): Promise<string> {\n  switch (source.sourceType) {\n    case ServiceAccountSourceType.path:\n      return await handlePathSourceAsync(source);\n    case ServiceAccountSourceType.prompt:\n      return await handlePromptSourceAsync(source);\n  }\n}\n\nasync function handlePathSourceAsync(source: ServiceAccountPathSource): Promise<string> {\n  if (!(await existingFile(source.path))) {\n    log.warn(`File ${source.path} doesn't exist.`);\n    return await getServiceAccountAsync({ sourceType: ServiceAccountSourceType.prompt });\n  }\n  return source.path;\n}\n\nasync function handlePromptSourceAsync(_source: ServiceAccountPromptSource): Promise<string> {\n  const path = await askForServiceAccountPathAsync();\n  return await getServiceAccountAsync({\n    sourceType: ServiceAccountSourceType.path,\n    path,\n  });\n}\n\nasync function askForServiceAccountPathAsync(): Promise<string> {\n  log(\n    `${log.chalk.bold(\n      'A Google Service Account JSON key is required to upload your app to Google Play Store'\n    )}.\\n` +\n      `If you're not sure what this is or how to create one, ${log.terminalLink(\n        'learn more here',\n        'https://expo.fyi/creating-google-service-account'\n      )}.`\n  );\n  const { filePath } = await prompt({\n    name: 'filePath',\n    message: 'Path to Google Service Account file:',\n    default: 'api-0000000000000000000-111111-aaaaaabbbbbb.json',\n    type: 'input',\n    validate: async (path: string): Promise<boolean | string> => {\n      if (!(await existingFile(path, false))) {\n        return `File ${path} doesn't exist.`;\n      } else {\n        return true;\n      }\n    },\n  });\n  return filePath;\n}\n\nexport { ServiceAccountSourceType, getServiceAccountAsync };\n"],"file":"ServiceAccountSource.js"}