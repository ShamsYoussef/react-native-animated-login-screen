{"version":3,"sources":["../../../../../src/commands/upload/submission-service/utils/files.ts"],"names":["pipeline","stream","downloadAppArchiveAsync","url","dest","downloadStream","got","on","fs","createWriteStream","uploadAppArchiveAsync","path","fileSize","stat","size","UploadType","SUBMISSION_APP_ARCHIVE"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,QAAQ,GAAG,uBAAUC,kBAAOD,QAAjB,CAAjB;;AAEA,eAAeE,uBAAf,CAAuCC,GAAvC,EAAoDC,IAApD,EAAmF;AACjF,QAAMC,cAAc,GAAGC,eAAIL,MAAJ,CAAWE,GAAX,EAAgBI,EAAhB,CAAmB,kBAAnB,EAAuC,wCAAvC,CAAvB;;AACA,QAAMP,QAAQ,CAACK,cAAD,EAAiBG,mBAAGC,iBAAH,CAAqBL,IAArB,CAAjB,CAAd;AACA,SAAOA,IAAP;AACD;;AAED,eAAeM,qBAAf,CAAqCC,IAArC,EAAoE;AAClE,QAAMC,QAAQ,GAAG,CAAC,MAAMJ,mBAAGK,IAAH,CAAQF,IAAR,CAAP,EAAsBG,IAAvC;AACA,SAAO,MAAM,4BACXC,sBAAWC,sBADA,EAEXL,IAFW,EAGX,uCAAsBC,QAAtB,CAHW,CAAb;AAKD","sourcesContent":["import stream from 'stream';\nimport { promisify } from 'util';\n\nimport fs from 'fs-extra';\nimport got from 'got';\n\nimport { UploadType, uploadAsync } from '../../../../uploads';\nimport { createProgressTracker } from '../../../utils/progress';\n\nconst pipeline = promisify(stream.pipeline);\n\nasync function downloadAppArchiveAsync(url: string, dest: string): Promise<string> {\n  const downloadStream = got.stream(url).on('downloadProgress', createProgressTracker());\n  await pipeline(downloadStream, fs.createWriteStream(dest));\n  return dest;\n}\n\nasync function uploadAppArchiveAsync(path: string): Promise<string> {\n  const fileSize = (await fs.stat(path)).size;\n  return await uploadAsync(\n    UploadType.SUBMISSION_APP_ARCHIVE,\n    path,\n    createProgressTracker(fileSize)\n  );\n}\n\nexport { downloadAppArchiveAsync, uploadAppArchiveAsync };\n"],"file":"files.js"}