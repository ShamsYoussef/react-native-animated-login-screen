{"version":3,"sources":["../../../../../src/commands/upload/submission-service/utils/travelingFastlane.ts"],"names":["runTravelingFastlaneAsync","command","args","envs","spawnOptions","env","process","stdio","stderr","res","JSON","parse","result","message","reason","rawDump","backtrace","map","i","join","Error"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,eAAeA,yBAAf,CACEC,OADF,EAEEC,IAFF,EAGEC,IAHF,EAImC;AACjC,QAAMC,YAA0B,GAAG;AACjCC,IAAAA,GAAG,EAAE,EACH,GAAGC,OAAO,CAACD,GADR;AAEH,SAAGF;AAFA,KAD4B;AAKjCI,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP;AAL0B,GAAnC;AAQA,QAAM;AAAEC,IAAAA;AAAF,MAAa,MAAM,2BAAWP,OAAX,EAAoBC,IAApB,EAA0BE,YAA1B,CAAzB;AAEA,QAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAZ;;AACA,MAAIC,GAAG,CAACG,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,WAAOH,GAAP;AACD,GAFD,MAEO;AAAA;;AACL,QAAII,OAAO,GACTJ,GAAG,CAACK,MAAJ,KAAe,gBAAf,GACIL,GAAG,CAACK,MADR,2BAEIL,GAFJ,aAEIA,GAFJ,uCAEIA,GAAG,CAAEM,OAFT,iDAEI,aAAcF,OAFlB,uEAE6B,qCAH/B;AAIAA,IAAAA,OAAO,GAAI,GAAEA,OAAQ,GACnB,CAAAJ,GAAG,SAAH,IAAAA,GAAG,WAAH,6BAAAA,GAAG,CAAEM,OAAL,gEAAcC,SAAd,IACK,KAAIP,GAAG,CAACM,OAAJ,CAAYC,SAAZ,CAAsBC,GAAtB,CAA2BC,CAAD,IAAgB,OAAMA,CAAE,EAAlD,EAAqDC,IAArD,CAA0D,IAA1D,CAAgE,EADzE,GAEI,EACL,EAJD;AAKA,UAAM,IAAIC,KAAJ,CAAUP,OAAV,CAAN;AACD;AACF","sourcesContent":["import spawnAsync, { SpawnOptions } from '@expo/spawn-async';\n\nasync function runTravelingFastlaneAsync(\n  command: string,\n  args: ReadonlyArray<string>,\n  envs?: Record<string, string>\n): Promise<{ [key: string]: any }> {\n  const spawnOptions: SpawnOptions = {\n    env: {\n      ...process.env,\n      ...envs,\n    },\n    stdio: [0, 1, 'pipe'],\n  };\n\n  const { stderr } = await spawnAsync(command, args, spawnOptions);\n\n  const res = JSON.parse(stderr);\n  if (res.result !== 'failure') {\n    return res;\n  } else {\n    let message =\n      res.reason !== 'Unknown reason'\n        ? res.reason\n        : res?.rawDump?.message ?? 'Unknown error when running fastlane';\n    message = `${message}${\n      res?.rawDump?.backtrace\n        ? `\\n${res.rawDump.backtrace.map((i: string) => `    ${i}`).join('\\n')}`\n        : ''\n    }`;\n    throw new Error(message);\n  }\n}\n\nexport { runTravelingFastlaneAsync };\n"],"file":"travelingFastlane.js"}