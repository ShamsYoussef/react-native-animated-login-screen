{"version":3,"sources":["../../../src/commands/apply/configureAndroidProjectAsync.ts"],"names":["modifyBuildGradleAsync","projectRoot","callback","buildGradlePath","path","join","buildGradleString","fs","readFileSync","toString","result","writeFileSync","modifyAppBuildGradleAsync","modifyAndroidManifestAsync","androidManifestPath","AndroidConfig","Manifest","getProjectAndroidManifestPathAsync","Error","androidManifestJSON","readAndroidManifestAsync","writeAndroidManifestAsync","modifyMainActivityJavaAsync","mainActivityJavaPath","mainActivityString","configureAndroidProjectAsync","exp","skipSDKVersionRequirement","buildGradle","GoogleServices","setClassPath","applyPlugin","Package","setPackageInBuildGradle","Version","setVersionCode","setVersionName","androidManifest","setPackageInAndroidManifest","Scheme","setScheme","Orientation","setAndroidOrientation","Permissions","setAndroidPermissions","Branch","setBranchApiKey","Facebook","setFacebookConfig","UserInterfaceStyle","setUiModeAndroidManifest","GoogleMobileAds","setGoogleMobileAdsConfig","GoogleMapsApiKey","setGoogleMapsApiKey","IntentFilters","setAndroidIntentFilters","mainActivity","addOnConfigurationChangedMainActivity","renamePackageOnDisk","RootViewBackgroundColor","setRootViewBackgroundColor","NavigationBar","setNavigationBarConfig","StatusBar","setStatusBarConfig","PrimaryColor","setPrimaryColor","setFacebookAppIdString","setGoogleServicesFile","SplashScreen","setSplashScreenAsync","Icon","setIconAsync","AdaptiveIcon","setAdaptiveIconAsync"],"mappings":"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","sourcesContent":["import { AndroidConfig, getConfig } from '@expo/config';\nimport { sync as globSync } from 'glob';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nasync function modifyBuildGradleAsync(\n  projectRoot: string,\n  callback: (buildGradle: string) => string\n) {\n  let buildGradlePath = path.join(projectRoot, 'android', 'build.gradle');\n  let buildGradleString = fs.readFileSync(buildGradlePath).toString();\n  let result = callback(buildGradleString);\n  fs.writeFileSync(buildGradlePath, result);\n}\n\nasync function modifyAppBuildGradleAsync(\n  projectRoot: string,\n  callback: (buildGradle: string) => string\n) {\n  let buildGradlePath = path.join(projectRoot, 'android', 'app', 'build.gradle');\n  let buildGradleString = fs.readFileSync(buildGradlePath).toString();\n  let result = callback(buildGradleString);\n  fs.writeFileSync(buildGradlePath, result);\n}\n\nasync function modifyAndroidManifestAsync(\n  projectRoot: string,\n  callback: (androidManifest: AndroidConfig.Manifest.Document) => AndroidConfig.Manifest.Document\n) {\n  let androidManifestPath = await AndroidConfig.Manifest.getProjectAndroidManifestPathAsync(\n    projectRoot\n  );\n  if (!androidManifestPath) {\n    throw new Error(`Could not find AndroidManifest.xml in project directory: \"${projectRoot}\"`);\n  }\n  let androidManifestJSON = await AndroidConfig.Manifest.readAndroidManifestAsync(\n    androidManifestPath\n  );\n  let result = await callback(androidManifestJSON);\n  await AndroidConfig.Manifest.writeAndroidManifestAsync(androidManifestPath, result);\n}\n\nasync function modifyMainActivityJavaAsync(\n  projectRoot: string,\n  callback: (mainActivityJava: string) => string\n) {\n  let mainActivityJavaPath = globSync(\n    path.join(projectRoot, 'android/app/src/main/java/**/MainActivity.java')\n  )[0];\n  let mainActivityString = fs.readFileSync(mainActivityJavaPath).toString();\n  let result = callback(mainActivityString);\n  fs.writeFileSync(mainActivityJavaPath, result);\n}\n\nexport default async function configureAndroidProjectAsync(projectRoot: string) {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  await modifyBuildGradleAsync(projectRoot, (buildGradle: string) => {\n    buildGradle = AndroidConfig.GoogleServices.setClassPath(exp, buildGradle);\n    return buildGradle;\n  });\n\n  await modifyAppBuildGradleAsync(projectRoot, (buildGradle: string) => {\n    buildGradle = AndroidConfig.GoogleServices.applyPlugin(exp, buildGradle);\n    buildGradle = AndroidConfig.Package.setPackageInBuildGradle(exp, buildGradle);\n    buildGradle = AndroidConfig.Version.setVersionCode(exp, buildGradle);\n    buildGradle = AndroidConfig.Version.setVersionName(exp, buildGradle);\n    return buildGradle;\n  });\n\n  await modifyAndroidManifestAsync(projectRoot, async androidManifest => {\n    androidManifest = await AndroidConfig.Package.setPackageInAndroidManifest(exp, androidManifest);\n    androidManifest = await AndroidConfig.Scheme.setScheme(exp, androidManifest);\n    androidManifest = await AndroidConfig.Orientation.setAndroidOrientation(exp, androidManifest);\n    androidManifest = await AndroidConfig.Permissions.setAndroidPermissions(exp, androidManifest);\n    androidManifest = await AndroidConfig.Branch.setBranchApiKey(exp, androidManifest);\n    androidManifest = await AndroidConfig.Facebook.setFacebookConfig(exp, androidManifest);\n    androidManifest = await AndroidConfig.UserInterfaceStyle.setUiModeAndroidManifest(\n      exp,\n      androidManifest\n    );\n\n    androidManifest = await AndroidConfig.GoogleMobileAds.setGoogleMobileAdsConfig(\n      exp,\n      androidManifest\n    );\n    androidManifest = await AndroidConfig.GoogleMapsApiKey.setGoogleMapsApiKey(\n      exp,\n      androidManifest\n    );\n\n    androidManifest = await AndroidConfig.IntentFilters.setAndroidIntentFilters(\n      exp,\n      androidManifest\n    );\n\n    return androidManifest;\n  });\n\n  await modifyMainActivityJavaAsync(projectRoot, mainActivity => {\n    mainActivity = AndroidConfig.UserInterfaceStyle.addOnConfigurationChangedMainActivity(\n      exp,\n      mainActivity\n    );\n    return mainActivity;\n  });\n\n  // If we renamed the package, we should also move it around and rename it in source files\n  await AndroidConfig.Package.renamePackageOnDisk(exp, projectRoot);\n\n  // Modify colors.xml and styles.xml\n  await AndroidConfig.RootViewBackgroundColor.setRootViewBackgroundColor(exp, projectRoot);\n  await AndroidConfig.NavigationBar.setNavigationBarConfig(exp, projectRoot);\n  await AndroidConfig.StatusBar.setStatusBarConfig(exp, projectRoot);\n  await AndroidConfig.PrimaryColor.setPrimaryColor(exp, projectRoot);\n\n  // Modify strings.xml\n  await AndroidConfig.Facebook.setFacebookAppIdString(exp, projectRoot);\n\n  // add google-services.json to project\n  await AndroidConfig.GoogleServices.setGoogleServicesFile(exp, projectRoot);\n\n  // TODOs\n  await AndroidConfig.SplashScreen.setSplashScreenAsync(exp, projectRoot);\n  await AndroidConfig.Icon.setIconAsync(exp, projectRoot);\n  await AndroidConfig.AdaptiveIcon.setAdaptiveIconAsync(exp, projectRoot);\n}\n"],"file":"configureAndroidProjectAsync.js"}