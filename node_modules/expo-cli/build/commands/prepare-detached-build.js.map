{"version":3,"sources":["../../src/commands/prepare-detached-build.ts"],"names":["action","projectDir","options","Detach","prepareDetachedBuildAsync","program","command","option","description","asyncActionProjectDir"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQA,eAAeA,MAAf,CAAsBC,UAAtB,EAA0CC,OAA1C,EAA4D;AAC1D,QAAMC,cAAOC,yBAAP,CAAiCH,UAAjC,EAA6CC,OAA7C,CAAN;AACD;;AAEc,kBAAUG,OAAV,EAA4B;AACzCA,EAAAA,OAAO,CACJC,OADH,CACW,sCADX,EAEGC,MAFH,CAEU,uBAFV,EAEmC,2BAFnC,EAGGA,MAHH,CAGU,0BAHV,EAGsC,oDAHtC,EAIGC,WAJH,CAIe,0CAJf,EAKGC,qBALH,CAKyBT,MALzB;AAMD","sourcesContent":["import { Detach } from '@expo/xdl';\nimport { Command } from 'commander';\n\ntype Options = {\n  platform?: string;\n  skipXcodeConfig: boolean;\n};\n\nasync function action(projectDir: string, options: Options) {\n  await Detach.prepareDetachedBuildAsync(projectDir, options);\n}\n\nexport default function (program: Command) {\n  program\n    .command('prepare-detached-build [project-dir]')\n    .option('--platform [platform]', 'detached project platform')\n    .option('--skipXcodeConfig [bool]', '[iOS only] if true, do not configure Xcode project')\n    .description('Prepares a detached project for building')\n    .asyncActionProjectDir(action);\n}\n"],"file":"prepare-detached-build.js"}