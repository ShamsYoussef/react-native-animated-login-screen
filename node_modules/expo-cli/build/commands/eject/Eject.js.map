{"version":3,"sources":["../../../src/commands/eject/Eject.ts"],"names":["EXPO_APP_ENTRY","ejectAsync","projectRoot","options","createNativeProjectsFromTemplateAsync","installNodeModulesAsync","configureIOSStepAsync","configureAndroidStepAsync","podsInstalled","installPodsAsync","warnIfDependenciesRequireAdditionalSetupAsync","log","newLine","nested","chalk","bold","packageManager","PackageManager","isUsingYarn","applyingIOSConfigStep","logNewSection","ConfigWarningAggregator","hasWarningsIOS","stopAndPersist","symbol","text","red","succeed","step","process","platform","CocoaPodsPackageManager","cwd","path","join","silent","env","EXPO_DEBUG","isCLIInstalledAsync","render","installCLIAsync","e","message","installAsync","installingDependenciesStep","fse","remove","createForProject","fail","name","toLowerCase","exit","applyingAndroidConfigStep","hasWarningsAndroid","title","spinner","start","exp","pkg","config","error","console","sdkMajorVersionNumber","semver","major","sdkVersion","templateSpec","pacote","manifest","code","Error","configPath","configName","configBuffer","readFile","appJson","includes","JSON","parse","toString","expo","promptForNativeAppNameAsync","bundleIdentifier","getOrPromptForBundleIdentifier","ios","packageName","getOrPromptForPackage","android","package","entryPoint","updatingAppConfigStep","writeFile","resolve","stringify","defaultDependencies","defaultDevDependencies","creatingNativeProjectStep","tempDir","temporary","directory","Exp","extractTemplateAppAsync","copySync","mergeGitIgnoreFiles","dependencies","devDependencies","JsonFile","read","createDependenciesMap","yellow","updatingMetroConfigStep","existsSync","metro","updatingPackageJsonStep","scripts","eject","combinedDependencies","dependenciesKey","combinedDevDependencies","removedPkgMain","isPkgMainExpoAppEntry","main","outputMap","key","Object","keys","value","default","validate","length","nonInteractiveHelp","defaultValue","test","targetGitIgnorePath","sourceGitIgnorePath","targetGitIgnore","readFileSync","sourceGitIgnore","merged","mergeGitIgnoreContents","writeFileSync","skipSDKVersionRequirement","pkgsWithExtraSetup","readAsync","packagesToWarn","filter","pkgName","warnAdditionalSetupStep","plural","forEach","stripDashes","s","replace","input","startsWith"],"mappings":"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","sourcesContent":["import {\n  WarningAggregator as ConfigWarningAggregator,\n  ExpoConfig,\n  PackageJSONConfig,\n  findConfigFile,\n  getConfig,\n  readConfigJsonAsync,\n  resolveModule,\n} from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport * as PackageManager from '@expo/package-manager';\nimport { Exp } from '@expo/xdl';\nimport chalk from 'chalk';\nimport fse from 'fs-extra';\nimport npmPackageArg from 'npm-package-arg';\nimport ora from 'ora';\nimport pacote from 'pacote';\nimport path from 'path';\nimport semver from 'semver';\nimport temporary from 'tempy';\nimport terminalLink from 'terminal-link';\n\nimport log from '../../log';\nimport prompt from '../../prompt';\nimport configureAndroidProjectAsync from '../apply/configureAndroidProjectAsync';\nimport configureIOSProjectAsync from '../apply/configureIOSProjectAsync';\nimport { logConfigWarningsAndroid, logConfigWarningsIOS } from '../utils/logConfigWarnings';\nimport maybeBailOnGitStatusAsync from '../utils/maybeBailOnGitStatusAsync';\nimport { usesOldExpoUpdatesAsync } from '../utils/ProjectUtils';\n\ntype ValidationErrorMessage = string;\n\ntype DependenciesMap = { [key: string]: string | number };\n\nexport type EjectAsyncOptions = {\n  verbose?: boolean;\n  force?: boolean;\n  packageManager?: 'npm' | 'yarn';\n};\n\nconst EXPO_APP_ENTRY = 'node_modules/expo/AppEntry.js';\n\n/**\n * Entry point into the eject process, delegates to other helpers to perform various steps.\n *\n * 1. Verify git is clean\n * 2. Create native projects (ios, android)\n * 3. Install node modules\n * 4. Apply config to native projects\n * 5. Install CocoaPods\n * 6. Log project info\n */\nexport async function ejectAsync(projectRoot: string, options?: EjectAsyncOptions): Promise<void> {\n  if (await maybeBailOnGitStatusAsync()) return;\n\n  await createNativeProjectsFromTemplateAsync(projectRoot);\n  await installNodeModulesAsync(projectRoot);\n\n  // Apply Expo config to native projects\n  await configureIOSStepAsync(projectRoot);\n  await configureAndroidStepAsync(projectRoot);\n\n  let podsInstalled = await installPodsAsync(projectRoot);\n  await warnIfDependenciesRequireAdditionalSetupAsync(projectRoot);\n\n  log.newLine();\n  log.nested(`➡️  ${chalk.bold('Next steps')}`);\n\n  log.nested(\n    `- 👆 Review the logs above and look for any warnings (⚠️ ) that might need follow-up.`\n  );\n  log.nested(\n    `- 💡 You may want to run ${chalk.bold(\n      'npx @react-native-community/cli doctor'\n    )} to help install any tools that your app may need to run your native projects.`\n  );\n  if (!podsInstalled) {\n    log.nested(\n      `- 🍫 When CocoaPods is installed, initialize the project workspace: ${chalk.bold(\n        'cd ios && pod install'\n      )}`\n    );\n  }\n  log.nested(\n    `- 🔑 Download your Android keystore (if you're not sure if you need to, just run the command and see): ${chalk.bold(\n      'expo fetch:android:keystore'\n    )}`\n  );\n\n  if (await usesOldExpoUpdatesAsync(projectRoot)) {\n    log.nested(\n      `- 🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/master/packages/expo-updates/README.md'\n      )} has been configured in your project. Before you do a release build, make sure you run ${chalk.bold(\n        'expo publish'\n      )}. ${terminalLink('Learn more.', 'https://expo.fyi/release-builds-with-expo-updates')}`\n    );\n  }\n\n  log.newLine();\n  log.nested(`☑️  ${chalk.bold('When you are ready to run your project')}`);\n  log.nested(\n    'To compile and run your project in development, execute one of the following commands:'\n  );\n  let packageManager = PackageManager.isUsingYarn(projectRoot) ? 'yarn' : 'npm';\n  log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run ios' : 'yarn ios')}`);\n  log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run android' : 'yarn android')}`);\n  log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run web' : 'yarn web')}`);\n}\n\nasync function configureIOSStepAsync(projectRoot: string) {\n  log.newLine();\n  let applyingIOSConfigStep = logNewSection('Applying iOS configuration');\n  await configureIOSProjectAsync(projectRoot);\n  if (ConfigWarningAggregator.hasWarningsIOS()) {\n    applyingIOSConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('iOS configuration applied with warnings that should be fixed:'),\n    });\n    logConfigWarningsIOS();\n  } else {\n    applyingIOSConfigStep.succeed('All project configuration applied to iOS project');\n  }\n  log.newLine();\n}\n\nasync function installPodsAsync(projectRoot: string) {\n  log.newLine();\n  let step = logNewSection('Installing CocoaPods.');\n  if (process.platform !== 'darwin') {\n    step.succeed('Skipped installing CocoaPods because operating system is not on macOS.');\n    return false;\n  }\n  const packageManager = new PackageManager.CocoaPodsPackageManager({\n    cwd: path.join(projectRoot, 'ios'),\n    log,\n    silent: !process.env.EXPO_DEBUG,\n  });\n\n  if (!(await packageManager.isCLIInstalledAsync())) {\n    try {\n      // prompt user -- do you want to install cocoapods right now?\n      step.text = 'CocoaPods CLI not found in your PATH, installing it now.';\n      step.render();\n      await packageManager.installCLIAsync();\n      step.succeed('Installed CocoaPods CLI');\n      step = logNewSection('Running `pod install` in the `ios` directory.');\n    } catch (e) {\n      step.stopAndPersist({\n        symbol: '⚠️ ',\n        text: chalk.red(\n          'Unable to install the CocoaPods CLI. Continuing with ejecting, you can install CocoaPods afterwards.'\n        ),\n      });\n      if (e.message) {\n        log(`- ${e.message}`);\n      }\n      return false;\n    }\n  }\n\n  try {\n    await packageManager.installAsync();\n    step.succeed('Installed pods and initialized Xcode workspace.');\n    return true;\n  } catch (e) {\n    step.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red(\n        'Something when wrong running `pod install` in the `ios` directory. Continuing with ejecting, you can debug this afterwards.'\n      ),\n    });\n    if (e.message) {\n      log(`- ${e.message}`);\n    }\n    return false;\n  }\n}\n\n/**\n * Wraps PackageManager to install node modules and adds CLI logs.\n *\n * @param projectRoot\n */\nasync function installNodeModulesAsync(projectRoot: string) {\n  let installingDependenciesStep = logNewSection('Installing JavaScript dependencies.');\n  await fse.remove('node_modules');\n  const packageManager = PackageManager.createForProject(projectRoot, { log, silent: true });\n  try {\n    await packageManager.installAsync();\n    installingDependenciesStep.succeed('Installed JavaScript dependencies.');\n  } catch (e) {\n    installingDependenciesStep.fail(\n      chalk.red(\n        `Something when wrong installing JavaScript dependencies, check your ${\n          packageManager.name\n        } logfile or run ${chalk.bold(\n          `${packageManager.name.toLowerCase()} install`\n        )} again manually.`\n      )\n    );\n    // TODO: actually show the error message from the package manager! :O\n    process.exit(1);\n  }\n}\n\nasync function configureAndroidStepAsync(projectRoot: string) {\n  let applyingAndroidConfigStep = logNewSection('Applying Android configuration');\n  await configureAndroidProjectAsync(projectRoot);\n  if (ConfigWarningAggregator.hasWarningsAndroid()) {\n    applyingAndroidConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('Android configuration applied with warnings that should be fixed:'),\n    });\n    logConfigWarningsAndroid();\n  } else {\n    applyingAndroidConfigStep.succeed('All project configuration applied to Android project');\n  }\n}\n\nfunction logNewSection(title: string) {\n  let spinner = ora(chalk.bold(title));\n  spinner.start();\n  return spinner;\n}\n\nasync function createNativeProjectsFromTemplateAsync(projectRoot: string): Promise<void> {\n  // We need the SDK version to proceed\n\n  let exp: ExpoConfig;\n  let pkg: PackageJSONConfig;\n  try {\n    const config = getConfig(projectRoot);\n    exp = config.exp;\n    pkg = config.pkg;\n  } catch (error) {\n    // TODO(Bacon): Currently this is already handled in the command\n    console.log();\n    console.log(chalk.red(error.message));\n    console.log();\n    process.exit(1);\n  }\n\n  // Validate that the template exists\n  let sdkMajorVersionNumber = semver.major(exp.sdkVersion!);\n  let templateSpec = npmPackageArg(`expo-template-bare-minimum@sdk-${sdkMajorVersionNumber}`);\n  try {\n    await pacote.manifest(templateSpec);\n  } catch (e) {\n    if (e.code === 'E404') {\n      throw new Error(\n        `Unable to eject because an eject template for SDK ${sdkMajorVersionNumber} was not found.`\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  /**\n   * Set names to be used for the native projects and configure appEntry so users can continue\n   * to use Expo client on ejected projects, even though we change the \"main\" to index.js for bare.\n   *\n   * TODO: app.config.js will become more prominent and we can't depend on\n   * being able to write to the config\n   */\n  const { configPath, configName } = findConfigFile(projectRoot);\n  const configBuffer = await fse.readFile(configPath);\n  const appJson = ['app.json', 'app.config.json'].includes(configName)\n    ? JSON.parse(configBuffer.toString())\n    : {};\n\n  // Just to be sure\n  appJson.expo = appJson.expo ?? {};\n\n  let name = await promptForNativeAppNameAsync(projectRoot);\n  appJson.expo.name = name;\n\n  let bundleIdentifier = await getOrPromptForBundleIdentifier(projectRoot);\n  appJson.expo.ios = appJson.expo.ios ?? {};\n  appJson.expo.ios.bundleIdentifier = bundleIdentifier;\n\n  let packageName = await getOrPromptForPackage(projectRoot, bundleIdentifier);\n  appJson.expo.android = appJson.expo.android ?? {};\n  appJson.expo.android.package = packageName;\n\n  // TODO: remove entryPoint and log about it for sdk 37 changes\n  if (appJson.expo.entryPoint && appJson.expo.entryPoint !== EXPO_APP_ENTRY) {\n    log(`- expo.entryPoint is already configured, we recommend using \"${EXPO_APP_ENTRY}`);\n  } else {\n    appJson.expo.entryPoint = EXPO_APP_ENTRY;\n  }\n\n  let updatingAppConfigStep = logNewSection('Updating app configuration (app.json)');\n  await fse.writeFile(path.resolve('app.json'), JSON.stringify(appJson, null, 2));\n  // TODO: if app.config.js, need to provide some other info here\n  updatingAppConfigStep.succeed('App configuration (app.json) updated.');\n\n  /**\n   * Extract the template and copy the ios and android directories over to the project directory\n   */\n  let defaultDependencies: any = {};\n  let defaultDevDependencies: any = {};\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additioanl context for steps\n  // log.newLine();\n  let creatingNativeProjectStep = logNewSection(\n    'Creating native project directories (./ios and ./android) and updating .gitignore'\n  );\n  let tempDir;\n  try {\n    tempDir = temporary.directory();\n    await Exp.extractTemplateAppAsync(templateSpec, tempDir, appJson.expo);\n    fse.copySync(path.join(tempDir, 'ios'), path.join(projectRoot, 'ios'));\n    fse.copySync(path.join(tempDir, 'android'), path.join(projectRoot, 'android'));\n    fse.copySync(path.join(tempDir, 'index.js'), path.join(projectRoot, 'index.js'));\n    mergeGitIgnoreFiles(path.join(projectRoot, '.gitignore'), path.join(tempDir, '.gitignore'));\n    const { dependencies, devDependencies } = JsonFile.read(path.join(tempDir, 'package.json'));\n    defaultDependencies = createDependenciesMap(dependencies);\n    defaultDevDependencies = createDependenciesMap(devDependencies);\n    creatingNativeProjectStep.succeed(\n      'Created native project directories (./ios and ./android) and updated .gitignore.'\n    );\n  } catch (e) {\n    log(chalk.red(e.message));\n    creatingNativeProjectStep.fail(\n      'Failed to create the native project - see the output above for more information.'\n    );\n    log(\n      chalk.yellow(\n        'You may want to delete the `./ios` and/or `./android` directories before running eject again.'\n      )\n    );\n    process.exit(1);\n  }\n\n  /**\n   * Add metro config, or warn if metro config already exists. The developer will need to add the\n   * hashAssetFiles plugin manually.\n   */\n\n  let updatingMetroConfigStep = logNewSection('Adding Metro bundler configuration');\n  try {\n    if (\n      fse.existsSync(path.join(projectRoot, 'metro.config.js')) ||\n      fse.existsSync(path.join(projectRoot, 'metro.config.json')) ||\n      pkg.metro ||\n      fse.existsSync(path.join(projectRoot, 'rn-cli.config.js'))\n    ) {\n      throw new Error('Existing Metro configuration found; not overwriting.');\n    }\n\n    fse.copySync(path.join(tempDir, 'metro.config.js'), path.join(projectRoot, 'metro.config.js'));\n    updatingMetroConfigStep.succeed('Added Metro bundler configuration.');\n  } catch (e) {\n    updatingMetroConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('Metro bundler configuration not applied:'),\n    });\n    log.nested(`- ${e.message}`);\n    log.nested(\n      `- You will need to add the ${chalk.bold(\n        'hashAssetFiles'\n      )} plugin to your Metro configuration. ${terminalLink(\n        'Example.',\n        'https://github.com/expo/expo/blob/master/packages/expo-updates/README.md#metroconfigjs'\n      )}`\n    );\n    log.newLine();\n  }\n\n  /**\n   * Update package.json scripts - `npm start` should default to `react-native\n   * start` rather than `expo start` after ejecting, for example.\n   */\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additioanl context for steps\n  // log.newLine();\n  let updatingPackageJsonStep = logNewSection(\n    'Updating your package.json scripts, dependencies, and main file'\n  );\n  if (!pkg.scripts) {\n    pkg.scripts = {};\n  }\n  delete pkg.scripts.eject;\n  pkg.scripts.start = 'react-native start';\n  pkg.scripts.ios = 'react-native run-ios';\n  pkg.scripts.android = 'react-native run-android';\n\n  /**\n   * Update package.json dependencies by combining the dependencies in the project we are ejecting\n   * with the dependencies in the template project. Does the same for devDependencies.\n   *\n   * - The template may have some dependencies beyond react/react-native/react-native-unimodules,\n   *   for example RNGH and Reanimated. We should prefer the version that is already being used\n   *   in the project for those, but swap the react/react-native/react-native-unimodules versions\n   *   with the ones in the template.\n   * - The same applies to expo-updates -- since some native project configuration may depend on the\n   *   version, we should always use the version of expo-updates in the template.\n   */\n\n  const combinedDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDependencies,\n    ...pkg.dependencies,\n  });\n\n  for (const dependenciesKey of [\n    'react',\n    'react-native-unimodules',\n    'react-native',\n    'expo-updates',\n  ]) {\n    combinedDependencies[dependenciesKey] = defaultDependencies[dependenciesKey];\n  }\n  const combinedDevDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDevDependencies,\n    ...pkg.devDependencies,\n  });\n\n  // Save the dependencies\n  pkg.dependencies = combinedDependencies;\n  pkg.devDependencies = combinedDevDependencies;\n\n  /**\n   * Add new app entry points\n   */\n  let removedPkgMain;\n  // Check that the pkg.main doesn't match:\n  // - ./node_modules/expo/AppEntry\n  // - ./node_modules/expo/AppEntry.js\n  // - node_modules/expo/AppEntry.js\n  // - expo/AppEntry.js\n  // - expo/AppEntry\n  if (!isPkgMainExpoAppEntry(pkg.main) && pkg.main !== 'index.js' && pkg.main) {\n    // Save the custom\n    removedPkgMain = pkg.main;\n  }\n  delete pkg.main;\n  await fse.writeFile(path.resolve('package.json'), JSON.stringify(pkg, null, 2));\n\n  updatingPackageJsonStep.succeed(\n    'Updated package.json and added index.js entry point for iOS and Android.'\n  );\n  if (removedPkgMain) {\n    log(\n      `- Removed ${chalk.bold(\n        `\"main\": \"${removedPkgMain}\"`\n      )} from package.json because we recommend using index.js as main instead.`\n    );\n    log.newLine();\n  }\n}\n\n/**\n * Create an object of type DependenciesMap a dependencies object or throw if not valid.\n *\n * @param dependencies - ideally an object of type {[key]: string} - if not then this will error.\n */\nfunction createDependenciesMap(dependencies: any): DependenciesMap {\n  if (typeof dependencies !== 'object') {\n    throw new Error(`Dependency map is invalid, expected object but got ${typeof dependencies}`);\n  }\n\n  const outputMap: DependenciesMap = {};\n  if (!dependencies) return outputMap;\n\n  for (const key of Object.keys(dependencies)) {\n    const value = dependencies[key];\n    if (typeof value === 'string') {\n      outputMap[key] = value;\n    } else {\n      throw new Error(\n        `Dependency for key \\`${key}\\` should be a \\`string\\`, instead got: \\`{ ${key}: ${JSON.stringify(\n          value\n        )} }\\``\n      );\n    }\n  }\n  return outputMap;\n}\n\nasync function promptForNativeAppNameAsync(projectRoot: string): Promise<string> {\n  const { exp } = await readConfigJsonAsync(projectRoot);\n\n  let { name } = exp;\n  if (!name) {\n    log('First, we want to clarify what names we should use for your app:');\n    ({ name } = await prompt(\n      [\n        {\n          name: 'name',\n          message: \"What should your app appear as on a user's home screen?\",\n          default: exp.name,\n          validate({ length }: string): true | ValidationErrorMessage {\n            return length ? true : 'App display name cannot be empty.';\n          },\n        },\n      ],\n      {\n        nonInteractiveHelp: 'Please specify \"expo.name\" in app.json / app.config.js.',\n      }\n    ));\n\n    log.newLine();\n  }\n\n  return name!;\n}\n\nasync function getOrPromptForBundleIdentifier(\n  projectRoot: string,\n  defaultValue?: string\n): Promise<string> {\n  let { exp } = getConfig(projectRoot);\n\n  if (exp.ios?.bundleIdentifier) {\n    return exp.ios.bundleIdentifier;\n  }\n\n  // TODO: add example based on slug or name\n  log(\n    `Now we need to know your ${terminalLink(\n      'iOS bundle identifier',\n      'https://expo.fyi/bundle-identifier'\n    )}. You can change this in the future if you need to.`\n  );\n\n  const { bundleIdentifier } = await prompt([\n    {\n      name: 'bundleIdentifier',\n      default: defaultValue,\n      message: `What would you like your bundle identifier to be?`,\n      validate: (value: string) => /^[a-zA-Z][a-zA-Z0-9\\-.]+$/.test(value),\n    },\n  ]);\n\n  log.newLine();\n  return bundleIdentifier;\n}\n\nasync function getOrPromptForPackage(projectRoot: string, defaultValue?: string): Promise<string> {\n  let { exp } = getConfig(projectRoot);\n\n  if (exp.android?.package) {\n    return exp.android.package;\n  }\n\n  // TODO: add example based on slug or name\n  log(\n    `Now we need to know your ${terminalLink(\n      'Android package',\n      'https://expo.fyi/android-package'\n    )}. You can change this in the future if you need to.`\n  );\n\n  const { packageName } = await prompt([\n    {\n      name: 'packageName',\n      default: defaultValue,\n      message: `What would you like your package to be named?`,\n      validate: (value: string) => /^[a-zA-Z][a-zA-Z0-9\\-.]+$/.test(value),\n    },\n  ]);\n\n  log.newLine();\n  return packageName;\n}\n\n/**\n * Merge two gitignore files together and add a generated header.\n *\n * @param targetGitIgnorePath\n * @param sourceGitIgnorePath\n */\nexport function mergeGitIgnoreFiles(\n  targetGitIgnorePath: string,\n  sourceGitIgnorePath: string\n): string | null {\n  if (!fse.existsSync(targetGitIgnorePath)) {\n    // No gitignore in the project already, no need to merge anything into anything. I guess they\n    // are not using git :O\n    return null;\n  }\n\n  if (!fse.existsSync(sourceGitIgnorePath)) {\n    // Maybe we don't have a gitignore in the template project\n    return null;\n  }\n\n  let targetGitIgnore = fse.readFileSync(targetGitIgnorePath).toString();\n  let sourceGitIgnore = fse.readFileSync(sourceGitIgnorePath).toString();\n  const merged = mergeGitIgnoreContents(targetGitIgnore, sourceGitIgnore);\n  fse.writeFileSync(targetGitIgnorePath, merged);\n\n  return merged;\n}\n\n/**\n * Merge the contents of two gitignores together and add a generated header.\n *\n * @param targetGitIgnore contents of the existing gitignore\n * @param sourceGitIgnore contents of the extra gitignore\n */\nfunction mergeGitIgnoreContents(targetGitIgnore: string, sourceGitIgnore: string): string {\n  // TODO(Bacon): Add version this section with a tag (expo-cli@x.x.x)\n  return `${targetGitIgnore}\n# The following contents were automatically generated by expo-cli during eject\n# ----------------------------------------------------------------------------\n\n${sourceGitIgnore}`;\n}\n\n/**\n * Some packages are not configured automatically on eject and may require\n * users to add some code, eg: to their AppDelegate.\n */\nasync function warnIfDependenciesRequireAdditionalSetupAsync(projectRoot: string): Promise<void> {\n  // We just need the custom `nodeModulesPath` from the config.\n  const { exp, pkg } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n\n  const pkgsWithExtraSetup = await JsonFile.readAsync(\n    resolveModule('expo/requiresExtraSetup.json', projectRoot, exp)\n  );\n  const packagesToWarn: string[] = Object.keys(pkg.dependencies).filter(\n    pkgName => pkgName in pkgsWithExtraSetup\n  );\n\n  if (packagesToWarn.length === 0) {\n    return;\n  }\n\n  log.newLine();\n  let warnAdditionalSetupStep = logNewSection(\n    'Checking if any additional setup steps are required for installed SDK packages.'\n  );\n\n  let plural = packagesToWarn.length > 1;\n\n  warnAdditionalSetupStep.stopAndPersist({\n    symbol: '⚠️ ',\n    text: chalk.red(\n      `Your app includes ${chalk.bold(`${packagesToWarn.length}`)} package${\n        plural ? 's' : ''\n      } that require${plural ? '' : 's'} additional setup in order to run:`\n    ),\n  });\n\n  packagesToWarn.forEach(pkgName => {\n    log.nested(`- ${chalk.bold(pkgName)}: ${pkgsWithExtraSetup[pkgName]}`);\n  });\n}\n\nexport function stripDashes(s: string): string {\n  return s.replace(/\\s|-/g, '');\n}\n\n/**\n * Returns true if the input string matches the default expo main field.\n *\n * - ./node_modules/expo/AppEntry\n * - ./node_modules/expo/AppEntry.js\n * - node_modules/expo/AppEntry.js\n * - expo/AppEntry.js\n * - expo/AppEntry\n *\n * @param input package.json main field\n */\nexport function isPkgMainExpoAppEntry(input?: string): boolean {\n  const main = input || '';\n  if (main.startsWith('./')) {\n    return main.includes('node_modules/expo/AppEntry');\n  }\n  return main.includes('expo/AppEntry');\n}\n"],"file":"Eject.js"}