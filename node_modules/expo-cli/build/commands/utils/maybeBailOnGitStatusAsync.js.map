{"version":3,"sources":["../../../src/commands/utils/maybeBailOnGitStatusAsync.ts"],"names":["maybeBailOnGitStatusAsync","isGitStatusClean","log","newLine","program","nonInteractive","warn","answer","type","name","message","ignoreDirtyGit"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEe,eAAeA,yBAAf,GAA6D;AAC1E,QAAMC,gBAAgB,GAAG,MAAM,6CAA/B;;AACAC,iBAAIC,OAAJ,GAF0E,CAI1E;;;AACA,MAAI,CAACF,gBAAL,EAAuB;AACrB,QAAIG,qBAAQC,cAAZ,EAA4B;AAC1BH,qBAAII,IAAJ,CACG,sFADH;;AAGA,aAAO,KAAP;AACD;;AAED,UAAMC,MAAM,GAAG,MAAM,uBAAO;AAC1BC,MAAAA,IAAI,EAAE,SADoB;AAE1BC,MAAAA,IAAI,EAAE,gBAFoB;AAG1BC,MAAAA,OAAO,EAAG;AAHgB,KAAP,CAArB;;AAMA,QAAI,CAACH,MAAM,CAACI,cAAZ,EAA4B;AAC1B,aAAO,IAAP;AACD;;AAEDT,mBAAIC,OAAJ;AACD;;AACD,SAAO,KAAP;AACD","sourcesContent":["import program from 'commander';\n\nimport { validateGitStatusAsync } from './ProjectUtils';\nimport log from '../../log';\nimport prompt from '../../prompt';\n\nexport default async function maybeBailOnGitStatusAsync(): Promise<boolean> {\n  const isGitStatusClean = await validateGitStatusAsync();\n  log.newLine();\n\n  // Give people a chance to bail out if git working tree is dirty\n  if (!isGitStatusClean) {\n    if (program.nonInteractive) {\n      log.warn(\n        `Git status is dirty but the command will continue because nonInteractive is enabled.`\n      );\n      return false;\n    }\n\n    const answer = await prompt({\n      type: 'confirm',\n      name: 'ignoreDirtyGit',\n      message: `Would you like to proceed?`,\n    });\n\n    if (!answer.ignoreDirtyGit) {\n      return true;\n    }\n\n    log.newLine();\n  }\n  return false;\n}\n"],"file":"maybeBailOnGitStatusAsync.js"}