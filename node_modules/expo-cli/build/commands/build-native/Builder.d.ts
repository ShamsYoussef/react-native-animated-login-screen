import { Platform } from '@expo/build-tools';
import { ExpoConfig } from '@expo/config';
import { ApiV2, User } from '@expo/xdl';
export interface StatusResult {
    builds: BuildInfo[];
}
export interface BuildInfo {
    status: string;
    platform: Platform;
    createdAt: string;
    artifacts?: BuildArtifacts;
}
interface BuildArtifacts {
    buildUrl?: string;
    logsUrl: string;
}
export interface BuilderContext {
    projectDir: string;
    user: User;
    accountName: string;
    projectName: string;
    exp: ExpoConfig;
}
export default class Builder {
    client: ApiV2;
    ctx: BuilderContext;
    constructor(ctx: BuilderContext);
    buildProjectAsync(platform: Platform): Promise<string>;
    getLatestBuildsAsync(): Promise<StatusResult>;
    private buildAsync;
}
export {};
