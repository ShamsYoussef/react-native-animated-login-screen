{"version":3,"sources":["../../src/commands/index.ts"],"names":["COMMANDS","require","process","env","EXPO_ENABLE_NEW_TURTLE","EXPO_DEV","push","registerCommands","program","forEach","commandModule","default"],"mappings":";;;;;;AAEA,MAAMA,QAAQ,GAAG,CACfC,OAAO,CAAC,WAAD,CADQ,EAEf;AACA;AACAC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqCH,OAAO,CAAC,gBAAD,CAA5C,GAAiEA,OAAO,CAAC,SAAD,CAJzD,EAKfA,OAAO,CAAC,iBAAD,CALQ,EAMfA,OAAO,CAAC,UAAD,CANQ,EAOfA,OAAO,CAAC,eAAD,CAPQ,EAQfA,OAAO,CAAC,aAAD,CARQ,EASfA,OAAO,CAAC,eAAD,CATQ,EAUfA,OAAO,CAAC,UAAD,CAVQ,EAWfA,OAAO,CAAC,SAAD,CAXQ,EAYfA,OAAO,CAAC,UAAD,CAZQ,EAafA,OAAO,CAAC,SAAD,CAbQ,EAcfA,OAAO,CAAC,mBAAD,CAdQ,EAefA,OAAO,CAAC,QAAD,CAfQ,EAgBfA,OAAO,CAAC,WAAD,CAhBQ,EAiBfA,OAAO,CAAC,OAAD,CAjBQ,EAkBfA,OAAO,CAAC,SAAD,CAlBQ,EAmBfA,OAAO,CAAC,UAAD,CAnBQ,EAoBfA,OAAO,CAAC,0BAAD,CApBQ,EAqBfA,OAAO,CAAC,gBAAD,CArBQ,EAsBfA,OAAO,CAAC,kBAAD,CAtBQ,EAuBfA,OAAO,CAAC,WAAD,CAvBQ,EAwBfA,OAAO,CAAC,cAAD,CAxBQ,EAyBfA,OAAO,CAAC,YAAD,CAzBQ,EA0BfA,OAAO,CAAC,QAAD,CA1BQ,EA2BfA,OAAO,CAAC,SAAD,CA3BQ,EA4BfA,OAAO,CAAC,WAAD,CA5BQ,EA6BfA,OAAO,CAAC,UAAD,CA7BQ,EA8BfA,OAAO,CAAC,OAAD,CA9BQ,EA+BfA,OAAO,CAAC,YAAD,CA/BQ,EAgCfA,OAAO,CAAC,UAAD,CAhCQ,CAAjB;;AAmCA,IAAIC,OAAO,CAACC,GAAR,CAAYE,QAAhB,EAA0B;AACxBL,EAAAA,QAAQ,CAACM,IAAT,CAAcL,OAAO,CAAC,SAAD,CAArB;AACD;;AAEM,SAASM,gBAAT,CAA0BC,OAA1B,EAA4C;AACjDR,EAAAA,QAAQ,CAACS,OAAT,CAAiBC,aAAa,IAAI;AAChCA,IAAAA,aAAa,CAACC,OAAd,CAAsBH,OAAtB;AACD,GAFD;AAGD","sourcesContent":["import { Command } from 'commander';\n\nconst COMMANDS = [\n  require('./android'),\n  // old command build:status is the same as new build:status so we disable it when the new one is available\n  // new command only for testing, shouldn't be visible for users\n  process.env.EXPO_ENABLE_NEW_TURTLE ? require('./build-native') : require('./build'),\n  require('./bundle-assets'),\n  require('./client'),\n  require('./credentials'),\n  require('./customize'),\n  require('./diagnostics'),\n  require('./doctor'),\n  require('./eject'),\n  require('./export'),\n  require('./fetch'),\n  require('./generate-module'),\n  require('./init'),\n  require('./install'),\n  require('./ios'),\n  require('./login'),\n  require('./logout'),\n  require('./prepare-detached-build'),\n  require('./publish-info'),\n  require('./publish-modify'),\n  require('./publish'),\n  require('./push-creds'),\n  require('./register'),\n  require('./send'),\n  require('./start'),\n  require('./upgrade'),\n  require('./upload'),\n  require('./url'),\n  require('./webhooks'),\n  require('./whoami'),\n];\n\nif (process.env.EXPO_DEV) {\n  COMMANDS.push(require('./apply'));\n}\n\nexport function registerCommands(program: Command) {\n  COMMANDS.forEach(commandModule => {\n    commandModule.default(program);\n  });\n}\n"],"file":"index.js"}