{"version":3,"file":"Xcodeproj.js","sourceRoot":"","sources":["../../../src/ios/utils/Xcodeproj.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { project as Project } from 'xcode';\n// @ts-ignore\nimport pbxFile from 'xcode/lib/pbxFile';\nimport { sync as globSync } from 'glob';\nimport path from 'path';\n\nexport function getProjectName(projectRoot: string) {\n  const sourceRoot = getSourceRoot(projectRoot);\n  const sourceRootParts = sourceRoot.split(path.sep);\n  return sourceRootParts[sourceRootParts.length - 1];\n}\n\nexport function getSourceRoot(projectRoot: string) {\n  const paths = globSync('ios/*/AppDelegate.m', {\n    absolute: true,\n    cwd: projectRoot,\n  });\n  return path.dirname(paths[0]);\n}\n\n// TODO(brentvatne): I couldn't figure out how to do this with an existing\n// higher level function exposed by the xcode library, but we should find out how to do\n// that and replace this with it\nexport function addFileToGroup(filepath: string, groupName: string, project: Project) {\n  let file = new pbxFile(filepath);\n  file.uuid = project.generateUuid();\n  file.fileRef = project.generateUuid();\n  project.addToPbxFileReferenceSection(file);\n  project.addToPbxBuildFileSection(file);\n  project.addToPbxSourcesBuildPhase(file);\n  let group = project.pbxGroupByName(groupName);\n  if (!group) {\n    throw Error(`Group by name ${groupName} not found!`);\n  }\n\n  group.children.push({ value: file.fileRef, comment: file.basename });\n  return project;\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getPbxproj(projectRoot: string) {\n  const pbxprojPaths = globSync('ios/*/project.pbxproj', { absolute: true, cwd: projectRoot });\n  const [pbxprojPath, ...otherPbxprojPaths] = pbxprojPaths;\n\n  if (pbxprojPaths.length > 1) {\n    console.warn(\n      `Found multiple pbxproject files paths, using ${pbxprojPath}. Other paths ${JSON.stringify(\n        otherPbxprojPaths\n      )} ignored.`\n    );\n  }\n\n  const project = Project(pbxprojPath);\n  project.parseSync();\n  return project;\n}\n\nexport function removeComments([item]: any[]): boolean {\n  return !item.endsWith(`_comment`);\n}\n\nexport function isBuildConfig(input: any[]): boolean {\n  const {\n    1: { isa },\n  } = input;\n  return isa === 'XCBuildConfiguration';\n}\n\nexport function removeTestHosts(input: any[]): boolean {\n  const {\n    1: { buildSettings },\n  } = input;\n\n  return !buildSettings.TEST_HOST;\n}\n"]}