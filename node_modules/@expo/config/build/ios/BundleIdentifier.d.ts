import { InfoPlist } from './IosConfig.types';
import { ExpoConfig } from '../Config.types';
export declare function getBundleIdentifier(config: ExpoConfig): string | null;
/**
 * In Turtle v1 we set the bundleIdentifier directly on Info.plist rather
 * than in pbxproj
 */
export declare function setBundleIdentifier(config: ExpoConfig, infoPlist: InfoPlist): InfoPlist | {
    CFBundleIdentifier: string;
    CFBundleShortVersionString?: string | undefined;
    CFBundleVersion?: string | undefined;
    CFBundleDisplayName?: string | undefined;
    CFBundleName?: string | undefined;
    CFBundleURLTypes?: import("./IosConfig.types").URLScheme[] | undefined;
    ITSAppUsesNonExemptEncryption?: boolean | undefined;
    LSApplicationQueriesSchemes?: string[] | undefined;
    FacebookAppID?: string | undefined;
    FacebookDisplayName?: string | undefined;
    FacebookAutoInitEnabled?: boolean | undefined;
    FacebookAutoLogAppEventsEnabled?: boolean | undefined;
    FacebookAdvertiserIDCollectionEnabled?: boolean | undefined;
    UISupportedInterfaceOrientations?: import("./IosConfig.types").InterfaceOrientation[] | undefined;
    GMSApiKey?: string | undefined;
};
/**
 * Updates the bundle identifier for a given pbxproj
 * * @param pbxprojPath Path to pbxproj file
 * @param bundleIdentifier Bundle identifier to set in the pbxproj
 */
export declare function updateBundleIdentifierForPbxproj(pbxprojPath: string, bundleIdentifier: string): void;
/**
 * Updates the bundle identifier for pbx projects inside the ios directory of the given project root
 *
 * @param projectRoot Path to project root containing the ios directory
 * @param bundleIdentifier Desired bundle identifier
 */
export declare function setBundleIdentifierForPbxproj(projectRoot: string, bundleIdentifier: string): void;
export declare function resetAllPlistBundleIdentifiers(projectRoot: string): void;
export declare function resetPlistBundleIdentifier(plistPath: string): void;
