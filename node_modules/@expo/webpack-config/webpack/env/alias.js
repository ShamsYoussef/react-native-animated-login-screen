"use strict";
/** @internal */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("@expo/config");
function getAliases(projectRoot) {
    // Even if the module isn't installed, react-native should be aliased to react-native-web for better errors.
    let aliases = {
        // Alias direct react-native imports to react-native-web
        'react-native$': 'react-native-web',
        // Alias internal react-native modules to react-native-web
        'react-native/Libraries/Components/View/ViewStylePropTypes$': 'react-native-web/dist/exports/View/ViewStylePropTypes',
        'react-native/Libraries/EventEmitter/RCTDeviceEventEmitter$': 'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter',
        'react-native/Libraries/vendor/emitter/EventEmitter$': 'react-native-web/dist/vendor/react-native/emitter/EventEmitter',
        'react-native/Libraries/vendor/emitter/EventSubscriptionVendor$': 'react-native-web/dist/vendor/react-native/emitter/EventSubscriptionVendor',
        'react-native/Libraries/EventEmitter/NativeEventEmitter$': 'react-native-web/dist/vendor/react-native/NativeEventEmitter',
    };
    // Check if the installed version of react-native-web still supports NetInfo.
    if (config_1.projectHasModule('react-native-web/dist/exports/NetInfo', projectRoot, {})) {
        aliases['@react-native-community/netinfo'] = 'react-native-web/dist/exports/NetInfo';
    }
    // Add polyfills for modules that react-native-web doesn't support
    // Depends on expo-asset
    if (config_1.projectHasModule('expo-asset', projectRoot, {})) {
        aliases['react-native/Libraries/Image/AssetSourceResolver$'] =
            'expo-asset/build/AssetSourceResolver';
        aliases['react-native/Libraries/Image/assetPathUtils$'] =
            'expo-asset/build/Image/assetPathUtils';
        aliases['react-native/Libraries/Image/resolveAssetSource$'] =
            'expo-asset/build/resolveAssetSource';
    }
    return aliases;
}
exports.getAliases = getAliases;
//# sourceMappingURL=alias.js.map