import { Platform } from '@expo/config';
import { Keystore } from './AndroidCredentials';
import * as Ios from './IosCredentials';
export declare type Credentials = Ios.Credentials;
export declare type CredentialMetadata = {
    username: string;
    experienceName: string;
    bundleIdentifier?: string;
    platform: string;
    only?: any;
};
export { Ios };
export declare function getCredentialMetadataAsync(projectRoot: string, platform: Platform): Promise<CredentialMetadata>;
export declare function credentialsExistForPlatformAsync(metadata: CredentialMetadata): Promise<boolean>;
export declare function getEncryptedCredentialsForPlatformAsync(metadata: CredentialMetadata): Promise<Credentials | undefined | null>;
export declare function getCredentialsForPlatform(metadata: CredentialMetadata): Promise<Credentials | undefined | null>;
export declare function updateCredentialsForPlatform(platform: 'android', newCredentials: Keystore, userCredentialsIds: Array<number>, metadata: CredentialMetadata): Promise<void>;
export declare function removeCredentialsForPlatform(platform: 'android', // this is only used for android credential management now.
metadata: CredentialMetadata): Promise<void>;
