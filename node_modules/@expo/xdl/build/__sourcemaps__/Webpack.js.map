{"version":3,"sources":["Webpack.ts"],"names":["WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","restartAsync","projectRoot","options","stopAsync","startAsync","PLATFORM_TAG","ProjectUtils","getPlatformTag","withTag","messages","join","devServerInfo","printConnectionInstructions","appName","urls","showInDevtools","showHelp","clearWebCacheAsync","mode","cacheFolder","path","chalk","dim","fs","remove","_","deprecatedVerbose","XDLError","serverName","logError","red","fullOptions","transformCLIOptions","env","getWebpackConfigEnvFromBundlingOptionsAsync","clear","https","process","SSL_CRT_FILE","SSL_KEY_FILE","ssl","getSSLCertAsync","name","directory","certPath","keyPath","config","createWebpackConfigAsync","port","getAvailablePortAsync","defaultPort","logInfo","underline","protocol","useYarn","getProjectNameAsync","nonInteractive","validateBoolOption","stdout","isTTY","server","Promise","resolve","compiler","webpackFactory","webpack","onFinished","WebpackDevServer","devServer","listen","HOST","error","message","onWebpackFinished","ProjectSettings","setPackagerInfoAsync","host","ip","address","url","close","openAsync","openProjectAsync","compileWebAppAsync","warnings","reject","run","stats","errors","_showErrors","_showWarnings","toJson","all","length","Error","getenv","boolish","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","exp","ConfigUtils","getConfig","skipSDKVersionRequirement","webName","getNameFromConfig","isRunning","getServer","getPort","getUrlAsync","getProtocolAsync","readAsync","DEFAULT_PORT","setMode","BABEL_ENV","NODE_ENV","value","defaultValue","isImageEditingEnabled","pwa","unimodulesOnly","withUnimodules","require","invokeWebpackConfigAsync","applyOptionsToProjectSettingsAsync","newSettings","Object","keys","setAsync","dev","webpackEnv","console","log","magenta","result","devcert","certificateFor","key","cert","folder","ensureDir","writeFile","applyEnvironmentVariables","bgYellow","black","output","optimization","devtoolLineToLine","pathinfo","namedModules","namedChunks","moduleIds","chunkIds","splitChunks","assign","argv","projectWebpackConfig","existsSync","webpackConfig","createExpoWebpackConfigAsync","UrlUtils","constructWebAppUrlAsync","hostType","success","e","Logger","global"],"mappings":"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","sourcesContent":["import * as ConfigUtils from '@expo/config';\nimport { isUsingYarn } from '@expo/package-manager';\nimport chalk from 'chalk';\nimport * as devcert from 'devcert';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport http from 'http';\nimport * as path from 'path';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport { Urls, choosePort, prepareUrls } from 'react-dev-utils/WebpackDevServerUtils';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport ip from './ip';\nimport Logger from './Logger';\nimport * as ProjectUtils from './project/ProjectUtils';\nimport * as ProjectSettings from './ProjectSettings';\nimport * as UrlUtils from './UrlUtils';\nimport createWebpackCompiler, { printInstructions } from './webpack-utils/createWebpackCompiler';\nimport { DEFAULT_PORT, HOST, isDebugModeEnabled } from './webpack-utils/WebpackEnvironment';\nimport XDLError from './XDLError';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\ntype DevServer = WebpackDevServer | http.Server;\n\nlet webpackDevServerInstance: DevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: DevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  webpackEnv?: Object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n};\n\nexport async function restartAsync(\n  projectRoot: string,\n  options: BundlingOptions = {}\n): Promise<WebpackSettings | null> {\n  await stopAsync(projectRoot);\n  return await startAsync(projectRoot, options);\n}\n\nconst PLATFORM_TAG = ProjectUtils.getPlatformTag('web');\nconst withTag = (...messages: any[]) => [PLATFORM_TAG + ' ', ...messages].join('');\n\nlet devServerInfo: {\n  urls: Urls;\n  protocol: 'http' | 'https';\n  useYarn: boolean;\n  appName: string;\n  nonInteractive: boolean;\n  port: number;\n} | null = null;\n\nexport function printConnectionInstructions(projectRoot: string, options = {}) {\n  if (!devServerInfo) return;\n  printInstructions(projectRoot, {\n    appName: devServerInfo.appName,\n    urls: devServerInfo.urls,\n    showInDevtools: false,\n    showHelp: false,\n    ...options,\n  });\n}\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  try {\n    withTag(chalk.dim(`Clearing ${mode} cache directory...`));\n    await fs.remove(cacheFolder);\n  } catch (_) {}\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {},\n  deprecatedVerbose?: boolean\n): Promise<WebpackSettings | null> {\n  if (typeof deprecatedVerbose !== 'undefined') {\n    throw new XDLError(\n      'WEBPACK_DEPRECATED',\n      'startAsync(root, options, verbose): The `verbose` option is deprecated.'\n    );\n  }\n\n  let serverName = 'Webpack';\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(\n      projectRoot,\n      WEBPACK_LOG_TAG,\n      withTag(chalk.red(`${serverName} is already running.`))\n    );\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n  const port = await getAvailablePortAsync({\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    withTag(\n      `Starting ${serverName} on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n    )\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n  const urls = prepareUrls(protocol, '::', webpackServerPort);\n  const useYarn = isUsingYarn(projectRoot);\n  const appName = await getProjectNameAsync(projectRoot);\n  const nonInteractive = validateBoolOption(\n    'nonInteractive',\n    options.nonInteractive,\n    !process.stdout.isTTY\n  );\n\n  let server: DevServer;\n\n  devServerInfo = {\n    urls,\n    protocol,\n    useYarn,\n    appName,\n    nonInteractive,\n    port: webpackServerPort!,\n  };\n\n  server = await new Promise(resolve => {\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = createWebpackCompiler({\n      projectRoot,\n      appName,\n      config,\n      urls,\n      nonInteractive,\n      webpackFactory: webpack,\n      onFinished: () => resolve(server),\n    });\n    const server = new WebpackDevServer(compiler, config.devServer);\n    // Launch WebpackDevServer.\n    server.listen(port, HOST, error => {\n      if (error) {\n        ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n      }\n      if (typeof options.onWebpackFinished === 'function') {\n        options.onWebpackFinished(error);\n      }\n    });\n    webpackDevServerInstance = server;\n  });\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n  return {\n    url,\n    server,\n    port,\n    protocol,\n    host,\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Closing Webpack server');\n    webpackDevServerInstance.close();\n    webpackDevServerInstance = null;\n    devServerInfo = null;\n    webpackServerPort = null;\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      webpackServerPort: null,\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await openProjectAsync(projectRoot);\n}\n\nexport async function compileWebAppAsync(\n  projectRoot: string,\n  compiler: webpack.Compiler\n): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages;\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages.errors.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new Error(messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages.warnings.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          withTag(\n            chalk.yellow(\n              '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n                'Most CI servers set it automatically.\\n'\n            )\n          )\n        );\n        return reject(new Error(messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nexport async function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        withTag(chalk.yellow('Compiled with warnings.\\n'))\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        withTag(chalk.green('Compiled successfully.\\n'))\n      );\n    }\n  } catch (error) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, withTag(chalk.red('Failed to compile.\\n')));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n\n  await bundleWebAppAsync(projectRoot, config);\n}\n\nexport async function getProjectNameAsync(projectRoot: string): Promise<string> {\n  const { exp } = ConfigUtils.getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  const webName = ConfigUtils.getNameFromConfig(exp).webName ?? exp.name;\n  return webName;\n}\n\nexport function isRunning(): boolean {\n  return !!webpackDevServerInstance;\n}\n\nexport function getServer(projectRoot: string): DevServer | null {\n  if (webpackDevServerInstance == null) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, withTag('Webpack is not running.'));\n  }\n  return webpackDevServerInstance;\n}\n\nexport function getPort(): number | null {\n  return webpackServerPort;\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  const devServer = getServer(projectRoot);\n  if (!devServer) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(\n  options: { host?: string; defaultPort?: number } = {}\n): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort ? options.defaultPort : DEFAULT_PORT;\n    const port = await choosePort(\n      'host' in options && options.host ? options.host : HOST,\n      defaultPort\n    );\n    if (!port) throw new Error(`Port ${defaultPort} not available.`);\n    else return port;\n  } catch (error) {\n    throw new XDLError('NO_PORT_FOUND', 'No available port found: ' + error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function createWebpackConfigAsync(\n  env: WebEnvironment,\n  options: CLIWebOptions = {}\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n\n  let config;\n  if (options.unimodulesOnly) {\n    const { withUnimodules } = require('@expo/webpack-config/addons');\n    config = withUnimodules({}, env);\n  } else {\n    config = await invokeWebpackConfigAsync(env);\n  }\n\n  return config;\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  let newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  let { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    isImageEditingEnabled,\n    mode,\n    https,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Enable line to line mapped mode for all/specified modules.\n    // Line to line mapped mode uses a simple SourceMap where each line of the generated source is mapped to the same line of the original source.\n    // It’s a performance optimization. Only use it if your performance need to be better and you are sure that input lines match which generated lines.\n    // true enables it for all modules (not recommended)\n    output.devtoolLineToLine = true;\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Instead of numeric ids, give modules readable names for better debugging.\n    optimization.namedModules = true;\n    // Instead of numeric ids, give chunks readable names for better debugging.\n    optimization.namedChunks = true;\n    // Readable ids for better debugging.\n    // @ts-ignore Property 'moduleIds' does not exist.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    // @ts-ignore Property 'chunkIds' does not exist.\n    optimization.chunkIds = 'named';\n\n    if (optimization.splitChunks) {\n      optimization.splitChunks.name = true;\n    }\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nexport async function invokeWebpackConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const createExpoWebpackConfigAsync = require('@expo/webpack-config');\n    config = await createExpoWebpackConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nexport async function openProjectAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    let url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowser(url);\n    return { success: true, url };\n  } catch (e) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"file":"../Webpack.js","sourceRoot":"/@expo/xdl@57.9.17/src"}