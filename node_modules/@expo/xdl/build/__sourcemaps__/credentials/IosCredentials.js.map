{"version":3,"sources":["credentials/IosCredentials.ts"],"names":["formatDistCerts","distCerts","options","map","usedByApps","userCredentialsId","certId","certP12","certPassword","serialNumber","error","name","join","value","distCertSerialNumber","provideFullCertificate","String","formatPushKeys","pushKeys","apnsKeyId","apnsKeyP8","provideFullPushKey","short"],"mappings":";;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAmCO,SAASA,eAAT,CAAyBC,SAAzB,EAAyCC,OAAzC,EAAwF;AAC7F,SAAOD,SAAS,CAACE,GAAV,CAAc,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,iBAAd;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA,OAAzC;AAAkDC,IAAAA;AAAlD,GAAD,KAA2E;AAC9F,QAAIC,YAAJ;;AACA,QAAI;AACFA,MAAAA,YAAY,GAAG,4CAAwBF,OAAxB,EAAiCC,YAAjC,CAAf;AACD,KAFD,CAEE,OAAOE,KAAP,EAAc;AACdD,MAAAA,YAAY,GAAG,QAAf;AACD;;AACD,QAAIE,IAAI,GAAI,kBAAiBF,YAAa,EAA1C;;AACA,QAAIH,MAAJ,EAAY;AACVK,MAAAA,IAAI,GAAI,GAAEA,IAAK,qBAAoBL,MAAO,EAA1C;AACD;;AACD,QAAIF,UAAJ,EAAgB;AACdO,MAAAA,IAAI,GAAI,iBAAgBP,UAAU,CAACQ,IAAX,CAAgB,IAAhB,CAAsB,KAAID,IAAK,GAAvD;AACD;;AACD,WAAO;AACLE,MAAAA,KAAK,EAAE;AACLC,QAAAA,oBAAoB,EAAEL,YADjB;AAEL,YAAIP,OAAO,CAACa,sBAAR,GACA;AAAER,UAAAA,OAAF;AAAWD,UAAAA,MAAX;AAAmBE,UAAAA;AAAnB,SADA,GAEA;AAAEH,UAAAA,iBAAiB,EAAEW,MAAM,CAACX,iBAAD;AAA3B,SAFJ;AAFK,OADF;AAOLM,MAAAA;AAPK,KAAP;AASD,GAvBM,CAAP;AAwBD;;AAEM,SAASM,cAAT,CAAwBC,QAAxB,EAAuChB,OAAvC,EAAkF;AACvF,SAAOgB,QAAQ,CAACf,GAAT,CAAa,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,iBAAd;AAAiCc,IAAAA,SAAjC;AAA4CC,IAAAA;AAA5C,GAAD,KAAkE;AACpF,QAAIT,IAAI,GAAI,WAAUQ,SAAU,EAAhC;;AACA,QAAIf,UAAJ,EAAgB;AACdO,MAAAA,IAAI,GAAI,iBAAgBP,UAAU,CAACQ,IAAX,CAAgB,IAAhB,CAAsB,KAAID,IAAK,GAAvD;AACD;;AACD,WAAO;AACLE,MAAAA,KAAK,EAAE,EACL,IAAIX,OAAO,CAACmB,kBAAR,GACA;AAAEF,UAAAA,SAAF;AAAaC,UAAAA;AAAb,SADA,GAEA;AAAEf,UAAAA,iBAAiB,EAAEW,MAAM,CAACX,iBAAD;AAA3B,SAFJ;AADK,OADF;AAMLM,MAAAA,IANK;AAOLW,MAAAA,KAAK,EAAEH;AAPF,KAAP;AASD,GAdM,CAAP;AAeD","sourcesContent":["import Api from '../Api';\nimport { findP12CertSerialNumber } from '../detach/PKCS12Utils';\nimport UserManager from '../User';\nimport { ApiV2 } from '../xdl';\n\nexport type Credentials = {\n  appleId?: string;\n  password?: string;\n  teamId?: string;\n  certP12?: string;\n  certPassword?: string;\n  pushP12?: string;\n  pushPassword?: string;\n  provisioningProfile?: string;\n  enterpriseAccount?: string;\n  // These are ids on the spaceship object (implementation detail), Spaceship::Portal::Certificate\n  certId?: string;\n  pushId?: string;\n  provisioningProfileId?: string;\n\n  pushPrivateSigningKey?: string;\n  certPrivateSigningKey?: string;\n  apnsKeyId?: string;\n  apnsKeyP8?: string;\n};\n\nexport type CredObject = {\n  name: string;\n  value: {\n    userCredentialsId?: string;\n    serialNumber?: string;\n  };\n};\n\nexport type CredsList = Array<CredObject>;\n\nexport function formatDistCerts(distCerts: any, options: { provideFullCertificate?: boolean }) {\n  return distCerts.map(({ usedByApps, userCredentialsId, certId, certP12, certPassword }: any) => {\n    let serialNumber;\n    try {\n      serialNumber = findP12CertSerialNumber(certP12, certPassword);\n    } catch (error) {\n      serialNumber = '------';\n    }\n    let name = `Serial number: ${serialNumber}`;\n    if (certId) {\n      name = `${name}, Certificate ID: ${certId}`;\n    }\n    if (usedByApps) {\n      name = `Used in apps: ${usedByApps.join(', ')} (${name})`;\n    }\n    return {\n      value: {\n        distCertSerialNumber: serialNumber,\n        ...(options.provideFullCertificate\n          ? { certP12, certId, certPassword }\n          : { userCredentialsId: String(userCredentialsId) }),\n      },\n      name,\n    };\n  });\n}\n\nexport function formatPushKeys(pushKeys: any, options: { provideFullPushKey?: boolean }) {\n  return pushKeys.map(({ usedByApps, userCredentialsId, apnsKeyId, apnsKeyP8 }: any) => {\n    let name = `Key ID: ${apnsKeyId}`;\n    if (usedByApps) {\n      name = `Used in apps: ${usedByApps.join(', ')} (${name})`;\n    }\n    return {\n      value: {\n        ...(options.provideFullPushKey\n          ? { apnsKeyId, apnsKeyP8 }\n          : { userCredentialsId: String(userCredentialsId) }),\n      },\n      name,\n      short: apnsKeyId,\n    };\n  });\n}\n"],"file":"../../credentials/IosCredentials.js","sourceRoot":"/@expo/xdl@57.9.17/src"}