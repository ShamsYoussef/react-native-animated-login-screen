{"version":3,"sources":["Exp.ts"],"names":["supportedPlatforms","determineEntryPoint","projectRoot","platform","includes","Error","platforms","entry","path","relative","sanitizedName","name","replace","normalize","Transformer","Minipass","constructor","config","data","write","end","replaced","toLowerCase","binaryExtensions","createFileTransform","transformFile","extname","undefined","extractAndInitializeTemplateApp","templateSpec","packageManager","Logger","notifications","warn","info","code","NotificationCode","PROGRESS","extractAndPrepareTemplateAppAsync","initGitRepoAsync","installDependenciesAsync","extractTemplateAppAsync","expo","appFile","JsonFile","join","appJson","readAsync","writeAsync","packageFile","packageJson","private","version","description","tags","repository","_resolved","_integrity","_from","targetPath","pacote","tarball","stream","tarStream","extractTemplateAppAsyncImpl","cache","UserSettings","dotExpoHomeDirectory","fs","mkdirp","Promise","resolve","reject","extractStream","tar","x","cwd","strip","transform","onentry","type","test","basename","on","pipe","root","flags","silent","commit","global","debug","e","errno","stdio","options","yarn","YarnPackageManager","versionAsync","nodeLinker","getConfigAsync","semver","satisfies","yarnRc","yamlString","readFileSync","error","yaml","safeLoad","writeFileSync","safeDump","installAsync","NpmPackageManager","saveRecentExpRootAsync","recentExpsJsonFile","recentExps","filter","dir","unshift","slice","getPublishInfoAsync","user","UserManager","ensureLoggedInAsync","username","exp","slug","sdkVersion","remotePackageName","remoteUsername","remoteFullPackageName","iosBundleIdentifier","ios","bundleIdentifier","androidPackage","android","package","args","sendAsync","recipient","url_","allowUnauthed","api","ApiV2","clientForUser","postAsync","emailOrPhone","url","includeExpoLinks","getProjectRandomnessAsync","ps","ProjectSettings","randomness","urlRandomness","resetProjectRandomnessAsync","UrlUtils","someRandomness","setAsync"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;AAKA,MAAMA,kBAAkB,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,KAAnB,CAA3B;;AAEO,SAASC,mBAAT,CAA6BC,WAA7B,EAAkDC,QAAlD,EAA6E;AAClF,MAAIA,QAAQ,IAAI,CAACH,kBAAkB,CAACI,QAAnB,CAA4BD,QAA5B,CAAjB,EAAwD;AACtD,UAAM,IAAIE,KAAJ,CACH,6DAA4DF,QAAS,qBADlE,CAAN;AAGD,GALiF,CAMlF;AACA;;;AACA,QAAMG,SAAmB,GAAG,EAA5B;AAEA,QAAMC,KAAK,GAAG,4BAAcL,WAAd,EAA2B,CAAC,SAAD,CAA3B,EAAwCI,SAAxC,CAAd;AACA,MAAI,CAACC,KAAL,EACE,MAAM,IAAIF,KAAJ,CACH,gMADG,CAAN;AAIF,SAAOG,gBAAKC,QAAL,CAAcP,WAAd,EAA2BK,KAA3B,CAAP;AACD;;AAED,SAASG,aAAT,CAAuBC,IAAvB,EAAqC;AACnC,SAAOA,IAAI,CACRC,OADI,CACI,SADJ,EACe,EADf,EAEJC,SAFI,CAEM,KAFN,EAGJD,OAHI,CAGI,kBAHJ,EAGwB,EAHxB,CAAP;AAID;;AAED,MAAME,WAAN,SAA0BC,mBAA1B,CAAmC;AAIjCC,EAAAA,WAAW,CAACC,MAAD,EAAyB;AAClC;;AADkC;;AAAA;;AAElC,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKD,MAAL,GAAcA,MAAd;AACD;;AACDE,EAAAA,KAAK,CAACD,IAAD,EAAe;AAClB,SAAKA,IAAL,IAAaA,IAAb;AACA,WAAO,IAAP;AACD;;AACDE,EAAAA,GAAG,GAAG;AACJ,QAAIC,QAAQ,GAAG,KAAKH,IAAL,CACZN,OADY,CACJ,yBADI,EACuB,KAAKK,MAAL,CAAYN,IADnC,EAEZC,OAFY,CAEJ,aAFI,EAEWF,aAAa,CAAC,KAAKO,MAAL,CAAYN,IAAb,CAFxB,EAGZC,OAHY,CAGJ,aAHI,EAGWF,aAAa,CAAC,KAAKO,MAAL,CAAYN,IAAZ,CAAiBW,WAAjB,EAAD,CAHxB,CAAf;AAIA,UAAMH,KAAN,CAAYE,QAAZ;AACA,WAAO,MAAMD,GAAN,EAAP;AACD;;AApBgC,C,CAuBnC;;;AACA,MAAMG,gBAAgB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,CAAzB;;AAEA,SAASC,mBAAT,CAA6BP,MAA7B,EAAqD;AACnD,SAAO,SAASQ,aAAT,CAAuBlB,KAAvB,EAAyC;AAC9C,QAAI,CAACgB,gBAAgB,CAACnB,QAAjB,CAA0BI,gBAAKkB,OAAL,CAAanB,KAAK,CAACC,IAAnB,CAA1B,CAAD,IAAwDS,MAAM,CAACN,IAAnE,EAAyE;AACvE,aAAO,IAAIG,WAAJ,CAAgBG,MAAhB,CAAP;AACD;;AACD,WAAOU,SAAP;AACD,GALD;AAMD;AAED;;;;;;;;;;AAQO,eAAeC,+BAAf,CACLC,YADK,EAEL3B,WAFK,EAGL4B,cAA8B,GAAG,KAH5B,EAILb,MAJK,EAKL;AACAc,oBAAOC,aAAP,CAAqBC,IAArB,CACE,+FADF;;AAGAF,oBAAOC,aAAP,CAAqBE,IAArB,CAA0B;AAAEC,IAAAA,IAAI,EAAEC,4BAAiBC;AAAzB,GAA1B,EAA+D,6BAA/D;;AACA,QAAMC,iCAAiC,CAACT,YAAD,EAAe3B,WAAf,EAA4Be,MAA5B,CAAvC;;AACAc,oBAAOC,aAAP,CAAqBE,IAArB,CACE;AAAEC,IAAAA,IAAI,EAAEC,4BAAiBC;AAAzB,GADF,EAEE,kCAFF;;AAIA,QAAME,gBAAgB,CAACrC,WAAD,CAAtB;;AACA6B,oBAAOC,aAAP,CAAqBE,IAArB,CAA0B;AAAEC,IAAAA,IAAI,EAAEC,4BAAiBC;AAAzB,GAA1B,EAA+D,4BAA/D;;AACA,QAAMG,wBAAwB,CAACtC,WAAD,EAAc4B,cAAd,CAA9B;AAEA,SAAO5B,WAAP;AACD;AAED;;;;;;AAIO,eAAeoC,iCAAf,CACLT,YADK,EAEL3B,WAFK,EAGLe,MAHK,EAIL;AACA,QAAMwB,uBAAuB,CAACZ,YAAD,EAAe3B,WAAf,EAA4B;AACvDS,IAAAA,IAAI,EAAE,UAAUM,MAAV,GAAmBA,MAAM,CAACN,IAA1B,GAAiCM,MAAM,CAACyB,IAAP,CAAY/B;AADI,GAA5B,CAA7B;AAIA,MAAIgC,OAAO,GAAG,KAAIC,mBAAJ,EAAapC,gBAAKqC,IAAL,CAAU3C,WAAV,EAAuB,UAAvB,CAAb,CAAd;AACA,MAAI4C,OAAO,GAAG,uBAAM,MAAMH,OAAO,CAACI,SAAR,EAAZ,GAAiC9B,MAAjC,CAAd;AACA,QAAM0B,OAAO,CAACK,UAAR,CAAmBF,OAAnB,CAAN;AAEA,MAAIG,WAAW,GAAG,KAAIL,mBAAJ,EAAapC,gBAAKqC,IAAL,CAAU3C,WAAV,EAAuB,cAAvB,CAAb,CAAlB;AACA,MAAIgD,WAAW,GAAG,MAAMD,WAAW,CAACF,SAAZ,EAAxB,CAVA,CAWA;AACA;;AACAG,EAAAA,WAAW,GAAG,EAAE,GAAGA,WAAL;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAAd,CAbA,CAcA;;AACA,SAAOD,WAAW,CAACvC,IAAnB;AACA,SAAOuC,WAAW,CAACE,OAAnB;AACA,SAAOF,WAAW,CAACG,WAAnB;AACA,SAAOH,WAAW,CAACI,IAAnB;AACA,SAAOJ,WAAW,CAACK,UAAnB,CAnBA,CAoBA;;AACA,SAAOL,WAAW,CAACM,SAAnB;AACA,SAAON,WAAW,CAACO,UAAnB;AACA,SAAOP,WAAW,CAACQ,KAAnB;AACA,QAAMT,WAAW,CAACD,UAAZ,CAAuBE,WAAvB,CAAN;AAEA,SAAOhD,WAAP;AACD;AAED;;;;;AAGO,eAAeuC,uBAAf,CACLZ,YADK,EAEL8B,UAFK,EAGL1C,MAHK,EAIL;AACA,QAAM2C,kBAAOC,OAAP,CAAeC,MAAf,CACJjC,YADI,EAEJkC,SAAS,IAAI;AACX,WAAOC,2BAA2B,CAACL,UAAD,EAAa1C,MAAb,EAAqB8C,SAArB,CAAlC;AACD,GAJG,EAKJ;AACEE,IAAAA,KAAK,EAAEzD,gBAAKqC,IAAL,CAAUqB,wBAAaC,oBAAb,EAAV,EAA+C,gBAA/C;AADT,GALI,CAAN;AAUA,SAAOR,UAAP;AACD;;AAED,eAAeK,2BAAf,CACEL,UADF,EAEE1C,MAFF,EAGE8C,SAHF,EAIE;AACA,QAAMK,mBAAGC,MAAH,CAAUV,UAAV,CAAN;AACA,QAAM,IAAIW,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,UAAMC,aAAa,GAAGC,eAAIC,CAAJ,CAAM;AAC1BC,MAAAA,GAAG,EAAEjB,UADqB;AAE1BkB,MAAAA,KAAK,EAAE,CAFmB;AAG1B;AACA;AACAC,MAAAA,SAAS,EAAEtD,mBAAmB,CAACP,MAAD,CALJ;;AAM1B8D,MAAAA,OAAO,CAACxE,KAAD,EAAmB;AACxB,YAAIU,MAAM,CAACN,IAAX,EAAiB;AACf;AACAJ,UAAAA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,CACVI,OADU,CAET,aAFS,EAGTL,KAAK,CAACC,IAAN,CAAWJ,QAAX,CAAoB,SAApB,IACIM,aAAa,CAACO,MAAM,CAACN,IAAP,CAAYW,WAAZ,EAAD,CADjB,GAEIZ,aAAa,CAACO,MAAM,CAACN,IAAR,CALR,EAOVC,OAPU,CAOF,aAPE,EAOaF,aAAa,CAACO,MAAM,CAACN,IAAR,CAAb,CAA2BW,WAA3B,EAPb,CAAb;AAQD;;AACD,YAAIf,KAAK,CAACyE,IAAN,IAAc,UAAUC,IAAV,CAAe1E,KAAK,CAACyE,IAArB,CAAd,IAA4CxE,gBAAK0E,QAAL,CAAc3E,KAAK,CAACC,IAApB,MAA8B,WAA9E,EAA2F;AACzF;AACA;AACAD,UAAAA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,CAAWI,OAAX,CAAmB,YAAnB,EAAiC,YAAjC,CAAb;AACD;AACF;;AAvByB,KAAN,CAAtB;;AAyBAmD,IAAAA,SAAS,CAACoB,EAAV,CAAa,OAAb,EAAsBX,MAAtB;AACAC,IAAAA,aAAa,CAACU,EAAd,CAAiB,OAAjB,EAA0BX,MAA1B;AACAC,IAAAA,aAAa,CAACU,EAAd,CAAiB,OAAjB,EAA0BZ,OAA1B;AACAR,IAAAA,SAAS,CAACqB,IAAV,CAAeX,aAAf;AACD,GA9BK,CAAN;AA+BD;;AAEM,eAAelC,gBAAf,CACL8C,IADK,EAELC,KAA2C,GAAG;AAAEC,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,MAAM,EAAE;AAAzB,CAFzC,EAGL;AACA;AACA,MAAI;AACF,UAAM,2BAAW,KAAX,EAAkB,CAAC,WAAD,EAAc,uBAAd,CAAlB,EAA0D;AAC9DZ,MAAAA,GAAG,EAAES;AADyD,KAA1D,CAAN;AAGA,KAACC,KAAK,CAACC,MAAP,IACExD,kBAAO0D,MAAP,CAAcC,KAAd,CAAoB,iEAApB,CADF;AAED,GAND,CAME,OAAOC,CAAP,EAAU;AACV,QAAIA,CAAC,CAACC,KAAF,KAAY,QAAhB,EAA0B;AACxB,OAACN,KAAK,CAACC,MAAP,IAAiBxD,kBAAO0D,MAAP,CAAcxD,IAAd,CAAmB,mDAAnB,CAAjB;AACA,aAAO,KAAP;AACD;AACF,GAbD,CAeA;;;AACA,MAAI;AACF,UAAM,2BAAW,KAAX,EAAkB,CAAC,MAAD,CAAlB,EAA4B;AAAE2C,MAAAA,GAAG,EAAES;AAAP,KAA5B,CAAN;AACA,KAACC,KAAK,CAACC,MAAP,IAAiBxD,kBAAO0D,MAAP,CAAcvD,IAAd,CAAmB,+BAAnB,CAAjB;;AAEA,QAAIoD,KAAK,CAACE,MAAV,EAAkB;AAChB,YAAM,2BAAW,KAAX,EAAkB,CAAC,KAAD,EAAQ,OAAR,CAAlB,EAAoC;AAAEZ,QAAAA,GAAG,EAAES,IAAP;AAAaQ,QAAAA,KAAK,EAAE;AAApB,OAApC,CAAN;AACA,YAAM,2BAAW,KAAX,EAAkB,CAAC,QAAD,EAAW,IAAX,EAAiB,wBAAjB,CAAlB,EAA8D;AAClEjB,QAAAA,GAAG,EAAES,IAD6D;AAElEQ,QAAAA,KAAK,EAAE;AAF2D,OAA9D,CAAN;AAID;;AACD,WAAO,IAAP;AACD,GAZD,CAYE,OAAOF,CAAP,EAAU;AACV;AACA,WAAO,KAAP;AACD;AACF;;AAEM,eAAenD,wBAAf,CACLtC,WADK,EAEL4B,cAFK,EAGLwD,KAA0B,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAHxB,EAIL;AACA,QAAMO,OAAO,GAAG;AAAElB,IAAAA,GAAG,EAAE1E,WAAP;AAAoBqF,IAAAA,MAAM,EAAED,KAAK,CAACC;AAAlC,GAAhB;;AACA,MAAIzD,cAAc,KAAK,MAAvB,EAA+B;AAC7B,UAAMiE,IAAI,GAAG,KAAIC,oCAAJ,EAAuBF,OAAvB,CAAb;AACA,UAAM1C,OAAO,GAAG,MAAM2C,IAAI,CAACE,YAAL,EAAtB;AACA,UAAMC,UAAU,GAAG,MAAMH,IAAI,CAACI,cAAL,CAAoB,YAApB,CAAzB;;AACA,QAAIC,kBAAOC,SAAP,CAAiBjD,OAAjB,EAA0B,eAA1B,KAA8C8C,UAAU,KAAK,cAAjE,EAAiF;AAC/E,YAAMI,MAAM,GAAG9F,gBAAKqC,IAAL,CAAU3C,WAAV,EAAuB,aAAvB,CAAf;;AACA,UAAIqG,UAAU,GAAG,EAAjB;;AACA,UAAI;AACFA,QAAAA,UAAU,GAAGnC,mBAAGoC,YAAH,CAAgBF,MAAhB,EAAwB,MAAxB,CAAb;AACD,OAFD,CAEE,OAAOG,KAAP,EAAc;AACd,YAAIA,KAAK,CAACtE,IAAN,KAAe,QAAnB,EAA6B;AAC3B,gBAAMsE,KAAN;AACD;AACF;;AACD,YAAMxF,MAAM,GAAGsF,UAAU,GAAGG,kBAAKC,QAAL,CAAcJ,UAAd,CAAH,GAA+B,EAAxD;AACAtF,MAAAA,MAAM,CAACiF,UAAP,GAAoB,cAApB;AACA,OAACZ,KAAK,CAACC,MAAP,IACExD,kBAAO0D,MAAP,CAAcxD,IAAd,CACG,SAAQmB,OAAQ,iFADnB,CADF;AAIA,OAACkC,KAAK,CAACC,MAAP,IAAiBxD,kBAAO0D,MAAP,CAAcvD,IAAd,CAAoB,WAAUoE,MAAO,KAArC,CAAjB;;AACAlC,yBAAGwC,aAAH,CAAiBN,MAAjB,EAAyBI,kBAAKG,QAAL,CAAc5F,MAAd,CAAzB;AACD;;AACD,UAAM8E,IAAI,CAACe,YAAL,EAAN;AACD,GAxBD,MAwBO;AACL,UAAM,KAAIC,mCAAJ,EAAsBjB,OAAtB,EAA+BgB,YAA/B,EAAN;AACD;AACF;;AAEM,eAAeE,sBAAf,CAAsC3B,IAAtC,EAAoD;AACzDA,EAAAA,IAAI,GAAG7E,gBAAK+D,OAAL,CAAac,IAAb,CAAP,CADyD,CAGzD;;AACA,QAAM4B,kBAAkB,GAAG/C,wBAAa+C,kBAAb,EAA3B;;AACA,MAAIC,UAAU,GAAG,MAAMD,kBAAkB,CAAClE,SAAnB,EAAvB,CALyD,CAMzD;;AACAmE,EAAAA,UAAU,GAAGA,UAAU,CAACC,MAAX,CAAmBC,GAAD,IAAiBA,GAAG,KAAK/B,IAA3C,CAAb;AACA6B,EAAAA,UAAU,CAACG,OAAX,CAAmBhC,IAAnB;AACA,SAAO,MAAM4B,kBAAkB,CAACjE,UAAnB,CAA8BkE,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoB,GAApB,CAA9B,CAAb;AACD;;AAcD;AACO,eAAeC,mBAAf,CAAmClC,IAAnC,EAAuE;AAC5E,QAAMmC,IAAI,GAAG,MAAMC,gBAAYC,mBAAZ,EAAnB;;AAEA,MAAI,CAACF,IAAL,EAAW;AACT,UAAM,IAAInH,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,MAAI;AAAEsH,IAAAA;AAAF,MAAeH,IAAnB,CAP4E,CAS5E;;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAU,yBAAUvC,IAAV,CAAhB;AAEA,QAAM1E,IAAI,GAAGiH,GAAG,CAACC,IAAjB;AACA,QAAM;AAAEzE,IAAAA,OAAF;AAAW0E,IAAAA;AAAX,MAA0BF,GAAhC;;AAEA,MAAI,CAACjH,IAAL,EAAW;AACT;AACA,UAAM,IAAIN,KAAJ,CACH,+JADG,CAAN;AAGD;;AAED,MAAI,CAAC+C,OAAL,EAAc;AACZ,UAAM,IAAI/C,KAAJ,CACH,gLADG,CAAN;AAGD;;AAED,QAAM0H,iBAAiB,GAAGpH,IAA1B;AACA,QAAMqH,cAAc,GAAGL,QAAvB;AACA,QAAMM,qBAAqB,GAAI,IAAGD,cAAe,IAAGD,iBAAkB,EAAtE;AACA,QAAMG,mBAAmB,GAAGN,GAAG,CAACO,GAAJ,GAAUP,GAAG,CAACO,GAAJ,CAAQC,gBAAlB,GAAqC,IAAjE;AACA,QAAMC,cAAc,GAAGT,GAAG,CAACU,OAAJ,GAAcV,GAAG,CAACU,OAAJ,CAAYC,OAA1B,GAAoC,IAA3D;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAE;AACJb,MAAAA,QADI;AAEJK,MAAAA,cAFI;AAGJD,MAAAA,iBAHI;AAIJE,MAAAA,qBAJI;AAKJH,MAAAA,UAAU,EAAEA,UALR;AAMJI,MAAAA,mBANI;AAOJG,MAAAA;AAPI;AADD,GAAP;AAWD;;AAEM,eAAeI,SAAf,CAAyBC,SAAzB,EAA4CC,IAA5C,EAA0DC,aAAsB,GAAG,IAAnF,EAAyF;AAC9F,QAAMpB,IAAI,GAAG,MAAMC,gBAAYC,mBAAZ,EAAnB;;AACA,QAAMmB,GAAG,GAAGC,gBAAMC,aAAN,CAAoBvB,IAApB,CAAZ;;AACA,SAAO,MAAMqB,GAAG,CAACG,SAAJ,CAAc,cAAd,EAA8B;AACzCC,IAAAA,YAAY,EAAEP,SAD2B;AAEzCQ,IAAAA,GAAG,EAAEP,IAFoC;AAGzCQ,IAAAA,gBAAgB,EAAEP;AAHuB,GAA9B,CAAb;AAKD,C,CAED;;;AACO,eAAeQ,yBAAf,CAAyClJ,WAAzC,EAA8D;AACnE,MAAImJ,EAAE,GAAG,MAAMC,eAAe,GAACvG,SAAhB,CAA0B7C,WAA1B,CAAf;AACA,MAAIqJ,UAAU,GAAGF,EAAE,CAACG,aAApB;;AACA,MAAID,UAAJ,EAAgB;AACd,WAAOA,UAAP;AACD,GAFD,MAEO;AACL,WAAOE,2BAA2B,CAACvJ,WAAD,CAAlC;AACD;AACF;;AAEM,eAAeuJ,2BAAf,CAA2CvJ,WAA3C,EAAgE;AACrE,MAAIqJ,UAAU,GAAGG,QAAQ,GAACC,cAAT,EAAjB;AACAL,EAAAA,eAAe,GAACM,QAAhB,CAAyB1J,WAAzB,EAAsC;AAAEsJ,IAAAA,aAAa,EAAED;AAAjB,GAAtC;AACA,SAAOA,UAAP;AACD","sourcesContent":["import { BareAppConfig, ExpoConfig, getConfig } from '@expo/config';\n\nimport { getEntryPoint } from '@expo/config/paths';\nimport fs from 'fs-extra';\nimport merge from 'lodash/merge';\nimport path from 'path';\nimport spawnAsync from '@expo/spawn-async';\nimport JsonFile from '@expo/json-file';\nimport Minipass from 'minipass';\nimport pacote, { PackageSpec } from 'pacote';\nimport { Readable } from 'stream';\nimport tar, { ReadEntry } from 'tar';\nimport yaml from 'js-yaml';\n\nimport { NpmPackageManager, YarnPackageManager } from '@expo/package-manager';\nimport semver from 'semver';\nimport Api from './Api';\nimport ApiV2 from './ApiV2';\nimport Logger from './Logger';\nimport NotificationCode from './NotificationCode';\nimport UserManager from './User';\nimport * as UrlUtils from './UrlUtils';\nimport UserSettings from './UserSettings';\nimport * as ProjectSettings from './ProjectSettings';\n\ntype AppJsonInput = { expo: Partial<ExpoConfig> & { name: string } };\ntype TemplateConfig = { name: string };\n\nconst supportedPlatforms = ['ios', 'android', 'web'];\n\nexport function determineEntryPoint(projectRoot: string, platform?: string): string {\n  if (platform && !supportedPlatforms.includes(platform)) {\n    throw new Error(\n      `Failed to resolve the project's entry file: The platform \"${platform}\" is not supported.`\n    );\n  }\n  // TODO: Bacon: support platform extension resolution like .ios, .native\n  // const platforms = [platform, 'native'].filter(Boolean) as string[];\n  const platforms: string[] = [];\n\n  const entry = getEntryPoint(projectRoot, ['./index'], platforms);\n  if (!entry)\n    throw new Error(\n      `The project entry file could not be resolved. Please either define it in the \\`package.json\\` (main), \\`app.json\\` (expo.entryPoint), create an \\`index.js\\`, or install the \\`expo\\` package.`\n    );\n\n  return path.relative(projectRoot, entry);\n}\n\nfunction sanitizedName(name: string) {\n  return name\n    .replace(/[\\W_]+/g, '')\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '');\n}\n\nclass Transformer extends Minipass {\n  data: string;\n  config: TemplateConfig;\n\n  constructor(config: TemplateConfig) {\n    super();\n    this.data = '';\n    this.config = config;\n  }\n  write(data: string) {\n    this.data += data;\n    return true;\n  }\n  end() {\n    let replaced = this.data\n      .replace(/Hello App Display Name/g, this.config.name)\n      .replace(/HelloWorld/g, sanitizedName(this.config.name))\n      .replace(/helloworld/g, sanitizedName(this.config.name.toLowerCase()));\n    super.write(replaced);\n    return super.end();\n  }\n}\n\n// Binary files, don't process these (avoid decoding as utf8)\nconst binaryExtensions = ['.png', '.jar', '.keystore'];\n\nfunction createFileTransform(config: TemplateConfig) {\n  return function transformFile(entry: ReadEntry) {\n    if (!binaryExtensions.includes(path.extname(entry.path)) && config.name) {\n      return new Transformer(config);\n    }\n    return undefined;\n  };\n}\n\n/**\n * Extract a template app to a given file path, initialize a git repo, install\n * npm dependencies, and log information about each of the steps.\n *\n * @deprecated - callers want to have more control over the logging around each\n * step, this is deprecated in favor of calling the methods that it is made up\n * of individually\n */\nexport async function extractAndInitializeTemplateApp(\n  templateSpec: PackageSpec,\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm' = 'npm',\n  config: AppJsonInput | BareAppConfig\n) {\n  Logger.notifications.warn(\n    'extractAndInitializeTemplateApp is deprecated. Use extractAndPrepareTemplateAppAsync instead.'\n  );\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Extracting project files...');\n  await extractAndPrepareTemplateAppAsync(templateSpec, projectRoot, config);\n  Logger.notifications.info(\n    { code: NotificationCode.PROGRESS },\n    'Initializing a git repository...'\n  );\n  await initGitRepoAsync(projectRoot);\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Installing dependencies...');\n  await installDependenciesAsync(projectRoot, packageManager);\n\n  return projectRoot;\n}\n\n/**\n * Extract a template app to a given file path and clean up any properties left over from npm to\n * prepare it for usage.\n */\nexport async function extractAndPrepareTemplateAppAsync(\n  templateSpec: PackageSpec,\n  projectRoot: string,\n  config: AppJsonInput | BareAppConfig\n) {\n  await extractTemplateAppAsync(templateSpec, projectRoot, {\n    name: 'name' in config ? config.name : config.expo.name,\n  });\n\n  let appFile = new JsonFile(path.join(projectRoot, 'app.json'));\n  let appJson = merge(await appFile.readAsync(), config);\n  await appFile.writeAsync(appJson);\n\n  let packageFile = new JsonFile(path.join(projectRoot, 'package.json'));\n  let packageJson = await packageFile.readAsync();\n  // Adding `private` stops npm from complaining about missing `name` and `version` fields.\n  // We don't add a `name` field because it also exists in `app.json`.\n  packageJson = { ...packageJson, private: true };\n  // These are metadata fields related to the template package, let's remove them from the package.json.\n  delete packageJson.name;\n  delete packageJson.version;\n  delete packageJson.description;\n  delete packageJson.tags;\n  delete packageJson.repository;\n  // pacote adds these, but we don't want them in the package.json of the project.\n  delete packageJson._resolved;\n  delete packageJson._integrity;\n  delete packageJson._from;\n  await packageFile.writeAsync(packageJson);\n\n  return projectRoot;\n}\n\n/**\n * Extract a template app to a given file path.\n */\nexport async function extractTemplateAppAsync(\n  templateSpec: PackageSpec,\n  targetPath: string,\n  config: { name?: string }\n) {\n  await pacote.tarball.stream(\n    templateSpec,\n    tarStream => {\n      return extractTemplateAppAsyncImpl(targetPath, config, tarStream);\n    },\n    {\n      cache: path.join(UserSettings.dotExpoHomeDirectory(), 'template-cache'),\n    }\n  );\n\n  return targetPath;\n}\n\nasync function extractTemplateAppAsyncImpl(\n  targetPath: string,\n  config: { name?: string },\n  tarStream: Readable\n) {\n  await fs.mkdirp(targetPath);\n  await new Promise((resolve, reject) => {\n    const extractStream = tar.x({\n      cwd: targetPath,\n      strip: 1,\n      // TODO(ville): pending https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36598\n      // @ts-ignore property missing from the type definition\n      transform: createFileTransform(config),\n      onentry(entry: ReadEntry) {\n        if (config.name) {\n          // Rewrite paths for bare workflow\n          entry.path = entry.path\n            .replace(\n              /HelloWorld/g,\n              entry.path.includes('android')\n                ? sanitizedName(config.name.toLowerCase())\n                : sanitizedName(config.name)\n            )\n            .replace(/helloworld/g, sanitizedName(config.name).toLowerCase());\n        }\n        if (entry.type && /^file$/i.test(entry.type) && path.basename(entry.path) === 'gitignore') {\n          // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n          // See: https://github.com/npm/npm/issues/1862\n          entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n        }\n      },\n    });\n    tarStream.on('error', reject);\n    extractStream.on('error', reject);\n    extractStream.on('close', resolve);\n    tarStream.pipe(extractStream);\n  });\n}\n\nexport async function initGitRepoAsync(\n  root: string,\n  flags: { silent: boolean; commit: boolean } = { silent: false, commit: true }\n) {\n  // let's see if we're in a git tree\n  try {\n    await spawnAsync('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: root,\n    });\n    !flags.silent &&\n      Logger.global.debug('New project is already inside of a git repo, skipping git init.');\n  } catch (e) {\n    if (e.errno === 'ENOENT') {\n      !flags.silent && Logger.global.warn('Unable to initialize git repo. `git` not in PATH.');\n      return false;\n    }\n  }\n\n  // not in git tree, so let's init\n  try {\n    await spawnAsync('git', ['init'], { cwd: root });\n    !flags.silent && Logger.global.info('Initialized a git repository.');\n\n    if (flags.commit) {\n      await spawnAsync('git', ['add', '--all'], { cwd: root, stdio: 'ignore' });\n      await spawnAsync('git', ['commit', '-m', 'Created a new Expo app'], {\n        cwd: root,\n        stdio: 'ignore',\n      });\n    }\n    return true;\n  } catch (e) {\n    // no-op -- this is just a convenience and we don't care if it fails\n    return false;\n  }\n}\n\nexport async function installDependenciesAsync(\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm',\n  flags: { silent: boolean } = { silent: false }\n) {\n  const options = { cwd: projectRoot, silent: flags.silent };\n  if (packageManager === 'yarn') {\n    const yarn = new YarnPackageManager(options);\n    const version = await yarn.versionAsync();\n    const nodeLinker = await yarn.getConfigAsync('nodeLinker');\n    if (semver.satisfies(version, '>=2.0.0-rc.24') && nodeLinker !== 'node-modules') {\n      const yarnRc = path.join(projectRoot, '.yarnrc.yml');\n      let yamlString = '';\n      try {\n        yamlString = fs.readFileSync(yarnRc, 'utf8');\n      } catch (error) {\n        if (error.code !== 'ENOENT') {\n          throw error;\n        }\n      }\n      const config = yamlString ? yaml.safeLoad(yamlString) : {};\n      config.nodeLinker = 'node-modules';\n      !flags.silent &&\n        Logger.global.warn(\n          `Yarn v${version} detected, enabling experimental Yarn v2 support using the node-modules plugin.`\n        );\n      !flags.silent && Logger.global.info(`Writing ${yarnRc}...`);\n      fs.writeFileSync(yarnRc, yaml.safeDump(config));\n    }\n    await yarn.installAsync();\n  } else {\n    await new NpmPackageManager(options).installAsync();\n  }\n}\n\nexport async function saveRecentExpRootAsync(root: string) {\n  root = path.resolve(root);\n\n  // Write the recent Exps JSON file\n  const recentExpsJsonFile = UserSettings.recentExpsJsonFile();\n  let recentExps = await recentExpsJsonFile.readAsync();\n  // Filter out copies of this so we don't get dupes in this list\n  recentExps = recentExps.filter((dir: string) => dir !== root);\n  recentExps.unshift(root);\n  return await recentExpsJsonFile.writeAsync(recentExps.slice(0, 100));\n}\n\ntype PublishInfo = {\n  args: {\n    username: string;\n    remoteUsername: string;\n    remotePackageName: string;\n    remoteFullPackageName: string;\n    sdkVersion: string;\n    iosBundleIdentifier?: string | null;\n    androidPackage?: string | null;\n  };\n};\n\n// TODO: remove / change, no longer publishInfo, this is just used for signing\nexport async function getPublishInfoAsync(root: string): Promise<PublishInfo> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (!user) {\n    throw new Error('Attempted to login in offline mode. This is a bug.');\n  }\n\n  let { username } = user;\n\n  // Evaluate the project config and throw an error if the `sdkVersion` cannot be found.\n  const { exp } = getConfig(root);\n\n  const name = exp.slug;\n  const { version, sdkVersion } = exp;\n\n  if (!name) {\n    // slug is made programmatically for app.json\n    throw new Error(\n      `Cannot find the project's \\`slug\\`. Please add a \\`name\\` or \\`slug\\` field in the project's \\`app.json\\` or \\`app.config.js\\`). ex: \\`\"slug\": \"my-project\"\\``\n    );\n  }\n\n  if (!version) {\n    throw new Error(\n      `Cannot find the project's \\`version\\`. Please define it in one of the project's config files: \\`package.json\\`, \\`app.json\\`, or \\`app.config.js\\`. ex: \\`\"version\": \"1.0.0\"\\``\n    );\n  }\n\n  const remotePackageName = name;\n  const remoteUsername = username;\n  const remoteFullPackageName = `@${remoteUsername}/${remotePackageName}`;\n  const iosBundleIdentifier = exp.ios ? exp.ios.bundleIdentifier : null;\n  const androidPackage = exp.android ? exp.android.package : null;\n\n  return {\n    args: {\n      username,\n      remoteUsername,\n      remotePackageName,\n      remoteFullPackageName,\n      sdkVersion: sdkVersion!,\n      iosBundleIdentifier,\n      androidPackage,\n    },\n  };\n}\n\nexport async function sendAsync(recipient: string, url_: string, allowUnauthed: boolean = true) {\n  const user = await UserManager.ensureLoggedInAsync();\n  const api = ApiV2.clientForUser(user);\n  return await api.postAsync('send-project', {\n    emailOrPhone: recipient,\n    url: url_,\n    includeExpoLinks: allowUnauthed,\n  });\n}\n\n// TODO: figure out where these functions should live\nexport async function getProjectRandomnessAsync(projectRoot: string) {\n  let ps = await ProjectSettings.readAsync(projectRoot);\n  let randomness = ps.urlRandomness;\n  if (randomness) {\n    return randomness;\n  } else {\n    return resetProjectRandomnessAsync(projectRoot);\n  }\n}\n\nexport async function resetProjectRandomnessAsync(projectRoot: string) {\n  let randomness = UrlUtils.someRandomness();\n  ProjectSettings.setAsync(projectRoot, { urlRandomness: randomness });\n  return randomness;\n}\n"],"file":"../Exp.js","sourceRoot":"/@expo/xdl@57.9.17/src"}