{"version":3,"sources":["webpack-utils/createWebpackCompiler.ts"],"names":["CONSOLE_TAG","SHOULD_CLEAR_CONSOLE","PLATFORM_TAG","ProjectUtils","getPlatformTag","withTag","messages","join","log","projectRoot","message","showInDevtools","logInfo","console","logWarning","logError","printInstructions","appName","urls","showHelp","printPreviewNotice","chalk","bold","lanUrlForTerminal","localUrlForTerminal","magenta","borderColor","padding","createWebpackCompiler","config","nonInteractive","webpackFactory","onFinished","compiler","hooks","invalid","tap","isFirstCompile","done","stats","statsData","toJson","all","warnings","errors","isSuccessful","length","red","yellow","printSuccessMessages","cyan"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport chalk from 'chalk';\nimport clearConsole from 'react-dev-utils/clearConsole';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport boxen from 'boxen';\nimport { Urls } from 'react-dev-utils/WebpackDevServerUtils';\nimport webpack from 'webpack';\n\nimport * as ProjectUtils from '../project/ProjectUtils';\nimport { logEnvironmentInfo, shouldWebpackClearLogs } from './WebpackEnvironment';\n\nconst CONSOLE_TAG = 'expo';\n\nconst SHOULD_CLEAR_CONSOLE = shouldWebpackClearLogs();\n\nconst PLATFORM_TAG = ProjectUtils.getPlatformTag('web');\n\nconst withTag = (...messages: any[]) => [PLATFORM_TAG + ' ', ...messages].join('');\n\nfunction log(projectRoot: string, message: string, showInDevtools = true) {\n  if (showInDevtools) {\n    ProjectUtils.logInfo(projectRoot, CONSOLE_TAG, message);\n  } else {\n    console.log(message);\n  }\n}\n\nfunction logWarning(projectRoot: string, message: string) {\n  ProjectUtils.logWarning(projectRoot, CONSOLE_TAG, withTag(message));\n}\n\nfunction logError(projectRoot: string, message: string) {\n  ProjectUtils.logError(projectRoot, CONSOLE_TAG, withTag(message));\n}\n\nexport function printInstructions(\n  projectRoot: string,\n  {\n    appName,\n    urls,\n    showInDevtools,\n    showHelp,\n  }: {\n    appName: string;\n    urls: Urls;\n    showInDevtools: boolean;\n    showHelp: boolean;\n  }\n) {\n  printPreviewNotice(projectRoot, showInDevtools);\n\n  let message = '\\n';\n  message += `${ProjectUtils.getPlatformTag('React')} You can now view ${chalk.bold(\n    appName\n  )} in the browser.\\n`;\n\n  if (urls.lanUrlForTerminal) {\n    message += `\\n  ${chalk.bold('Local:')}            ${urls.localUrlForTerminal}`;\n    message += `\\n  ${chalk.bold('On Your Network:')}  ${urls.lanUrlForTerminal}`;\n  } else {\n    message += `\\n  ${urls.localUrlForTerminal}`;\n  }\n\n  message += `\\n\\nNote that the development build is not optimized.\\n`;\n\n  message += `\\n \\u203A To create a production build, run ${chalk.bold(`expo build:web`)}`;\n  message += `\\n \\u203A Press ${chalk.bold(`w`)} to open the project in browser.`;\n  message += `\\n \\u203A Press ${chalk.bold(`Ctrl+C`)} to exit.`;\n\n  log(projectRoot, message, showInDevtools);\n\n  if (showHelp) {\n    const PLATFORM_TAG = ProjectUtils.getPlatformTag('Expo');\n    log(\n      projectRoot,\n      `\\n${PLATFORM_TAG} Press ${chalk.bold('?')} to show a list of all available commands.`,\n      showInDevtools\n    );\n  }\n}\n\nexport function printPreviewNotice(projectRoot: string, showInDevtools: boolean) {\n  log(\n    projectRoot,\n    boxen(\n      chalk.magenta(\n        'Expo web is in beta, please report any bugs or missing features on the Expo repo.\\n' +\n          'You can follow the V1 release for more info: https://github.com/expo/expo/issues/6782'\n      ),\n      { borderColor: 'magenta', padding: 1 }\n    ),\n    showInDevtools\n  );\n}\n\nexport default function createWebpackCompiler({\n  projectRoot,\n  appName,\n  config,\n  urls,\n  nonInteractive,\n  webpackFactory,\n  onFinished,\n}: {\n  projectRoot: string;\n  appName: string;\n  config: webpack.Configuration;\n  urls: Urls;\n  nonInteractive?: boolean;\n  webpackFactory: (options?: webpack.Configuration) => webpack.Compiler;\n  onFinished: () => void;\n}) {\n  // \"Compiler\" is a low-level interface to Webpack.\n  // It lets us listen to some events and provide our own custom messages.\n  const compiler = webpackFactory(config);\n\n  // \"invalid\" event fires when you have changed a file, and Webpack is\n  // recompiling a bundle. WebpackDevServer takes care to pause serving the\n  // bundle, so if you refresh, it'll wait instead of serving the old one.\n  // \"invalid\" is short for \"bundle invalidated\", it doesn't imply any errors.\n  compiler.hooks.invalid.tap('invalid', () => {\n    log(projectRoot, '\\nCompiling...');\n  });\n\n  let isFirstCompile = true;\n\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tap('done', async stats => {\n    if (SHOULD_CLEAR_CONSOLE && !nonInteractive) {\n      clearConsole();\n    }\n\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    // We only construct the warnings and errors for speed:\n    // https://github.com/facebook/create-react-app/issues/4492#issuecomment-421959548\n    const statsData = stats.toJson({\n      all: false,\n      warnings: true,\n      errors: true,\n    });\n\n    const messages = formatWebpackMessages(statsData);\n\n    const isSuccessful = !messages.errors.length && !messages.warnings.length;\n\n    if (isSuccessful) {\n      logEnvironmentInfo(projectRoot, CONSOLE_TAG, config);\n    }\n\n    if (isSuccessful && !isFirstCompile && !nonInteractive) {\n      printInstructions(projectRoot, {\n        appName,\n        urls,\n        showInDevtools: isFirstCompile,\n        showHelp: true,\n      });\n    }\n\n    onFinished();\n    isFirstCompile = false;\n\n    // If errors exist, only show errors.\n    if (messages.errors.length) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (messages.errors.length > 1) {\n        messages.errors.length = 1;\n      }\n      logError(projectRoot, chalk.red('Failed to compile.\\n') + messages.errors.join('\\n\\n'));\n      return;\n    }\n\n    // Show warnings if no errors were found.\n    if (messages.warnings.length) {\n      logWarning(\n        projectRoot,\n        chalk.yellow('Compiled with warnings.\\n') + messages.warnings.join('\\n\\n')\n      );\n    }\n  });\n\n  return compiler;\n}\n\nexport function printSuccessMessages({\n  projectRoot,\n  appName,\n  urls,\n  config,\n  isFirstCompile,\n  nonInteractive,\n}: {\n  projectRoot: string;\n  appName: string;\n  config: webpack.Configuration;\n  urls: Urls;\n  isFirstCompile: boolean;\n  nonInteractive?: boolean;\n}) {\n  log(projectRoot, chalk.bold.cyan(`Compiled successfully!`));\n  printPreviewNotice(projectRoot, isFirstCompile);\n  logEnvironmentInfo(projectRoot, CONSOLE_TAG, config);\n\n  if (!nonInteractive || isFirstCompile) {\n    printInstructions(projectRoot, {\n      appName,\n      urls,\n      showInDevtools: isFirstCompile,\n      showHelp: false,\n    });\n  }\n}\n"],"file":"../../webpack-utils/createWebpackCompiler.js","sourceRoot":"/@expo/xdl@57.9.17/src"}