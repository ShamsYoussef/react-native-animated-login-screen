{"version":3,"sources":["Watchman.ts"],"names":["WAIT_FOR_WATCHMAN_VERSION_MS","isPlatformSupported","process","platform","addToPathAsync","Binaries","unblockAndGetVersionAsync","projectRoot","result","_unblockAndVersionAsync","watchmanVersion","JSON","parse","stdout","trim","version","e","_versionAsync","error","_unblockAsync","env","TMPDIR","USER","fs","removeSync","path","join"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAEA,MAAMA,4BAA4B,GAAG,IAArC;;AAEO,SAASC,mBAAT,GAAwC;AAC7C,SAAOC,OAAO,CAACC,QAAR,KAAqB,QAA5B;AACD;;AAEM,eAAeC,cAAf,GAA+C;AACpD,MAAI,CAACH,mBAAmB,EAAxB,EAA4B;AAC1B;AACD;;AAED,QAAMI,QAAQ,GAACD,cAAT,CAAwB,UAAxB,CAAN;AACD;;AAEM,eAAeE,yBAAf,CAAyCC,WAAzC,EAAuF;AAC5F,MAAI,CAACN,mBAAmB,EAAxB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,MAAI;AACF;AACA;AACA;AACA;AACA,UAAMO,MAAM,GAAG,MAAMC,uBAAuB,CAACF,WAAD,CAA5C;AACA,UAAMG,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACK,MAAP,CAAcC,IAAd,EAAX,EAAiCC,OAAzD;AACA,WAAOL,eAAP;AACD,GARD,CAQE,OAAOM,CAAP,EAAU;AACV;AACA;AACA,WAAO,IAAP;AACD;AACF;;AAED,eAAeP,uBAAf,CAAuCF,WAAvC,EAAmF;AACjF,MAAI;AACF,WAAO,MAAM,yBAASU,aAAa,EAAtB,EAA0BjB,4BAA1B,CAAb;AACD,GAFD,CAEE,OAAOkB,KAAP,EAAc;AACd,UAAMC,aAAa,CAACZ,WAAD,CAAnB;AACA,WAAO,MAAM,yBACXU,aAAa,EADF,EAEXjB,4BAFW,EAGX,yDAHW,CAAb;AAKD;AACF;;AAED,eAAemB,aAAf,CAA6BZ,WAA7B,EAAkE;AAChE,MAAIL,OAAO,CAACkB,GAAR,CAAYC,MAAZ,IAAsBnB,OAAO,CAACkB,GAAR,CAAYE,IAAtC,EAA4C;AAC1C;AACAC,uBAAGC,UAAH,CAAcC,gBAAKC,IAAL,CAAUxB,OAAO,CAACkB,GAAR,CAAYC,MAAtB,EAA+B,GAAEnB,OAAO,CAACkB,GAAR,CAAYE,IAAK,QAAlD,CAAd,EAF0C,CAG1C;;;AACAC,uBAAGC,UAAH,CAAe,+BAA8BtB,OAAO,CAACkB,GAAR,CAAYE,IAAK,QAA9D;AACD;;AACD,MAAIpB,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;AACjC,UAAM,2BAAW,WAAX,EAAwB,CAC5B,QAD4B,EAE5B,IAF4B,EAG5B,2DAH4B,CAAxB,CAAN;AAKD;;AACD,MAAII,WAAJ,EAAiB;AACf,UAAM,2BAAW,UAAX,EAAuB,CAAC,WAAD,EAAcA,WAAd,CAAvB,CAAN;AACA,UAAM,2BAAW,UAAX,EAAuB,CAAC,eAAD,EAAkBA,WAAlB,CAAvB,CAAN;AACD;AACF;;AAED,eAAeU,aAAf,GAAqD;AACnD,SAAO,MAAM,2BAAW,UAAX,EAAuB,CAAC,SAAD,CAAvB,CAAb;AACD","sourcesContent":["import spawnAsync, { SpawnResult } from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport pTimeout from 'p-timeout';\nimport path from 'path';\n\nimport * as Binaries from './Binaries';\n\nconst WAIT_FOR_WATCHMAN_VERSION_MS = 3000;\n\nexport function isPlatformSupported(): boolean {\n  return process.platform === 'darwin';\n}\n\nexport async function addToPathAsync(): Promise<void> {\n  if (!isPlatformSupported()) {\n    return;\n  }\n\n  await Binaries.addToPathAsync('watchman');\n}\n\nexport async function unblockAndGetVersionAsync(projectRoot?: string): Promise<string | null> {\n  if (!isPlatformSupported()) {\n    return null;\n  }\n\n  try {\n    // `watchman version` returns:\n    // {\n    //  \"version\": \"4.7.0\"\n    // }\n    const result = await _unblockAndVersionAsync(projectRoot);\n    const watchmanVersion = JSON.parse(result.stdout.trim()).version;\n    return watchmanVersion;\n  } catch (e) {\n    // TODO: Maybe check to make sure this is ENOENT (which means watchman isn't installed)\n    // We might want to report other errors\n    return null;\n  }\n}\n\nasync function _unblockAndVersionAsync(projectRoot?: string): Promise<SpawnResult> {\n  try {\n    return await pTimeout(_versionAsync(), WAIT_FOR_WATCHMAN_VERSION_MS);\n  } catch (error) {\n    await _unblockAsync(projectRoot);\n    return await pTimeout(\n      _versionAsync(),\n      WAIT_FOR_WATCHMAN_VERSION_MS,\n      '`watchman version` failed even after `launchctl unload`'\n    );\n  }\n}\n\nasync function _unblockAsync(projectRoot?: string): Promise<void> {\n  if (process.env.TMPDIR && process.env.USER) {\n    // XDL's copy of watchman:\n    fs.removeSync(path.join(process.env.TMPDIR, `${process.env.USER}-state`));\n    // homebrew's watchman:\n    fs.removeSync(`/usr/local/var/run/watchman/${process.env.USER}-state`);\n  }\n  if (process.platform === 'darwin') {\n    await spawnAsync('launchctl', [\n      'unload',\n      '-F',\n      '~/Library/LaunchAgents/com.github.facebook.watchman.plist',\n    ]);\n  }\n  if (projectRoot) {\n    await spawnAsync('watchman', ['watch-del', projectRoot]);\n    await spawnAsync('watchman', ['watch-project', projectRoot]);\n  }\n}\n\nasync function _versionAsync(): Promise<SpawnResult> {\n  return await spawnAsync('watchman', ['version']);\n}\n"],"file":"../Watchman.js","sourceRoot":"/@expo/xdl@57.9.17/src"}