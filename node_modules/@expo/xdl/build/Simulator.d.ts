export declare function isPlatformSupported(): boolean;
export declare function _isSimulatorInstalledAsync(): Promise<boolean>;
export declare function _openAndBootSimulatorAsync(): Promise<void>;
export declare function _isSimulatorRunningAsync(): Promise<boolean>;
export declare function _dirForSimulatorDevice(udid: string): string;
export declare function _quitSimulatorAsync(): Promise<string>;
export declare function _isExpoAppInstalledOnCurrentBootedSimulatorAsync(): Promise<boolean>;
export declare function _waitForExpoAppInstalledOnCurrentBootedSimulatorAsync(): Promise<boolean>;
export declare function _expoVersionOnCurrentBootedSimulatorAsync(): Promise<string | null>;
export declare function _checkExpoUpToDateAsync(): Promise<void>;
export declare function _downloadSimulatorAppAsync(url?: string, downloadProgressCallback?: (roundedProgress: number) => void): Promise<string>;
export declare function _installExpoOnSimulatorAsync(url?: string): Promise<import("@expo/spawn-async").SpawnResult>;
export declare function _uninstallExpoAppFromSimulatorAsync(): Promise<void>;
export declare function _simulatorCacheDirectory(): string;
export declare function upgradeExpoAsync(url?: string): Promise<boolean>;
export declare function _openUrlInSimulatorAsync(url: string): Promise<import("@expo/spawn-async").SpawnResult>;
export declare function openUrlInSimulatorSafeAsync(url: string, isDetached?: boolean): Promise<{
    success: true;
} | {
    success: false;
    msg: string;
}>;
export declare function openProjectAsync(projectRoot: string): Promise<{
    success: true;
    url: string;
} | {
    success: false;
    error: string;
}>;
export declare function openWebProjectAsync(projectRoot: string): Promise<{
    success: true;
    url: string;
} | {
    success: false;
    error: string;
}>;
