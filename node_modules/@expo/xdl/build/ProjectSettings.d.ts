import { ProjectTarget } from '@expo/config';
export declare type ProjectSettings = {
    hostType: 'localhost' | 'lan' | 'tunnel';
    lanType: 'ip' | 'hostname';
    dev: boolean;
    minify: boolean;
    urlRandomness: string | null;
    https: boolean;
};
export declare type Settings = ProjectSettings;
declare type PackagerInfo = {
    expoServerPort?: number | null;
    packagerPort?: number | null;
    packagerPid?: number | null;
    expoServerNgrokUrl?: string | null;
    packagerNgrokUrl?: string | null;
    ngrokPid?: number | null;
    devToolsPort?: number | null;
    webpackServerPort?: number | null;
    target?: ProjectTarget;
};
export declare function readAsync(projectRoot: string): Promise<ProjectSettings>;
export declare function setAsync(projectRoot: string, json: Partial<ProjectSettings>): Promise<ProjectSettings>;
export declare function readPackagerInfoAsync(projectRoot: string): Promise<PackagerInfo>;
export declare function setPackagerInfoAsync(projectRoot: string, json: Partial<PackagerInfo>): Promise<PackagerInfo>;
export declare function dotExpoProjectDirectory(projectRoot: string): string;
export declare function dotExpoProjectDirectoryExists(projectRoot: string): boolean;
export declare function getPackagerOptsAsync(projectRoot: string): Promise<ProjectSettings>;
export {};
