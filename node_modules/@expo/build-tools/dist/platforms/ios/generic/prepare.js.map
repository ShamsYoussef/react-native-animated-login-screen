{"version":3,"file":"prepare.js","sourceRoot":"","sources":["../../../../src/platforms/ios/generic/prepare.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAExB,wDAA0B;AAE1B,kDAAyD;AAEzD,8CAAmD;AAInD,KAAK,UAAU,UAAU,CACvB,MAAmC,EACnC,UAAkB,EAClB,UAAkB;IAElB,MAAM,uBAAuB,GAAG,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,uBAAuB,CAAC,CAAC;IACtF,MAAM,uBAAuB,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC;IACrF,MAAM,2BAA2B,GAAG,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAC/F,MAAM,2BAA2B,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;IAE7F,OAAO;QACL,QAAQ,EAAE,oBAAQ,CAAC,GAAG;QACtB,UAAU;QACV,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,sBAAsB,EAAE,KAAK;QAC7B,OAAO,EAAE;YACP,yBAAyB,EAAE,uBAAuB;YAClD,uBAAuB,EAAE;gBACvB,UAAU,EAAE,2BAA2B;gBACvC,QAAQ,EAAE,MAAM,CAAC,uBAAuB,CAAC,QAAQ;aAClD;YACD,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,mBAAY,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;SACpF;QACD,UAAU,EAAE,eAAe;QAC3B,YAAY,EAAE,6BAA6B;KAC5C,CAAC;AACJ,CAAC;AAED,kBAAe,UAAU,CAAC","sourcesContent":["import path from 'path';\n\nimport fs from 'fs-extra';\n\nimport { Platform, BuildType } from '../../../constants';\nimport { types } from '../../../buildConfig';\nimport { readFileList } from '../../../utils/file';\n\nimport { GenericiOSJob } from './job';\n\nasync function prepareJob(\n  config: types.GenericiOSBuildConfig,\n  projectUrl: string,\n  projectDir: string,\n): Promise<GenericiOSJob> {\n  const provisioningProfilePath = path.join(projectDir, config.provisioningProfilePath);\n  const provisioningProfileData = await fs.readFile(provisioningProfilePath, 'base64');\n  const distributionCertificatePath = path.join(projectDir, config.distributionCertificate.path);\n  const distributionCertificateData = await fs.readFile(distributionCertificatePath, 'base64');\n\n  return {\n    platform: Platform.iOS,\n    projectUrl,\n    type: BuildType.Generic,\n    nativeProjectDirectory: 'ios',\n    secrets: {\n      provisioningProfileBase64: provisioningProfileData,\n      distributionCertificate: {\n        dataBase64: distributionCertificateData,\n        password: config.distributionCertificate.password,\n      },\n      files: config.secretFiles ? await readFileList(config.secretFiles, projectDir) : [],\n    },\n    outputName: 'TurtleExpoApp',\n    artifactPath: 'ios/build/TurtleExpoApp.ipa',\n  };\n}\n\nexport default prepareJob;\n"]}