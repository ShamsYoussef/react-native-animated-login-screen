{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../../../src/platforms/android/generic/builder.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAExB,sEAAuC;AACvC,wDAA0B;AAG1B,oDAA+C;AAI/C,KAAK,UAAU,YAAY,CAAC,GAAkC;;IAC5D,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC;IAE5B,MAAM,cAAc,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,CAAC;IACxC,MAAM,sBAAsB,GAAG,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,sBAAsB,CAAC,CAAC;IAErF,MAAM,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;IAC3D,KAAK,MAAM,IAAI,UAAI,GAAG,0CAAE,OAAO,CAAC,KAAK,EAAE;QACrC,MAAM,kBAAE,CAAC,SAAS,CAAC,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;KAClG;IAED,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACrC,MAAM,CAAC,KAAK,CAAC,sBAAsB,GAAG,CAAC,aAAa,QAAQ,sBAAsB,EAAE,CAAC,CAAC;IACtF,MAAM,sBAAK,CACT,WAAW,EACX,CAAC,GAAG,CAAC,aAAa,CAAC,EACnB;QACE,GAAG,EAAE,sBAAsB;QAC3B,MAAM;QACN,GAAG,EAAE;YACH,GAAG,OAAO,CAAC,GAAG;SACf;KACF,CACF,CAAC;IAEF,OAAO,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;AACrD,CAAC;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import path from 'path';\n\nimport spawn from '@expo/turtle-spawn';\nimport fs from 'fs-extra';\n\nimport { BuilderCtx } from '../../../context';\nimport { setup } from '../../../utils/project';\n\nimport { GenericAndroidJob } from './job';\n\nasync function buildGeneric(ctx: BuilderCtx<GenericAndroidJob>): Promise<string> {\n  const { job, logger } = ctx;\n\n  const buildDirectory = await setup(ctx);\n  const nativeProjectDirectory = path.join(buildDirectory, job.nativeProjectDirectory);\n\n  logger.info('Writing secrets to the project\\'s directory');\n  for (const file of job?.secrets.files) {\n    await fs.writeFile(path.join(buildDirectory, file.path), Buffer.from(file.base64Data, 'base64'));\n  }\n\n  logger.info('Starting gradle build');\n  logger.debug(`Running './gradlew ${job.gradleCommand}' in ${nativeProjectDirectory}`);\n  await spawn(\n    './gradlew',\n    [job.gradleCommand],\n    {\n      cwd: nativeProjectDirectory,\n      logger,\n      env: {\n        ...process.env,\n      },\n    },\n  );\n\n  return path.join(buildDirectory, job.artifactPath);\n}\n\nexport default buildGeneric;\n"]}