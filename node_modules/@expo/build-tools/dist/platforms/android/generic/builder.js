"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const turtle_spawn_1 = __importDefault(require("@expo/turtle-spawn"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const project_1 = require("../../../utils/project");
async function buildGeneric(ctx) {
    var _a;
    const { job, logger } = ctx;
    const buildDirectory = await project_1.setup(ctx);
    const nativeProjectDirectory = path_1.default.join(buildDirectory, job.nativeProjectDirectory);
    logger.info('Writing secrets to the project\'s directory');
    for (const file of (_a = job) === null || _a === void 0 ? void 0 : _a.secrets.files) {
        await fs_extra_1.default.writeFile(path_1.default.join(buildDirectory, file.path), Buffer.from(file.base64Data, 'base64'));
    }
    logger.info('Starting gradle build');
    logger.debug(`Running './gradlew ${job.gradleCommand}' in ${nativeProjectDirectory}`);
    await turtle_spawn_1.default('./gradlew', [job.gradleCommand], {
        cwd: nativeProjectDirectory,
        logger,
        env: {
            ...process.env,
        },
    });
    return path_1.default.join(buildDirectory, job.artifactPath);
}
exports.default = buildGeneric;
//# sourceMappingURL=builder.js.map