{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../src/buildConfig/schema.ts"],"names":[],"mappings":";;;;;AAAA,oDAA4B;AAE5B,4CAAyC;AAEzC,MAAM,kBAAkB,GAAG,aAAG,CAAC,MAAM,CAAC;IACpC,YAAY,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,gBAAgB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACzC,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,WAAW,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACrC,CAAC,CAAC;AAEH,MAAM,oBAAoB,GAAG,aAAG,CAAC,MAAM,CAAC;IACtC,uBAAuB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChD,uBAAuB,EAAE,aAAG,CAAC,MAAM,CAAC;QAClC,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC7B,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAClC,CAAC,CAAC,QAAQ,EAAE;CACd,CAAC,CAAC;AAEH,MAAM,aAAa,GAAG,aAAG,CAAC,MAAM,CAAC;IAC/B,WAAW,EAAE,aAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,aAAG,CAAC,MAAM,EAAE,CAAC;CAC7C,CAAC,CAAC;AAEH,MAAM,wBAAwB,GAAG,aAAG,CAAC,MAAM,CAAC;IAC1C,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAS,CAAC,OAAO,CAAC;IAC3C,OAAO,EAAE,aAAa;IACtB,GAAG,EAAE,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC;CAChD,CAAC,CAAC;AAEH,MAAM,wBAAwB,GAAG,aAAG,CAAC,MAAM,CAAC;IAC1C,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAS,CAAC,OAAO,CAAC;IAC3C,OAAO,EAAE,aAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,QAAQ,EAAE,EAAE,CAAC;IAChE,GAAG,EAAE,oBAAoB;CAC1B,CAAC,CAAC;AAEH,MAAM,iBAAiB,GAAG,aAAG,CAAC,MAAM,CAAC;IACnC,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAS,CAAC,OAAO,EAAE,qBAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE;CAC1E,CAAC;KACC,IAAI,CAAC,aAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAS,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC;KAC3F,IAAI,CAAC,aAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAS,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC,CAAC;AAE/F,kBAAe,iBAAiB,CAAC","sourcesContent":["import Joi from '@hapi/joi';\n\nimport { BuildType } from '../constants';\n\nconst KeystoreInfoSchema = Joi.object({\n  keystorePath: Joi.string().required(),\n  keystorePassword: Joi.string().required(),\n  keyAlias: Joi.string().required(),\n  keyPassword: Joi.string().required(),\n});\n\nconst iOSCredentialsSchema = Joi.object({\n  provisioningProfilePath: Joi.string().required(),\n  distributionCertificate: Joi.object({\n    path: Joi.string().required(),\n    password: Joi.string().required(),\n  }).required(),\n});\n\nconst SecretsSchema = Joi.object({\n  secretFiles: Joi.array().items(Joi.string()),\n});\n\nconst GenericBuildConfigSchema = Joi.object({\n  type: Joi.string().valid(BuildType.Generic),\n  android: SecretsSchema,\n  ios: iOSCredentialsSchema.concat(SecretsSchema),\n});\n\nconst ManagedBuildConfigSchema = Joi.object({\n  type: Joi.string().valid(BuildType.Managed),\n  android: Joi.object({ keystore: KeystoreInfoSchema.required() }),\n  ios: iOSCredentialsSchema,\n});\n\nconst BuildConfigSchema = Joi.object({\n  type: Joi.string().valid(BuildType.Generic, BuildType.Managed).required(),\n})\n  .when(Joi.object({ type: BuildType.Generic }).unknown(), { then: GenericBuildConfigSchema })\n  .when(Joi.object({ type: BuildType.Managed }).unknown(), { then: ManagedBuildConfigSchema });\n\nexport default BuildConfigSchema;\n"]}