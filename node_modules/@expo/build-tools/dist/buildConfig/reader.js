"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const schema_1 = __importDefault(require("./schema"));
const BUILD_CONFIG_FILE = 'turtle.json';
async function read(buildDir) {
    const buildConfigFilePath = path_1.default.join(buildDir, BUILD_CONFIG_FILE);
    let turtleJSONRaw;
    try {
        const turtleJSONContents = await fs_extra_1.default.readFile(buildConfigFilePath, 'utf8');
        turtleJSONRaw = JSON.parse(turtleJSONContents);
    }
    catch (err) {
        throw new Error(`${BUILD_CONFIG_FILE} must exist in the project root directory and consist a valid json`);
    }
    const { value: buildConfig, error } = schema_1.default.validate(turtleJSONRaw, {
        stripUnknown: true,
        convert: true,
        abortEarly: false,
    });
    if (error) {
        throw new Error(`${BUILD_CONFIG_FILE} is not valid [${error.toString()}]`);
    }
    return buildConfig;
}
exports.default = read;
//# sourceMappingURL=reader.js.map