import { BuildType } from '../constants';
interface KeystoreInfo {
    keystorePath: string;
    keystorePassword: string;
    keyAlias: string;
    keyPassword: string;
}
interface SecretFiles {
    secretFiles?: string[];
}
interface iOSCredentials {
    provisioningProfilePath: string;
    distributionCertificate: {
        path: string;
        password: string;
    };
}
declare type GenericAndroidBuildConfig = SecretFiles;
interface GenericiOSBuildConfig extends iOSCredentials, SecretFiles {
}
interface GenericBuildConfig {
    type: BuildType.Generic;
    android?: GenericAndroidBuildConfig;
    ios?: GenericiOSBuildConfig;
}
interface ManagedAndroidBuildConfig {
    keystore: KeystoreInfo;
}
declare type ManagediOSBuildConfig = iOSCredentials;
interface ManagedBuildConfig {
    type: BuildType.Managed;
    android?: ManagedAndroidBuildConfig;
    ios?: ManagediOSBuildConfig;
}
declare type BuildConfig = GenericBuildConfig | ManagedBuildConfig;
export { BuildConfig, GenericBuildConfig, GenericAndroidBuildConfig, GenericiOSBuildConfig, ManagedBuildConfig, ManagedAndroidBuildConfig, ManagediOSBuildConfig, KeystoreInfo, iOSCredentials, };
