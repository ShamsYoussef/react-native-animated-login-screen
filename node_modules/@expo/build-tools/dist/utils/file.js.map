{"version":3,"file":"file.js","sourceRoot":"","sources":["../../src/utils/file.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAExB,wDAA0B;AAI1B,KAAK,UAAU,YAAY,CAAC,KAAe,EAAE,OAAO,GAAG,GAAG;IACxD,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;QACpD,UAAU,EAAE,MAAM,kBAAE,CAAC,QAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,EAAE,QAAQ,CAAC;QACzE,IAAI,EAAE,YAAY;KACnB,CAAC,CAAC,CAAC,CAAC;AACP,CAAC;AAEQ,oCAAY","sourcesContent":["import path from 'path';\n\nimport fs from 'fs-extra';\n\nimport { FileList } from '../types';\n\nasync function readFileList(paths: string[], rootDir = '.'): Promise<FileList> {\n  return Promise.all(paths.map(async (relativePath) => ({\n    base64Data: await fs.readFile(path.join(rootDir, relativePath), 'base64'),\n    path: relativePath,\n  })));\n}\n\nexport { readFileList };\n"]}