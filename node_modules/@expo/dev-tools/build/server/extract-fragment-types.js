"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
// @ts-ignore
const graphql_1 = require("graphql");
const GraphQLSchema_1 = __importDefault(require("./graphql/GraphQLSchema"));
graphql_1.graphql(GraphQLSchema_1.default, `
    {
      __schema {
        types {
          kind
          name
          possibleTypes {
            name
          }
        }
      }
    }
  `).then((result) => {
    // here we're filtering out any type information unrelated to unions or interfaces
    const filteredData = result.data.__schema.types.filter((type) => type.possibleTypes !== null);
    result.data.__schema.types = filteredData;
    fs_1.default.writeFile('./fragmentTypes.json', JSON.stringify(result.data), err => {
        if (err) {
            console.error('Error writing fragmentTypes file', err);
        }
        else {
            console.log('Fragment types successfully extracted!');
        }
    });
});
//# sourceMappingURL=extract-fragment-types.js.map