{"version":3,"file":"DevToolsServer.js","sourceRoot":"","sources":["../../server/DevToolsServer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger, PackagerLogsStream, ProjectSettings, ProjectUtils } from '@expo/xdl';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\n// @ts-ignore\nimport * as graphql from 'graphql';\nimport express from 'express';\nimport freeportAsync from 'freeport-async';\nimport path from 'path';\nimport http from 'http';\nimport crypto from 'crypto';\nimport base64url from 'base64url';\n\nimport AsyncIterableRingBuffer from './graphql/AsyncIterableRingBuffer';\nimport GraphQLSchema from './graphql/GraphQLSchema';\nimport createContext, { PROCESS_SOURCE } from './graphql/createContext';\nimport Issues, { Issue } from './graphql/Issues';\n\nconst serverStartTimeUTCString = new Date().toUTCString();\n\nfunction setHeaders(res: express.Response): void {\n  // Set the Last-Modified header to server start time because otherwise it\n  // becomes Sat, 26 Oct 1985 08:15:00 GMT for files installed from npm.\n  res.setHeader('Last-Modified', serverStartTimeUTCString);\n}\n\nasync function generateSecureRandomTokenAsync(): Promise<string> {\n  return new Promise((resolve, reject) => {\n    crypto.randomBytes(32, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(base64url.fromBase64(buffer.toString('base64')));\n    });\n  });\n}\n\nexport async function createAuthenticationContextAsync({ port }: { port: number }) {\n  const clientAuthenticationToken = await generateSecureRandomTokenAsync();\n  const endpointUrlToken = await generateSecureRandomTokenAsync();\n  const graphQLEndpointPath = `/${endpointUrlToken}/graphql`;\n  const hostname = `${devtoolsGraphQLHost()}:${port}`;\n  const webSocketGraphQLUrl = `ws://${hostname}${graphQLEndpointPath}`;\n  const allowedOrigin = `http://${hostname}`;\n  return {\n    clientAuthenticationToken,\n    graphQLEndpointPath,\n    webSocketGraphQLUrl,\n    allowedOrigin,\n    requestHandler: (request: express.Request, response: express.Response): void => {\n      response.json({ webSocketGraphQLUrl, clientAuthenticationToken });\n    },\n  };\n}\n\nexport async function startAsync(projectDir: string): Promise<string> {\n  const port = await freeportAsync(19002, { hostnames: [null, 'localhost'] });\n  const server = express();\n\n  const authenticationContext = await createAuthenticationContextAsync({ port });\n  server.get('/dev-tools-info', authenticationContext.requestHandler);\n  server.use(\n    '/_next',\n    express.static(path.join(__dirname, '../client/_next'), {\n      // All paths in the _next folder include hashes, so they can be cached more aggressively.\n      immutable: true,\n      maxAge: '1y',\n      setHeaders,\n    })\n  );\n  server.use(express.static(path.join(__dirname, '../client'), { setHeaders }));\n\n  const listenHostname = devtoolsHost();\n  const httpServer = http.createServer(server);\n  await new Promise((resolve, reject) => {\n    httpServer.once('error', reject);\n    httpServer.once('listening', resolve);\n    httpServer.listen(port, listenHostname);\n  });\n  startGraphQLServer(projectDir, httpServer, authenticationContext);\n  await ProjectSettings.setPackagerInfoAsync(projectDir, { devToolsPort: port });\n  return `http://${listenHostname}:${port}`;\n}\n\nexport function startGraphQLServer(\n  projectDir: string,\n  httpServer: http.Server,\n  authenticationContext: any\n) {\n  const layout = createLayout();\n  const issues = new Issues();\n  const messageBuffer = createMessageBuffer(projectDir, issues);\n  SubscriptionServer.create(\n    {\n      schema: GraphQLSchema,\n      execute: graphql.execute,\n      subscribe: graphql.subscribe,\n      onOperation: (operation, params) => ({\n        ...params,\n        context: createContext({\n          projectDir,\n          messageBuffer,\n          layout,\n          issues,\n        }),\n      }),\n      onConnect: connectionParams => {\n        if (\n          !connectionParams.clientAuthenticationToken ||\n          connectionParams.clientAuthenticationToken !==\n            authenticationContext.clientAuthenticationToken\n        ) {\n          throw new Error('Dev Tools API authentication failed.');\n        }\n        return true;\n      },\n    },\n    {\n      server: httpServer,\n      path: authenticationContext.graphQLEndpointPath,\n      verifyClient: info => {\n        return info.origin === authenticationContext.allowedOrigin;\n      },\n    }\n  );\n}\n\nfunction devtoolsHost(): string {\n  if (process.env.EXPO_DEVTOOLS_LISTEN_ADDRESS) {\n    return process.env.EXPO_DEVTOOLS_LISTEN_ADDRESS.trim();\n  }\n  return 'localhost';\n}\n\nfunction devtoolsGraphQLHost(): string {\n  if (process.env.EXPO_DEVTOOLS_LISTEN_ADDRESS && process.env.REACT_NATIVE_PACKAGER_HOSTNAME) {\n    return process.env.REACT_NATIVE_PACKAGER_HOSTNAME.trim();\n  } else if (process.env.EXPO_DEVTOOLS_LISTEN_ADDRESS) {\n    return process.env.EXPO_DEVTOOLS_LISTEN_ADDRESS;\n  }\n  return 'localhost';\n}\n\nfunction createLayout() {\n  let layout = {\n    selected: null,\n    sources: null,\n    sourceLastReads: {},\n  };\n  return {\n    get(): any {\n      return layout;\n    },\n    set(newLayout: any): void {\n      layout = {\n        ...layout,\n        ...newLayout,\n      };\n    },\n    setLastRead(sourceId: string, lastReadCursor: any): void {\n      layout.sourceLastReads[sourceId] = lastReadCursor;\n    },\n  };\n}\n\nfunction createMessageBuffer(projectRoot: string, issues: Issue): AsyncIterableRingBuffer {\n  const buffer = new AsyncIterableRingBuffer(10000);\n\n  // eslint-disable-next-line no-new\n  new PackagerLogsStream({\n    projectRoot,\n    updateLogs: updater => {\n      const chunks = updater([]);\n      chunks.forEach(chunk => {\n        if (chunk.issueId) {\n          if (chunk.issueCleared) {\n            issues.clearIssue(chunk.issueId);\n          } else {\n            issues.addIssue(chunk.issueId, chunk);\n          }\n          return;\n        }\n        buffer.push({\n          type: 'ADDED',\n          sourceId: PROCESS_SOURCE.id,\n          node: chunk,\n        });\n      });\n    },\n    onStartBuildBundle: chunk => {\n      buffer.push({\n        type: 'ADDED',\n        sourceId: PROCESS_SOURCE.id,\n        node: {\n          ...chunk,\n          progress: 0,\n          duration: 0,\n        },\n      });\n    },\n    onProgressBuildBundle: (percentage, start, chunk) => {\n      buffer.push({\n        type: 'UPDATED',\n        sourceId: PROCESS_SOURCE.id,\n        node: {\n          ...chunk,\n          progress: percentage,\n          // @ts-ignore\n          duration: new Date() - (start || new Date()),\n        },\n      });\n    },\n    onFinishBuildBundle: (error, start, end, chunk) => {\n      buffer.push({\n        type: 'UPDATED',\n        sourceId: PROCESS_SOURCE.id,\n        node: {\n          ...chunk,\n          error,\n          // @ts-ignore\n          duration: end - (start || new Date()),\n        },\n      });\n    },\n  });\n\n  // needed for validation logging to function\n  ProjectUtils.attachLoggerStream(projectRoot, {\n    stream: {\n      write: chunk => {\n        if (chunk.tag === 'device') {\n          buffer.push({\n            type: 'ADDED',\n            sourceId: chunk.deviceId,\n            node: chunk,\n          });\n        }\n      },\n    },\n    type: 'raw',\n  });\n\n  Logger.global.addStream({\n    stream: {\n      write: chunk => {\n        buffer.push({\n          type: 'ADDED',\n          sourceId: PROCESS_SOURCE.id,\n          node: chunk,\n        });\n      },\n    },\n    type: 'raw',\n  });\n\n  return buffer;\n}\n"]}