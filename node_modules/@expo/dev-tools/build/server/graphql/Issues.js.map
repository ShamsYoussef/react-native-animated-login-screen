{"version":3,"file":"Issues.js","sourceRoot":"","sources":["../../../server/graphql/Issues.ts"],"names":[],"mappings":";;AAAA,mCAAsC;AAItC,MAAqB,MAAO,SAAQ,qBAAY;IAAhD;;QACE,WAAM,GAA0B,EAAE,CAAC;IAgCrC,CAAC;IA9BC,QAAQ,CAAC,OAAe,EAAE,KAAY;QACpC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACzB,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mCACf,KAAK,KACR,EAAE,EAAE,OAAO,GACZ,CAAC;QACF,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,UAAU,CAAC,OAAe;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,KAAK,EAAE;YACT,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,YAAY;QACV,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAC1C,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;SACvB,CAAC,CAAC,CAAC;IACN,CAAC;CACF;AAjCD,yBAiCC","sourcesContent":["import { EventEmitter } from 'events';\n\nexport type Issue = Record<string, any>;\n\nexport default class Issues extends EventEmitter {\n  issues: Record<string, Issue> = {};\n\n  addIssue(issueId: string, issue: Issue): void {\n    let newIssue = false;\n    if (!this.issues[issueId]) {\n      newIssue = true;\n    }\n    this.issues[issueId] = {\n      ...issue,\n      id: issueId,\n    };\n    if (newIssue) {\n      this.emit('ADDED', this.issues[issueId]);\n    } else {\n      this.emit('UPDATED', this.issues[issueId]);\n    }\n  }\n\n  clearIssue(issueId: string): void {\n    const issue = this.issues[issueId];\n    if (issue) {\n      delete this.issues[issueId];\n      this.emit('DELETED', issue);\n    }\n  }\n\n  getIssueList(): { cursor: string; node: Issue }[] {\n    return Object.keys(this.issues).map(key => ({\n      cursor: key,\n      node: this.issues[key],\n    }));\n  }\n}\n"]}