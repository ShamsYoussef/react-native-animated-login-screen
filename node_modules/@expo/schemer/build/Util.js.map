{"version":3,"file":"Util.js","sourceRoot":"","sources":["../src/Util.ts"],"names":[],"mappings":";;;;;AAAA,uDAA+B;AAC/B,6DAAqC;AACrC,qDAA6B;AAC7B,qDAA6B;AAEhB,QAAA,qBAAqB,GAAG,CAAC,SAAiB,EAAE,EAAE;IACzD,IAAI,OAAO,GAAG,aAAG,CAAC,cAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAClF,OAAO,iBAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,CAAC,CAAC;AACF,+DAA+D;AAClD,QAAA,wBAAwB,GAAG,CAAC,WAAmB,EAAE,EAAE;IAC9D,OAAO,WAAW;SACf,KAAK,CAAC,GAAG,CAAC;SACV,KAAK,CAAC,CAAC,CAAC;SACR,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,YAAY,CAAC;SAC/B,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC,CAAC;AAEW,QAAA,iBAAiB,GAAG,CAAC,MAAc,EAAE,SAAiB,EAAE,EAAE;IACrE,OAAO,aAAG,CAAC,MAAM,EAAE,6BAAqB,CAAC,SAAS,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC","sourcesContent":["import fill from 'lodash/fill';\nimport flatten from 'lodash/flatten';\nimport get from 'lodash/get';\nimport zip from 'lodash/zip';\n\nexport const fieldPathToSchemaPath = (fieldPath: string) => {\n  let newPath = zip(fill(fieldPath.split('.'), 'properties'), fieldPath.split('.'));\n  return flatten(newPath).join('.');\n};\n// Assumption: used only for jsonPointer returned from traverse\nexport const schemaPointerToFieldPath = (jsonPointer: string) => {\n  return jsonPointer\n    .split('/')\n    .slice(2)\n    .filter(e => e !== 'properties')\n    .join('.');\n};\n\nexport const fieldPathToSchema = (schema: Object, fieldPath: string) => {\n  return get(schema, fieldPathToSchemaPath(fieldPath));\n};\n"]}