"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_1 = __importDefault(require("os"));
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const templateFile_1 = __importDefault(require("../templateFile"));
const templatePath = path_1.default.join(__dirname, 'example.json.template');
describe('templateFile', () => {
    const outputFile = path_1.default.join(os_1.default.tmpdir(), 'output.json');
    afterEach(async () => {
        await fs_extra_1.default.remove(outputFile);
    });
    it('should create an output file with the filled-out template', async () => {
        await templateFile_1.default(templatePath, { SOME_KEY: 123, ANOTHER_KEY: 456 }, outputFile);
        const outputFileContents = await fs_extra_1.default.readFile(outputFile, 'utf8');
        const outputFileJson = JSON.parse(outputFileContents);
        expect(outputFileJson).toEqual({ someKey: 123, anotherKey: 456 });
    });
    it('should throw an error if some variables are missing', async () => {
        const templateFilePromise = templateFile_1.default(templatePath, {}, outputFile);
        await expect(templateFilePromise).rejects.toThrow(/is not defined/);
    });
});
//# sourceMappingURL=templateFile.test.js.map